import{j as Kt}from"./jsx-runtime-vNq4Oc-g.js";import{r as xe,R as ai}from"./index-4g5l5LRQ.js";import{a as si}from"./_commonjsHelpers-4gQjN7DL.js";import{A as ci}from"./authpage-x4Qce4ez.js";import{_ as li}from"./iframe-2PrjO4i7.js";import"./chatClient-IE6urVs8.js";import"./Header-d35V3uDQ.js";import"./sidebar-KgcvYIVk.js";import"../sb-preview/runtime.js";var Ae={exports:{}};const hi={},di=Object.freeze(Object.defineProperty({__proto__:null,default:hi},Symbol.toStringTag,{value:"Module"})),It=si(di),ui="dotenv",gi="16.4.1",mi="Loads environment variables from .env file",pi="lib/main.js",fi="lib/main.d.ts",Ci={".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},yi={"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec",prerelease:"npm test",release:"standard-version"},Ti={type:"git",url:"git://github.com/motdotla/dotenv.git"},Ai="https://github.com/motdotla/dotenv?sponsor=1",Ii=["dotenv","env",".env","environment","variables","config","settings"],Ei="README.md",vi="BSD-2-Clause",Si={"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},wi={node:">=12"},_i={fs:!1},Ri={name:ui,version:gi,description:mi,main:pi,types:fi,exports:Ci,scripts:yi,repository:Ti,funding:Ai,keywords:Ii,readmeFilename:Ei,license:vi,devDependencies:Si,engines:wi,browser:_i};var ze={};const st=It,Zt=It,ki=It,bi=It,Oi=Ri,en=Oi.version,Ni=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function Pi(a){const e={};let t=a.toString();t=t.replace(/\r\n?/mg,`
`);let n;for(;(n=Ni.exec(t))!=null;){const o=n[1];let r=n[2]||"";r=r.trim();const i=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),i==='"'&&(r=r.replace(/\\n/g,`
`),r=r.replace(/\\r/g,"\r")),e[o]=r}return e}function Mi(a){const e=vo(a),t=B.configDotenv({path:e});if(!t.parsed){const i=new Error(`MISSING_DATA: Cannot parse ${e} for an unknown reason`);throw i.code="MISSING_DATA",i}const n=Eo(a).split(","),o=n.length;let r;for(let i=0;i<o;i++)try{const s=n[i].trim(),c=Di(t,s);r=B.decrypt(c.ciphertext,c.key);break}catch(s){if(i+1>=o)throw s}return B.parse(r)}function Li(a){console.log(`[dotenv@${en}][INFO] ${a}`)}function Ui(a){console.log(`[dotenv@${en}][WARN] ${a}`)}function ct(a){console.log(`[dotenv@${en}][DEBUG] ${a}`)}function Eo(a){return a&&a.DOTENV_KEY&&a.DOTENV_KEY.length>0?a.DOTENV_KEY:ze.DOTENV_KEY&&ze.DOTENV_KEY.length>0?ze.DOTENV_KEY:""}function Di(a,e){let t;try{t=new URL(e)}catch(s){if(s.code==="ERR_INVALID_URL"){const c=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development");throw c.code="INVALID_DOTENV_KEY",c}throw s}const n=t.password;if(!n){const s=new Error("INVALID_DOTENV_KEY: Missing key part");throw s.code="INVALID_DOTENV_KEY",s}const o=t.searchParams.get("environment");if(!o){const s=new Error("INVALID_DOTENV_KEY: Missing environment part");throw s.code="INVALID_DOTENV_KEY",s}const r=`DOTENV_VAULT_${o.toUpperCase()}`,i=a.parsed[r];if(!i){const s=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${r} in your .env.vault file.`);throw s.code="NOT_FOUND_DOTENV_ENVIRONMENT",s}return{ciphertext:i,key:n}}function vo(a){let e=null;if(a&&a.path&&a.path.length>0)if(Array.isArray(a.path))for(const t of a.path)st.existsSync(t)&&(e=t.endsWith(".vault")?t:`${t}.vault`);else e=a.path.endsWith(".vault")?a.path:`${a.path}.vault`;else e=Zt.resolve(process.cwd(),".env.vault");return st.existsSync(e)?e:null}function Hi(a){return a[0]==="~"?Zt.join(ki.homedir(),a.slice(1)):a}function Ki(a){Li("Loading env from encrypted .env.vault");const e=B._parseVault(a);let t=ze;return a&&a.processEnv!=null&&(t=a.processEnv),B.populate(t,e,a),{parsed:e}}function Bi(a){let e=Zt.resolve(process.cwd(),".env"),t="utf8";const n=!!(a&&a.debug);if(a){if(a.path!=null){let o=a.path;if(Array.isArray(o)){for(const r of a.path)if(st.existsSync(r)){o=r;break}}e=Hi(o)}a.encoding!=null?t=a.encoding:n&&ct("No encoding is specified. UTF-8 is used by default")}try{const o=B.parse(st.readFileSync(e,{encoding:t}));let r=ze;return a&&a.processEnv!=null&&(r=a.processEnv),B.populate(r,o,a),{parsed:o}}catch(o){return n&&ct(`Failed to load ${e} ${o.message}`),{error:o}}}function Fi(a){if(Eo(a).length===0)return B.configDotenv(a);const e=vo(a);return e?B._configVault(a):(Ui(`You set DOTENV_KEY but you are missing a .env.vault file at ${e}. Did you forget to build it?`),B.configDotenv(a))}function xi(a,e){const t=Buffer.from(e.slice(-64),"hex");let n=Buffer.from(a,"base64");const o=n.subarray(0,12),r=n.subarray(-16);n=n.subarray(12,-16);try{const i=bi.createDecipheriv("aes-256-gcm",t,o);return i.setAuthTag(r),`${i.update(n)}${i.final()}`}catch(i){const s=i instanceof RangeError,c=i.message==="Invalid key length",l=i.message==="Unsupported state or unable to authenticate data";if(s||c){const u=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw u.code="INVALID_DOTENV_KEY",u}else if(l){const u=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw u.code="DECRYPTION_FAILED",u}else throw i}}function Gi(a,e,t={}){const n=!!(t&&t.debug),o=!!(t&&t.override);if(typeof e!="object"){const r=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw r.code="OBJECT_REQUIRED",r}for(const r of Object.keys(e))Object.prototype.hasOwnProperty.call(a,r)?(o===!0&&(a[r]=e[r]),n&&ct(o===!0?`"${r}" is already defined and WAS overwritten`:`"${r}" is already defined and was NOT overwritten`)):a[r]=e[r]}const B={configDotenv:Bi,_configVault:Ki,_parseVault:Mi,config:Fi,decrypt:xi,parse:Pi,populate:Gi};Ae.exports.configDotenv=B.configDotenv;Ae.exports._configVault=B._configVault;Ae.exports._parseVault=B._parseVault;Ae.exports.config=B.config;Ae.exports.decrypt=B.decrypt;Ae.exports.parse=B.parse;Ae.exports.populate=B.populate;Ae.exports=B;/*! @azure/msal-common v14.6.1 2024-01-23 */const d={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",FRAGMENT_RESPONSE_MODE:"fragment",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},tt={SUCCESS_RANGE_START:200,SUCCESS_RANGE_END:299,REDIRECT:302,CLIENT_ERROR_RANGE_START:400,CLIENT_ERROR_RANGE_END:499,SERVER_ERROR_RANGE_START:500,SERVER_ERROR_RANGE_END:599},We=[d.OPENID_SCOPE,d.PROFILE_SCOPE,d.OFFLINE_ACCESS_SCOPE],xn=[...We,d.EMAIL_SCOPE],re={CONTENT_TYPE:"Content-Type",RETRY_AFTER:"Retry-After",CCS_HEADER:"X-AnchorMailbox",WWWAuthenticate:"WWW-Authenticate",AuthenticationInfo:"Authentication-Info",X_MS_REQUEST_ID:"x-ms-request-id",X_MS_HTTP_VERSION:"x-ms-httpver"},F={ID_TOKEN:"idtoken",CLIENT_INFO:"client.info",ADAL_ID_TOKEN:"adal.idtoken",ERROR:"error",ERROR_DESC:"error.description",ACTIVE_ACCOUNT:"active-account",ACTIVE_ACCOUNT_FILTERS:"active-account-filters"},Ce={COMMON:"common",ORGANIZATIONS:"organizations",CONSUMERS:"consumers"},nt={ACCESS_TOKEN:"access_token",XMS_CC:"xms_cc"},$={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},Gn={PLAIN:"plain",S256:"S256"},Qe={QUERY:"query",FRAGMENT:"fragment"},qi={...Qe,FORM_POST:"form_post"},So={IMPLICIT_GRANT:"implicit",AUTHORIZATION_CODE_GRANT:"authorization_code",CLIENT_CREDENTIALS_GRANT:"client_credentials",RESOURCE_OWNER_PASSWORD_GRANT:"password",REFRESH_TOKEN_GRANT:"refresh_token",DEVICE_CODE_GRANT:"device_code",JWT_BEARER:"urn:ietf:params:oauth:grant-type:jwt-bearer"},ot={MSSTS_ACCOUNT_TYPE:"MSSTS",ADFS_ACCOUNT_TYPE:"ADFS",MSAV1_ACCOUNT_TYPE:"MSA",GENERIC_ACCOUNT_TYPE:"Generic"},q={CACHE_KEY_SEPARATOR:"-",CLIENT_INFO_SEPARATOR:"."},A={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},tn="appmetadata",$i="client_info",Ve="1",lt={CACHE_KEY:"authority-metadata",REFRESH_TIME_SECONDS:3600*24},Y={CONFIG:"config",CACHE:"cache",NETWORK:"network",HARDCODED_VALUES:"hardcoded_values"},x={SCHEMA_VERSION:5,MAX_CUR_HEADER_BYTES:80,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},k={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},Ye={DEFAULT_THROTTLE_TIME_SECONDS:60,DEFAULT_MAX_THROTTLE_TIME_SECONDS:3600,THROTTLING_PREFIX:"throttling",X_MS_LIB_CAPABILITY_VALUE:"retry-after, h429"},qn={INVALID_GRANT_ERROR:"invalid_grant",CLIENT_MISMATCH_ERROR:"client_mismatch"},$n={username:"username",password:"password"},rt={httpSuccess:200,httpBadRequest:400},ke={FAILED_AUTO_DETECTION:"1",INTERNAL_CACHE:"2",ENVIRONMENT_VARIABLE:"3",IMDS:"4"},Pt={CONFIGURED_MATCHES_DETECTED:"1",CONFIGURED_NO_AUTO_DETECTION:"2",CONFIGURED_NOT_DETECTED:"3",AUTO_DETECTION_REQUESTED_SUCCESSFUL:"4",AUTO_DETECTION_REQUESTED_FAILED:"5"},pe={NOT_APPLICABLE:"0",FORCE_REFRESH_OR_CLAIMS:"1",NO_CACHED_ACCESS_TOKEN:"2",CACHED_ACCESS_TOKEN_EXPIRED:"3",PROACTIVELY_REFRESHED:"4"},zi={Jwt:"JWT",Jwk:"JWK",Pop:"pop"};/*! @azure/msal-common v14.6.1 2024-01-23 */const nn="unexpected_error",Vi="post_request_failed";/*! @azure/msal-common v14.6.1 2024-01-23 */const zn={[nn]:"Unexpected error in authentication.",[Vi]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."};class N extends Error{constructor(e,t,n){const o=t?`${e}: ${t}`:e;super(o),Object.setPrototypeOf(this,N.prototype),this.errorCode=e||d.EMPTY_STRING,this.errorMessage=t||d.EMPTY_STRING,this.subError=n||d.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function wo(a,e){return new N(a,e?`${zn[a]} ${e}`:zn[a])}/*! @azure/msal-common v14.6.1 2024-01-23 */const on="client_info_decoding_error",_o="client_info_empty_error",rn="token_parsing_error",Ro="null_or_empty_token",le="endpoints_resolution_error",ko="network_error",bo="openid_config_error",Oo="hash_not_deserialized",Ue="invalid_state",No="state_mismatch",ht="state_not_found",Po="nonce_mismatch",an="auth_time_not_found",Mo="max_age_transpired",Yi="multiple_matching_tokens",ji="multiple_matching_accounts",Lo="multiple_matching_appMetadata",Uo="request_cannot_be_made",Do="cannot_remove_empty_scope",Ho="cannot_append_scopeset",Bt="empty_input_scopeset",Wi="device_code_polling_cancelled",Qi="device_code_expired",Ji="device_code_unknown_error",sn="no_account_in_silent_request",Ko="invalid_cache_record",cn="invalid_cache_environment",Ft="no_account_found",xt="no_crypto_object",Gt="unexpected_credential_type",Xi="invalid_assertion",Zi="invalid_client_credential",fe="token_refresh_required",ea="user_timeout_reached",Bo="token_claims_cnf_required_for_signedjwt",Fo="authorization_code_missing_from_server_response",xo="binding_key_not_removed",Go="end_session_endpoint_not_supported",ln="key_id_missing",ta="no_network_connectivity",na="user_canceled",oa="missing_tenant_id_error",v="method_not_implemented",ra="nested_app_auth_bridge_disabled";/*! @azure/msal-common v14.6.1 2024-01-23 */const Vn={[on]:"The client info could not be parsed/decoded correctly",[_o]:"The client info was empty",[rn]:"Token cannot be parsed",[Ro]:"The token is null or empty",[le]:"Endpoints cannot be resolved",[ko]:"Network request failed",[bo]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[Oo]:"The hash parameters could not be deserialized",[Ue]:"State was not the expected format",[No]:"State mismatch error",[ht]:"State not found",[Po]:"Nonce mismatch error",[an]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[Mo]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[Yi]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[ji]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[Lo]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[Uo]:"Token request cannot be made without authorization code or refresh token.",[Do]:"Cannot remove null or empty scope from ScopeSet",[Ho]:"Cannot append ScopeSet",[Bt]:"Empty input ScopeSet cannot be processed",[Wi]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[Qi]:"Device code is expired.",[Ji]:"Device code stopped polling for unknown reasons.",[sn]:"Please pass an account object, silent flow is not supported without account information",[Ko]:"Cache record object was null or undefined.",[cn]:"Invalid environment when attempting to create cache entry",[Ft]:"No account found in cache for given key.",[xt]:"No crypto object detected.",[Gt]:"Unexpected credential type.",[Xi]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[Zi]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[fe]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[ea]:"User defined timeout for device code polling reached",[Bo]:"Cannot generate a POP jwt if the token_claims are not populated",[Fo]:"Server response does not contain an authorization code to proceed",[xo]:"Could not remove the credential's binding key from storage.",[Go]:"The provided authority does not support logout",[ln]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[ta]:"No network connectivity. Check your internet connection.",[na]:"User cancelled the flow.",[oa]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[v]:"This method has not been implemented",[ra]:"The nested app auth bridge is disabled"};class Et extends N{constructor(e,t){super(e,t?`${Vn[e]}: ${t}`:Vn[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,Et.prototype)}}function g(a,e){return new Et(a,e)}/*! @azure/msal-common v14.6.1 2024-01-23 */const dt={createNewGuid:()=>{throw g(v)},base64Decode:()=>{throw g(v)},base64Encode:()=>{throw g(v)},async getPublicKeyThumbprint(){throw g(v)},async removeTokenBindingKey(){throw g(v)},async clearKeystore(){throw g(v)},async signJwt(){throw g(v)},async hashString(){throw g(v)}};/*! @azure/msal-common v14.6.1 2024-01-23 */var R;(function(a){a[a.Error=0]="Error",a[a.Warning=1]="Warning",a[a.Info=2]="Info",a[a.Verbose=3]="Verbose",a[a.Trace=4]="Trace"})(R||(R={}));class ye{constructor(e,t,n){this.level=R.Info;const o=()=>{},r=e||ye.createDefaultLoggerOptions();this.localCallback=r.loggerCallback||o,this.piiLoggingEnabled=r.piiLoggingEnabled||!1,this.level=typeof r.logLevel=="number"?r.logLevel:R.Info,this.correlationId=r.correlationId||d.EMPTY_STRING,this.packageName=t||d.EMPTY_STRING,this.packageVersion=n||d.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:R.Info}}clone(e,t,n){return new ye({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:n||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const r=`${`[${new Date().toUTCString()}] : [${t.correlationId||this.correlationId||""}]`} : ${this.packageName}@${this.packageVersion} : ${R[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,r,t.containsPii||!1)}executeCallback(e,t,n){this.localCallback&&this.localCallback(e,t,n)}error(e,t){this.logMessage(e,{logLevel:R.Error,containsPii:!1,correlationId:t||d.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:R.Error,containsPii:!0,correlationId:t||d.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:R.Warning,containsPii:!1,correlationId:t||d.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:R.Warning,containsPii:!0,correlationId:t||d.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:R.Info,containsPii:!1,correlationId:t||d.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:R.Info,containsPii:!0,correlationId:t||d.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:R.Verbose,containsPii:!1,correlationId:t||d.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:R.Verbose,containsPii:!0,correlationId:t||d.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:R.Trace,containsPii:!1,correlationId:t||d.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:R.Trace,containsPii:!0,correlationId:t||d.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}/*! @azure/msal-common v14.6.1 2024-01-23 */const qo="@azure/msal-common",hn="14.6.1";/*! @azure/msal-common v14.6.1 2024-01-23 */const dn={None:"none",AzurePublic:"https://login.microsoftonline.com",AzurePpe:"https://login.windows-ppe.net",AzureChina:"https://login.chinacloudapi.cn",AzureGermany:"https://login.microsoftonline.de",AzureUsGovernment:"https://login.microsoftonline.us"};/*! @azure/msal-common v14.6.1 2024-01-23 */function _e(a,e){const t=ia(a);try{const n=e(t);return JSON.parse(n)}catch{throw g(rn)}}function ia(a){if(!a)throw g(Ro);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(a);if(!t||t.length<4)throw g(rn);return t[2]}function $o(a,e){if(e===0||Date.now()-3e5>a+e)throw g(Mo)}/*! @azure/msal-common v14.6.1 2024-01-23 */class z{static nowSeconds(){return Math.round(new Date().getTime()/1e3)}static isTokenExpired(e,t){const n=Number(e)||0;return z.nowSeconds()+t>n}static wasClockTurnedBack(e){return Number(e)>z.nowSeconds()}static delay(e,t){return new Promise(n=>setTimeout(()=>n(t),e))}}/*! @azure/msal-common v14.6.1 2024-01-23 */function Ne(a){return[aa(a),sa(a),ca(a),la(a),ha(a)].join(q.CACHE_KEY_SEPARATOR).toLowerCase()}function vt(a,e,t,n,o){return{credentialType:A.ID_TOKEN,homeAccountId:a,environment:e,clientId:n,secret:t,realm:o}}function St(a,e,t,n,o,r,i,s,c,l,u,m,y,I,S){var P,se;const E={homeAccountId:a,credentialType:A.ACCESS_TOKEN,secret:t,cachedAt:z.nowSeconds().toString(),expiresOn:i.toString(),extendedExpiresOn:s.toString(),environment:e,clientId:n,realm:o,target:r,tokenType:u||k.BEARER};if(m&&(E.userAssertionHash=m),l&&(E.refreshOn=l.toString()),I&&(E.requestedClaims=I,E.requestedClaimsHash=S),((P=E.tokenType)==null?void 0:P.toLowerCase())!==k.BEARER.toLowerCase())switch(E.credentialType=A.ACCESS_TOKEN_WITH_AUTH_SCHEME,E.tokenType){case k.POP:const V=_e(t,c);if(!((se=V==null?void 0:V.cnf)!=null&&se.kid))throw g(Bo);E.keyId=V.cnf.kid;break;case k.SSH:E.keyId=y}return E}function zo(a,e,t,n,o,r,i){const s={credentialType:A.REFRESH_TOKEN,homeAccountId:a,environment:e,clientId:n,secret:t};return r&&(s.userAssertionHash=r),o&&(s.familyId=o),i&&(s.expiresOn=i.toString()),s}function un(a){return a.hasOwnProperty("homeAccountId")&&a.hasOwnProperty("environment")&&a.hasOwnProperty("credentialType")&&a.hasOwnProperty("clientId")&&a.hasOwnProperty("secret")}function Yn(a){return a?un(a)&&a.hasOwnProperty("realm")&&a.hasOwnProperty("target")&&(a.credentialType===A.ACCESS_TOKEN||a.credentialType===A.ACCESS_TOKEN_WITH_AUTH_SCHEME):!1}function jn(a){return a?un(a)&&a.hasOwnProperty("realm")&&a.credentialType===A.ID_TOKEN:!1}function Wn(a){return a?un(a)&&a.credentialType===A.REFRESH_TOKEN:!1}function aa(a){return[a.homeAccountId,a.environment].join(q.CACHE_KEY_SEPARATOR).toLowerCase()}function sa(a){const e=a.credentialType===A.REFRESH_TOKEN&&a.familyId||a.clientId;return[a.credentialType,e,a.realm||""].join(q.CACHE_KEY_SEPARATOR).toLowerCase()}function ca(a){return(a.target||"").toLowerCase()}function la(a){return(a.requestedClaimsHash||"").toLowerCase()}function ha(a){return a.tokenType&&a.tokenType.toLowerCase()!==k.BEARER.toLowerCase()?a.tokenType.toLowerCase():""}function da(a,e){const t=a.indexOf(x.CACHE_KEY)===0;let n=!0;return e&&(n=e.hasOwnProperty("failedRequests")&&e.hasOwnProperty("errors")&&e.hasOwnProperty("cacheHits")),t&&n}function ua(a,e){let t=!1;a&&(t=a.indexOf(Ye.THROTTLING_PREFIX)===0);let n=!0;return e&&(n=e.hasOwnProperty("throttleTime")),t&&n}function ga({environment:a,clientId:e}){return[tn,a,e].join(q.CACHE_KEY_SEPARATOR).toLowerCase()}function ma(a,e){return e?a.indexOf(tn)===0&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("environment"):!1}function pa(a,e){return e?a.indexOf(lt.CACHE_KEY)===0&&e.hasOwnProperty("aliases")&&e.hasOwnProperty("preferred_cache")&&e.hasOwnProperty("preferred_network")&&e.hasOwnProperty("canonical_authority")&&e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("aliasesFromNetwork")&&e.hasOwnProperty("endpointsFromNetwork")&&e.hasOwnProperty("expiresAt")&&e.hasOwnProperty("jwks_uri"):!1}function Qn(){return z.nowSeconds()+lt.REFRESH_TIME_SECONDS}function it(a,e,t){a.authorization_endpoint=e.authorization_endpoint,a.token_endpoint=e.token_endpoint,a.end_session_endpoint=e.end_session_endpoint,a.issuer=e.issuer,a.endpointsFromNetwork=t,a.jwks_uri=e.jwks_uri}function Mt(a,e,t){a.aliases=e.aliases,a.preferred_cache=e.preferred_cache,a.preferred_network=e.preferred_network,a.aliasesFromNetwork=t}function Jn(a){return a.expiresAt<=z.nowSeconds()}/*! @azure/msal-common v14.6.1 2024-01-23 */const Vo="redirect_uri_empty",fa="claims_request_parsing_error",Yo="authority_uri_insecure",Ge="url_parse_error",jo="empty_url_error",Wo="empty_input_scopes_error",Qo="invalid_prompt_value",gn="invalid_claims",Jo="token_request_empty",Xo="logout_request_empty",Zo="invalid_code_challenge_method",mn="pkce_params_missing",pn="invalid_cloud_discovery_metadata",er="invalid_authority_metadata",tr="untrusted_authority",wt="missing_ssh_jwk",nr="missing_ssh_kid",Ca="missing_nonce_authentication_header",ya="invalid_authentication_header",or="cannot_set_OIDCOptions",rr="cannot_allow_native_broker",ir="authority_mismatch";/*! @azure/msal-common v14.6.1 2024-01-23 */const Ta={[Vo]:"A redirect URI is required for all calls, and none has been set.",[fa]:"Could not parse the given claims request object.",[Yo]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[Ge]:"URL could not be parsed into appropriate segments.",[jo]:"URL was empty or null.",[Wo]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[Qo]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[gn]:"Given claims parameter must be a stringified JSON object.",[Jo]:"Token request was empty and not found in cache.",[Xo]:"The logout request was null or undefined.",[Zo]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[mn]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[pn]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[er]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[tr]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[wt]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[nr]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[Ca]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[ya]:"Invalid authentication header provided",[or]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[rr]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[ir]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."};class fn extends N{constructor(e){super(e,Ta[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,fn.prototype)}}function b(a){return new fn(a)}/*! @azure/msal-common v14.6.1 2024-01-23 */class Z{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return Object.keys(t).length===0}catch{}return!0}static startsWith(e,t){return e.indexOf(t)===0}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},n=e.split("&"),o=r=>decodeURIComponent(r.replace(/\+/g," "));return n.forEach(r=>{if(r.trim()){const[i,s]=r.split(/=(.+)/g,2);i&&s&&(t[o(i)]=o(s))}}),t}static trimArrayEntries(e){return e.map(t=>t.trim())}static removeEmptyStringsFromArray(e){return e.filter(t=>!!t)}static jsonParseHelper(e){try{return JSON.parse(e)}catch{return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}/*! @azure/msal-common v14.6.1 2024-01-23 */class M{constructor(e){const t=e?Z.trimArrayEntries([...e]):[],n=t?Z.removeEmptyStringsFromArray(t):[];this.validateInputScopes(n),this.scopes=new Set,n.forEach(o=>this.scopes.add(o))}static fromString(e){const n=(e||d.EMPTY_STRING).split(" ");return new M(n)}static createSearchScopes(e){const t=new M(e);return t.containsOnlyOIDCScopes()?t.removeScope(d.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}validateInputScopes(e){if(!e||e.length<1)throw b(Wo)}containsScope(e){const t=this.printScopesLowerCase().split(" "),n=new M(t);return e?n.scopes.has(e.toLowerCase()):!1}containsScopeSet(e){return!e||e.scopes.size<=0?!1:this.scopes.size>=e.scopes.size&&e.asArray().every(t=>this.containsScope(t))}containsOnlyOIDCScopes(){let e=0;return xn.forEach(t=>{this.containsScope(t)&&(e+=1)}),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach(t=>this.appendScope(t))}catch{throw g(Ho)}}removeScope(e){if(!e)throw g(Do);this.scopes.delete(e.trim())}removeOIDCScopes(){xn.forEach(e=>{this.scopes.delete(e)})}unionScopeSets(e){if(!e)throw g(Bt);const t=new Set;return e.scopes.forEach(n=>t.add(n.toLowerCase())),this.scopes.forEach(n=>t.add(n.toLowerCase())),t}intersectingScopeSets(e){if(!e)throw g(Bt);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),n=e.getScopeCount(),o=this.getScopeCount();return t.size<o+n}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach(t=>e.push(t)),e}printScopes(){return this.scopes?this.asArray().join(" "):d.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}/*! @azure/msal-common v14.6.1 2024-01-23 */function ut(a,e){if(!a)throw g(_o);try{const t=e(a);return JSON.parse(t)}catch{throw g(on)}}function Pe(a){if(!a)throw g(on);const e=a.split(q.CLIENT_INFO_SEPARATOR,2);return{uid:e[0],utid:e.length<2?d.EMPTY_STRING:e[1]}}/*! @azure/msal-common v14.6.1 2024-01-23 */function qt(a,e){return!!a&&!!e&&a===e.split(".")[1]}function Cn(a,e){const{oid:t,sub:n,tid:o,name:r,tfp:i,acr:s}=e,c=o||i||s||"";return{tenantId:c,localAccountId:t||n||"",name:r,isHomeTenant:qt(c,a)}}function yn(a,e,t){let n=a;if(e){const{isHomeTenant:o,...r}=e;n={...a,...r}}if(t){const{isHomeTenant:o,...r}=Cn(a.homeAccountId,t);return n={...n,...r,idTokenClaims:t},n}return n}/*! @azure/msal-common v14.6.1 2024-01-23 */const J={Default:0,Adfs:1,Dsts:2,Ciam:3};/*! @azure/msal-common v14.6.1 2024-01-23 */function ar(a){return a&&(a.tid||a.tfp||a.acr)||null}/*! @azure/msal-common v14.6.1 2024-01-23 */const ue={AAD:"AAD",OIDC:"OIDC"};/*! @azure/msal-common v14.6.1 2024-01-23 */class D{generateAccountId(){return[this.homeAccountId,this.environment].join(q.CACHE_KEY_SEPARATOR).toLowerCase()}generateAccountKey(){return D.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map(e=>[e.tenantId,e]))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){const t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(q.CACHE_KEY_SEPARATOR).toLowerCase()}static createAccount(e,t,n){const o=new D;t.authorityType===J.Adfs?o.authorityType=ot.ADFS_ACCOUNT_TYPE:t.protocolMode===ue.AAD?o.authorityType=ot.MSSTS_ACCOUNT_TYPE:o.authorityType=ot.GENERIC_ACCOUNT_TYPE;let r;e.clientInfo&&n&&(r=ut(e.clientInfo,n)),o.clientInfo=e.clientInfo,o.homeAccountId=e.homeAccountId,o.nativeAccountId=e.nativeAccountId;const i=e.environment||t&&t.getPreferredCache();if(!i)throw g(cn);o.environment=i,o.realm=(r==null?void 0:r.utid)||ar(e.idTokenClaims)||"",o.localAccountId=(r==null?void 0:r.uid)||e.idTokenClaims.oid||e.idTokenClaims.sub||"";const s=e.idTokenClaims.preferred_username||e.idTokenClaims.upn,c=e.idTokenClaims.emails?e.idTokenClaims.emails[0]:null;if(o.username=s||c||"",o.name=e.idTokenClaims.name,o.cloudGraphHostName=e.cloudGraphHostName,o.msGraphHost=e.msGraphHost,e.tenantProfiles)o.tenantProfiles=e.tenantProfiles;else{const l=[];if(e.idTokenClaims){const u=Cn(e.homeAccountId,e.idTokenClaims);l.push(u)}o.tenantProfiles=l}return o}static createFromAccountInfo(e,t,n){var r;const o=new D;return o.authorityType=e.authorityType||ot.GENERIC_ACCOUNT_TYPE,o.homeAccountId=e.homeAccountId,o.localAccountId=e.localAccountId,o.nativeAccountId=e.nativeAccountId,o.realm=e.tenantId,o.environment=e.environment,o.username=e.username,o.name=e.name,o.cloudGraphHostName=t,o.msGraphHost=n,o.tenantProfiles=Array.from(((r=e.tenantProfiles)==null?void 0:r.values())||[]),o}static generateHomeAccountId(e,t,n,o,r){if(!(t===J.Adfs||t===J.Dsts)){if(e)try{const i=ut(e,o.base64Decode);if(i.uid&&i.utid)return`${i.uid}.${i.utid}`}catch{}n.warning("No client info in response")}return(r==null?void 0:r.sub)||""}static isAccountEntity(e){return e?e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType"):!1}static accountInfoIsEqual(e,t,n){if(!e||!t)return!1;let o=!0;if(n){const r=e.idTokenClaims||{},i=t.idTokenClaims||{};o=r.iat===i.iat&&r.nonce===i.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&o}}/*! @azure/msal-common v14.6.1 2024-01-23 */function sr(a){return a.startsWith("#/")?a.substring(2):a.startsWith("#")||a.startsWith("?")?a.substring(1):a}function gt(a){if(!a||a.indexOf("=")<0)return null;try{const e=sr(a),t=Object.fromEntries(new URLSearchParams(e));if(t.code||t.error||t.error_description||t.state)return t}catch{throw g(Oo)}return null}/*! @azure/msal-common v14.6.1 2024-01-23 */class w{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw b(jo);e.includes("#")||(this._urlString=w.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return Z.endsWith(t,"?")?t=t.slice(0,-1):Z.endsWith(t,"?/")&&(t=t.slice(0,-2)),Z.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch{throw b(Ge)}if(!e.HostNameAndPort||!e.PathSegments)throw b(Ge);if(!e.Protocol||e.Protocol.toLowerCase()!=="https:")throw b(Yo)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return w.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),n=t.PathSegments;return e&&n.length!==0&&(n[0]===Ce.COMMON||n[0]===Ce.ORGANIZATIONS)&&(n[0]=e),w.constructAuthorityUriFromObject(t)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw b(Ge);const n={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let o=n.AbsolutePath.split("/");return o=o.filter(r=>r&&r.length>0),n.PathSegments=o,n.QueryString&&n.QueryString.endsWith("/")&&(n.QueryString=n.QueryString.substring(0,n.QueryString.length-1)),n}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),n=e.match(t);if(!n)throw b(Ge);return n[2]}static getAbsoluteUrl(e,t){if(e[0]===d.FORWARD_SLASH){const o=new w(t).getUrlComponents();return o.Protocol+"//"+o.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new w(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!gt(e)}}/*! @azure/msal-common v14.6.1 2024-01-23 */const cr={endpointMetadata:{"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},instanceDiscoveryMetadata:{tenant_discovery_endpoint:"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]}},Xn=cr.endpointMetadata,Tn=cr.instanceDiscoveryMetadata,lr=new Set;Tn.metadata.forEach(a=>{a.aliases.forEach(e=>{lr.add(e)})});function Aa(a,e){var o;let t;const n=a.canonicalAuthority;if(n){const r=new w(n).getUrlComponents().HostNameAndPort;t=Zn(r,(o=a.cloudDiscoveryMetadata)==null?void 0:o.metadata,Y.CONFIG,e)||Zn(r,Tn.metadata,Y.HARDCODED_VALUES,e)||a.knownAuthorities}return t||[]}function Zn(a,e,t,n){if(n==null||n.trace(`getAliasesFromMetadata called with source: ${t}`),a&&e){const o=mt(e,a);if(o)return n==null||n.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${t}, returning aliases`),o.aliases;n==null||n.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${t}`)}return null}function Ia(a){return mt(Tn.metadata,a)}function mt(a,e){for(let t=0;t<a.length;t++){const n=a[t];if(n.aliases.includes(e))return n}return null}/*! @azure/msal-common v14.6.1 2024-01-23 */class De{constructor(e,t,n,o){this.clientId=e,this.cryptoImpl=t,this.commonLogger=n.clone(qo,hn),this.staticAuthorityOptions=o}getAllAccounts(e){return this.buildTenantProfiles(this.getAccountsFilteredBy(e||{}),e)}getAccountInfoFilteredBy(e){const t=this.getAllAccounts(e);return t.length>1?t.sort(o=>o.idTokenClaims?-1:1)[0]:t.length===1?t[0]:null}getBaseAccountInfo(e){const t=this.getAccountsFilteredBy(e);return t.length>0?t[0].getAccountInfo():null}buildTenantProfiles(e,t){return e.flatMap(n=>this.getAccountInfoForTenantProfiles(n,t))}getAccountInfoForTenantProfiles(e,t){return this.getTenantProfilesFromAccountEntity(e,t==null?void 0:t.tenantId,t)}getTenantedAccountInfoByFilter(e,t,n,o){let r=null,i;if(o&&!this.tenantProfileMatchesFilter(n,o))return null;const s=this.getIdToken(e,t,n.tenantId);return s&&(i=_e(s.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(i,o))?null:(r=yn(e,n,i),r)}getTenantProfilesFromAccountEntity(e,t,n){const o=e.getAccountInfo();let r=o.tenantProfiles||new Map;const i=this.getTokenKeys();if(t){const c=r.get(t);if(c)r=new Map([[t,c]]);else return[]}const s=[];return r.forEach(c=>{const l=this.getTenantedAccountInfoByFilter(o,i,c,n);l&&s.push(l)}),s}tenantProfileMatchesFilter(e,t){return!(t.localAccountId&&!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId)||t.name&&e.name!==t.name||t.isHomeTenant!==void 0&&e.isHomeTenant!==t.isHomeTenant)}idTokenClaimsMatchTenantProfileFilter(e,t){return!(t&&(t.localAccountId&&!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId)||t.loginHint&&!this.matchLoginHintFromTokenClaims(e,t.loginHint)||t.username&&!this.matchUsername(e.preferred_username,t.username)||t.name&&!this.matchName(e,t.name)||t.sid&&!this.matchSid(e,t.sid)))}async saveCacheRecord(e,t){if(!e)throw g(Ko);e.account&&this.setAccount(e.account),e.idToken&&(t==null?void 0:t.idToken)!==!1&&this.setIdTokenCredential(e.idToken),e.accessToken&&(t==null?void 0:t.accessToken)!==!1&&await this.saveAccessToken(e.accessToken),e.refreshToken&&(t==null?void 0:t.refreshToken)!==!1&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}async saveAccessToken(e){const t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},n=this.getTokenKeys(),o=M.fromString(e.target),r=[];n.accessToken.forEach(i=>{if(!this.accessTokenKeyMatchesFilter(i,t,!1))return;const s=this.getAccessTokenCredential(i);s&&this.credentialMatchesFilter(s,t)&&M.fromString(s.target).intersectingScopeSets(o)&&r.push(this.removeAccessToken(i))}),await Promise.all(r),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){const t=this.getAccountKeys(),n=[];return t.forEach(o=>{var c;if(!this.isAccountKey(o,e.homeAccountId))return;const r=this.getAccount(o,this.commonLogger);if(!r||e.homeAccountId&&!this.matchHomeAccountId(r,e.homeAccountId)||e.username&&!this.matchUsername(r.username,e.username)||e.environment&&!this.matchEnvironment(r,e.environment)||e.realm&&!this.matchRealm(r,e.realm)||e.nativeAccountId&&!this.matchNativeAccountId(r,e.nativeAccountId)||e.authorityType&&!this.matchAuthorityType(r,e.authorityType))return;const i={localAccountId:e==null?void 0:e.localAccountId,name:e==null?void 0:e.name},s=(c=r.tenantProfiles)==null?void 0:c.filter(l=>this.tenantProfileMatchesFilter(l,i));s&&s.length===0||n.push(r)}),n}isAccountKey(e,t,n){return!(e.split(q.CACHE_KEY_SEPARATOR).length<3||t&&!e.toLowerCase().includes(t.toLowerCase())||n&&!e.toLowerCase().includes(n.toLowerCase()))}isCredentialKey(e){if(e.split(q.CACHE_KEY_SEPARATOR).length<6)return!1;const t=e.toLowerCase();if(t.indexOf(A.ID_TOKEN.toLowerCase())===-1&&t.indexOf(A.ACCESS_TOKEN.toLowerCase())===-1&&t.indexOf(A.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())===-1&&t.indexOf(A.REFRESH_TOKEN.toLowerCase())===-1)return!1;if(t.indexOf(A.REFRESH_TOKEN.toLowerCase())>-1){const n=`${A.REFRESH_TOKEN}${q.CACHE_KEY_SEPARATOR}${this.clientId}${q.CACHE_KEY_SEPARATOR}`,o=`${A.REFRESH_TOKEN}${q.CACHE_KEY_SEPARATOR}${Ve}${q.CACHE_KEY_SEPARATOR}`;if(t.indexOf(n.toLowerCase())===-1&&t.indexOf(o.toLowerCase())===-1)return!1}else if(t.indexOf(this.clientId.toLowerCase())===-1)return!1;return!0}credentialMatchesFilter(e,t){return!(t.clientId&&!this.matchClientId(e,t.clientId)||t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash)||typeof t.homeAccountId=="string"&&!this.matchHomeAccountId(e,t.homeAccountId)||t.environment&&!this.matchEnvironment(e,t.environment)||t.realm&&!this.matchRealm(e,t.realm)||t.credentialType&&!this.matchCredentialType(e,t.credentialType)||t.familyId&&!this.matchFamilyId(e,t.familyId)||t.target&&!this.matchTarget(e,t.target)||(t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash||e.credentialType===A.ACCESS_TOKEN_WITH_AUTH_SCHEME&&(t.tokenType&&!this.matchTokenType(e,t.tokenType)||t.tokenType===k.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId)))}getAppMetadataFilteredBy(e){return this.getAppMetadataFilteredByInternal(e.environment,e.clientId)}getAppMetadataFilteredByInternal(e,t){const n=this.getKeys(),o={};return n.forEach(r=>{if(!this.isAppMetadata(r))return;const i=this.getAppMetadata(r);i&&(e&&!this.matchEnvironment(i,e)||t&&!this.matchClientId(i,t)||(o[r]=i))}),o}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let n=null;return t.forEach(o=>{if(!this.isAuthorityMetadata(o)||o.indexOf(this.clientId)===-1)return;const r=this.getAuthorityMetadata(o);r&&r.aliases.indexOf(e)!==-1&&(n=r)}),n}async removeAllAccounts(){const e=this.getAccountKeys(),t=[];e.forEach(n=>{t.push(this.removeAccount(n))}),await Promise.all(t)}async removeAccount(e){const t=this.getAccount(e,this.commonLogger);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){const t=this.getTokenKeys(),n=e.generateAccountId(),o=[];t.idToken.forEach(r=>{r.indexOf(n)===0&&this.removeIdToken(r)}),t.accessToken.forEach(r=>{r.indexOf(n)===0&&o.push(this.removeAccessToken(r))}),t.refreshToken.forEach(r=>{r.indexOf(n)===0&&this.removeRefreshToken(r)}),await Promise.all(o)}updateOutdatedCachedAccount(e,t,n){var o;if(t&&t.isSingleTenant()){(o=this.commonLogger)==null||o.verbose("updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity");const r=this.getAccountKeys().filter(u=>u.startsWith(t.homeAccountId)),i=[];r.forEach(u=>{const m=this.getCachedAccountEntity(u);m&&i.push(m)});const s=i.find(u=>qt(u.realm,u.homeAccountId))||i[0];s.tenantProfiles=i.map(u=>({tenantId:u.realm,localAccountId:u.localAccountId,name:u.name,isHomeTenant:qt(u.realm,u.homeAccountId)}));const c=De.toObject(new D,{...s}),l=c.generateAccountKey();return r.forEach(u=>{u!==l&&this.removeOutdatedAccount(e)}),this.setAccount(c),n==null||n.verbose("Updated an outdated account entity in the cache"),c}return t}async removeAccessToken(e){const t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===A.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===k.POP){const o=t.keyId;if(o)try{await this.cryptoImpl.removeTokenBindingKey(o)}catch{throw g(xo)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach(t=>{this.isAppMetadata(t)&&this.removeItem(t)}),!0}readAccountFromCache(e){const t=D.generateAccountCacheKey(e);return this.getAccount(t,this.commonLogger)}getIdToken(e,t,n,o,r){this.commonLogger.trace("CacheManager - getIdToken called");const i={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:A.ID_TOKEN,clientId:this.clientId,realm:n},s=this.getIdTokensByFilter(i,t),c=s.size;if(c<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(c>1){let l=s;if(!n){const u=new Map;s.forEach((y,I)=>{y.realm===e.tenantId&&u.set(I,y)});const m=u.size;if(m<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),s.values().next().value;if(m===1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),u.values().next().value;l=u}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),l.forEach((u,m)=>{this.removeIdToken(m)}),o&&r&&o.addFields({multiMatchedID:s.size},r),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),s.values().next().value}getIdTokensByFilter(e,t){const n=t&&t.idToken||this.getTokenKeys().idToken,o=new Map;return n.forEach(r=>{if(!this.idTokenKeyMatchesFilter(r,{clientId:this.clientId,...e}))return;const i=this.getIdTokenCredential(r);i&&this.credentialMatchesFilter(i,e)&&o.set(r,i)}),o}idTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.clientId&&n.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&n.indexOf(t.homeAccountId.toLowerCase())===-1)}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,n,o,r,i){this.commonLogger.trace("CacheManager - getAccessToken called");const s=M.createSearchScopes(t.scopes),c=t.authenticationScheme||k.BEARER,l=c&&c.toLowerCase()!==k.BEARER.toLowerCase()?A.ACCESS_TOKEN_WITH_AUTH_SCHEME:A.ACCESS_TOKEN,u={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:l,clientId:this.clientId,realm:o||e.tenantId,target:s,tokenType:c,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},m=n&&n.accessToken||this.getTokenKeys().accessToken,y=[];m.forEach(S=>{if(this.accessTokenKeyMatchesFilter(S,u,!0)){const E=this.getAccessTokenCredential(S);E&&this.credentialMatchesFilter(E,u)&&y.push(E)}});const I=y.length;return I<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):I>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),y.forEach(S=>{this.removeAccessToken(Ne(S))}),r&&i&&r.addFields({multiMatchedAT:y.length},i),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),y[0])}accessTokenKeyMatchesFilter(e,t,n){const o=e.toLowerCase();if(t.clientId&&o.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&o.indexOf(t.homeAccountId.toLowerCase())===-1||t.realm&&o.indexOf(t.realm.toLowerCase())===-1||t.requestedClaimsHash&&o.indexOf(t.requestedClaimsHash.toLowerCase())===-1)return!1;if(t.target){const r=t.target.asArray();for(let i=0;i<r.length;i++){if(n&&!o.includes(r[i].toLowerCase()))return!1;if(!n&&o.includes(r[i].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e){const t=this.getTokenKeys(),n=[];return t.accessToken.forEach(o=>{if(!this.accessTokenKeyMatchesFilter(o,e,!0))return;const r=this.getAccessTokenCredential(o);r&&this.credentialMatchesFilter(r,e)&&n.push(r)}),n}getRefreshToken(e,t,n,o,r){this.commonLogger.trace("CacheManager - getRefreshToken called");const i=t?Ve:void 0,s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:A.REFRESH_TOKEN,clientId:this.clientId,familyId:i},c=n&&n.refreshToken||this.getTokenKeys().refreshToken,l=[];c.forEach(m=>{if(this.refreshTokenKeyMatchesFilter(m,s)){const y=this.getRefreshTokenCredential(m);y&&this.credentialMatchesFilter(y,s)&&l.push(y)}});const u=l.length;return u<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(u>1&&o&&r&&o.addFields({multiMatchedRT:u},r),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),l[0])}refreshTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.familyId&&n.indexOf(t.familyId.toLowerCase())===-1||!t.familyId&&t.clientId&&n.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&n.indexOf(t.homeAccountId.toLowerCase())===-1)}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},n=this.getAppMetadataFilteredBy(t),o=Object.keys(n).map(i=>n[i]),r=o.length;if(r<1)return null;if(r>1)throw g(Lo);return o[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!!(t&&t.familyId===Ve)}matchHomeAccountId(e,t){return typeof e.homeAccountId=="string"&&t===e.homeAccountId}matchLocalAccountIdFromTokenClaims(e,t){const n=e.oid||e.sub;return t===n}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){var n;return t.toLowerCase()===((n=e.name)==null?void 0:n.toLowerCase())}matchUsername(e,t){return!!(e&&typeof e=="string"&&(t==null?void 0:t.toLowerCase())===e.toLowerCase())}matchUserAssertionHash(e,t){return!!(e.userAssertionHash&&t===e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const o=Aa(this.staticAuthorityOptions,this.commonLogger);if(o.includes(t)&&o.includes(e.environment))return!0}const n=this.getAuthorityMetadataByAlias(t);return!!(n&&n.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!!(e.clientId&&t===e.clientId)}matchFamilyId(e,t){return!!(e.familyId&&t===e.familyId)}matchRealm(e,t){var n;return((n=e.realm)==null?void 0:n.toLowerCase())===t.toLowerCase()}matchNativeAccountId(e,t){return!!(e.nativeAccountId&&t===e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||e.preferred_username===t||e.upn===t}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!!(e.authorityType&&t.toLowerCase()===e.authorityType.toLowerCase())}matchTarget(e,t){return e.credentialType!==A.ACCESS_TOKEN&&e.credentialType!==A.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target?!1:M.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!!(e.tokenType&&e.tokenType===t)}matchKeyId(e,t){return!!(e.keyId&&e.keyId===t)}isAppMetadata(e){return e.indexOf(tn)!==-1}isAuthorityMetadata(e){return e.indexOf(lt.CACHE_KEY)!==-1}generateAuthorityMetadataCacheKey(e){return`${lt.CACHE_KEY}-${this.clientId}-${e}`}static toObject(e,t){for(const n in t)e[n]=t[n];return e}}class Ea extends De{setAccount(){throw g(v)}getAccount(){throw g(v)}getCachedAccountEntity(){throw g(v)}setIdTokenCredential(){throw g(v)}getIdTokenCredential(){throw g(v)}setAccessTokenCredential(){throw g(v)}getAccessTokenCredential(){throw g(v)}setRefreshTokenCredential(){throw g(v)}getRefreshTokenCredential(){throw g(v)}setAppMetadata(){throw g(v)}getAppMetadata(){throw g(v)}setServerTelemetry(){throw g(v)}getServerTelemetry(){throw g(v)}setAuthorityMetadata(){throw g(v)}getAuthorityMetadata(){throw g(v)}getAuthorityMetadataKeys(){throw g(v)}setThrottlingCache(){throw g(v)}getThrottlingCache(){throw g(v)}removeItem(){throw g(v)}containsKey(){throw g(v)}getKeys(){throw g(v)}getAccountKeys(){throw g(v)}getTokenKeys(){throw g(v)}async clear(){throw g(v)}updateCredentialCacheKey(){throw g(v)}removeOutdatedAccount(){throw g(v)}}/*! @azure/msal-common v14.6.1 2024-01-23 */const va=300,hr={tokenRenewalOffsetSeconds:va,preventCorsPreflight:!1},Sa={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:R.Info,correlationId:d.EMPTY_STRING},wa={claimsBasedCachingEnabled:!1},_a={async sendGetRequestAsync(){throw g(v)},async sendPostRequestAsync(){throw g(v)}},Ra={sku:d.SKU,version:hn,cpu:d.EMPTY_STRING,os:d.EMPTY_STRING},ka={clientSecret:d.EMPTY_STRING,clientAssertion:void 0},ba={azureCloudInstance:dn.None,tenant:`${d.DEFAULT_COMMON_TENANT}`},Oa={application:{appName:"",appVersion:""}};function Na({authOptions:a,systemOptions:e,loggerOptions:t,cacheOptions:n,storageInterface:o,networkInterface:r,cryptoInterface:i,clientCredentials:s,libraryInfo:c,telemetry:l,serverTelemetryManager:u,persistencePlugin:m,serializableCache:y}){const I={...Sa,...t};return{authOptions:Pa(a),systemOptions:{...hr,...e},loggerOptions:I,cacheOptions:{...wa,...n},storageInterface:o||new Ea(a.clientId,dt,new ye(I)),networkInterface:r||_a,cryptoInterface:i||dt,clientCredentials:s||ka,libraryInfo:{...Ra,...c},telemetry:{...Oa,...l},serverTelemetryManager:u||null,persistencePlugin:m||null,serializableCache:y||null}}function Pa(a){return{clientCapabilities:[],azureCloudOptions:ba,skipAuthorityMetadataCache:!1,...a}}function $t(a){return a.authOptions.authority.options.protocolMode===ue.OIDC}/*! @azure/msal-common v14.6.1 2024-01-23 */class Te extends N{constructor(e,t,n){super(e,t,n),this.name="ServerError",Object.setPrototypeOf(this,Te.prototype)}}/*! @azure/msal-common v14.6.1 2024-01-23 */class oe{static generateThrottlingStorageKey(e){return`${Ye.THROTTLING_PREFIX}.${JSON.stringify(e)}`}static preProcess(e,t){var r;const n=oe.generateThrottlingStorageKey(t),o=e.getThrottlingCache(n);if(o){if(o.throttleTime<Date.now()){e.removeItem(n);return}throw new Te(((r=o.errorCodes)==null?void 0:r.join(" "))||d.EMPTY_STRING,o.errorMessage,o.subError)}}static postProcess(e,t,n){if(oe.checkResponseStatus(n)||oe.checkResponseForRetryAfter(n)){const o={throttleTime:oe.calculateThrottleTime(parseInt(n.headers[re.RETRY_AFTER])),error:n.body.error,errorCodes:n.body.error_codes,errorMessage:n.body.error_description,subError:n.body.suberror};e.setThrottlingCache(oe.generateThrottlingStorageKey(t),o)}}static checkResponseStatus(e){return e.status===429||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return e.headers?e.headers.hasOwnProperty(re.RETRY_AFTER)&&(e.status<200||e.status>=300):!1}static calculateThrottleTime(e){const t=e<=0?0:e,n=Date.now()/1e3;return Math.floor(Math.min(n+(t||Ye.DEFAULT_THROTTLE_TIME_SECONDS),n+Ye.DEFAULT_MAX_THROTTLE_TIME_SECONDS)*1e3)}static removeThrottle(e,t,n,o){const r={clientId:t,authority:n.authority,scopes:n.scopes,homeAccountIdentifier:o,claims:n.claims,authenticationScheme:n.authenticationScheme,resourceRequestMethod:n.resourceRequestMethod,resourceRequestUri:n.resourceRequestUri,shrClaims:n.shrClaims,sshKid:n.sshKid},i=this.generateThrottlingStorageKey(r);e.removeItem(i)}}/*! @azure/msal-common v14.6.1 2024-01-23 */class Ma{constructor(e,t){this.networkClient=e,this.cacheManager=t}async sendPostRequest(e,t,n){oe.preProcess(this.cacheManager,e);let o;try{o=await this.networkClient.sendPostRequestAsync(t,n)}catch(r){throw r instanceof N?r:g(ko)}return oe.postProcess(this.cacheManager,e,o),o}}/*! @azure/msal-common v14.6.1 2024-01-23 */const j={HOME_ACCOUNT_ID:"home_account_id",UPN:"UPN"};/*! @azure/msal-common v14.6.1 2024-01-23 */const He="client_id",La="redirect_uri",eo="response_type",Ua="response_mode",Da="grant_type",Ha="claims",Ka="scope",Ba="refresh_token",Fa="state",xa="nonce",Ga="prompt",qa="code",$a="code_challenge",za="code_challenge_method",Va="code_verifier",Ya="client-request-id",ja="x-client-SKU",Wa="x-client-VER",Qa="x-client-OS",Ja="x-client-CPU",Xa="x-client-current-telemetry",Za="x-client-last-telemetry",es="x-ms-lib-capability",ts="x-app-name",ns="x-app-ver",os="post_logout_redirect_uri",rs="id_token_hint",is="device_code",as="client_secret",ss="client_assertion",cs="client_assertion_type",to="token_type",no="req_cnf",ls="assertion",hs="requested_token_use",oo="return_spa_code",ds="nativebroker",us="logout_hint",gs="sid",ms="login_hint",ps="domain_hint";/*! @azure/msal-common v14.6.1 2024-01-23 */class Ie{static validateRedirectUri(e){if(!e)throw b(Vo)}static validatePrompt(e){const t=[];for(const n in $)t.push($[n]);if(t.indexOf(e)<0)throw b(Qo)}static validateClaims(e){try{JSON.parse(e)}catch{throw b(gn)}}static validateCodeChallengeParams(e,t){if(!e||!t)throw b(mn);this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([Gn.PLAIN,Gn.S256].indexOf(e)<0)throw b(Zo)}static sanitizeEQParams(e,t){return e?(t.forEach((n,o)=>{e[o]&&delete e[o]}),Object.fromEntries(Object.entries(e).filter(n=>n[1]!==""))):{}}}/*! @azure/msal-common v14.6.1 2024-01-23 */class je{constructor(){this.parameters=new Map}addResponseTypeCode(){this.parameters.set(eo,encodeURIComponent(d.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(eo,encodeURIComponent(`${d.TOKEN_RESPONSE_TYPE} ${d.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set(Ua,encodeURIComponent(e||qi.QUERY))}addNativeBroker(){this.parameters.set(ds,encodeURIComponent("1"))}addScopes(e,t=!0,n=We){t&&!n.includes("openid")&&!e.includes("openid")&&n.push("openid");const o=t?[...e||[],...n]:e||[],r=new M(o);this.parameters.set(Ka,encodeURIComponent(r.printScopes()))}addClientId(e){this.parameters.set(He,encodeURIComponent(e))}addRedirectUri(e){Ie.validateRedirectUri(e),this.parameters.set(La,encodeURIComponent(e))}addPostLogoutRedirectUri(e){Ie.validateRedirectUri(e),this.parameters.set(os,encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set(rs,encodeURIComponent(e))}addDomainHint(e){this.parameters.set(ps,encodeURIComponent(e))}addLoginHint(e){this.parameters.set(ms,encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(re.CCS_HEADER,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(re.CCS_HEADER,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set(gs,encodeURIComponent(e))}addClaims(e,t){const n=this.addClientCapabilitiesToClaims(e,t);Ie.validateClaims(n),this.parameters.set(Ha,encodeURIComponent(n))}addCorrelationId(e){this.parameters.set(Ya,encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set(ja,e.sku),this.parameters.set(Wa,e.version),e.os&&this.parameters.set(Qa,e.os),e.cpu&&this.parameters.set(Ja,e.cpu)}addApplicationTelemetry(e){e!=null&&e.appName&&this.parameters.set(ts,e.appName),e!=null&&e.appVersion&&this.parameters.set(ns,e.appVersion)}addPrompt(e){Ie.validatePrompt(e),this.parameters.set(`${Ga}`,encodeURIComponent(e))}addState(e){e&&this.parameters.set(Fa,encodeURIComponent(e))}addNonce(e){this.parameters.set(xa,encodeURIComponent(e))}addCodeChallengeParams(e,t){if(Ie.validateCodeChallengeParams(e,t),e&&t)this.parameters.set($a,encodeURIComponent(e)),this.parameters.set(za,encodeURIComponent(t));else throw b(mn)}addAuthorizationCode(e){this.parameters.set(qa,encodeURIComponent(e))}addDeviceCode(e){this.parameters.set(is,encodeURIComponent(e))}addRefreshToken(e){this.parameters.set(Ba,encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set(Va,encodeURIComponent(e))}addClientSecret(e){this.parameters.set(as,encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set(ss,encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set(cs,encodeURIComponent(e))}addOboAssertion(e){this.parameters.set(ls,encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set(hs,encodeURIComponent(e))}addGrantType(e){this.parameters.set(Da,encodeURIComponent(e))}addClientInfo(){this.parameters.set($i,"1")}addExtraQueryParameters(e){const t=Ie.sanitizeEQParams(e,this.parameters);Object.keys(t).forEach(n=>{this.parameters.set(n,e[n])})}addClientCapabilitiesToClaims(e,t){let n;if(!e)n={};else try{n=JSON.parse(e)}catch{throw b(gn)}return t&&t.length>0&&(n.hasOwnProperty(nt.ACCESS_TOKEN)||(n[nt.ACCESS_TOKEN]={}),n[nt.ACCESS_TOKEN][nt.XMS_CC]={values:t}),JSON.stringify(n)}addUsername(e){this.parameters.set($n.username,encodeURIComponent(e))}addPassword(e){this.parameters.set($n.password,encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(to,k.POP),this.parameters.set(no,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(to,k.SSH),this.parameters.set(no,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set(Xa,e.generateCurrentRequestHeaderValue()),this.parameters.set(Za,e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set(es,Ye.X_MS_LIB_CAPABILITY_VALUE)}addLogoutHint(e){this.parameters.set(us,encodeURIComponent(e))}createQueryString(){const e=new Array;return this.parameters.forEach((t,n)=>{e.push(`${n}=${t}`)}),e.join("&")}}/*! @azure/msal-common v14.6.1 2024-01-23 */function fs(a){return a.hasOwnProperty("authorization_endpoint")&&a.hasOwnProperty("token_endpoint")&&a.hasOwnProperty("issuer")&&a.hasOwnProperty("jwks_uri")}/*! @azure/msal-common v14.6.1 2024-01-23 */function Cs(a){return a.hasOwnProperty("tenant_discovery_endpoint")&&a.hasOwnProperty("metadata")}/*! @azure/msal-common v14.6.1 2024-01-23 */function ys(a){return a.hasOwnProperty("error")&&a.hasOwnProperty("error_description")}/*! @azure/msal-common v14.6.1 2024-01-23 */const h={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",StandardInteractionClientInitializeAuthorizationCodeRequest:"standardInteractionClientInitializeAuthorizationCodeRequest",GetAuthCodeUrl:"getAuthCodeUrl",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponse:"handleCodeResponse",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",AuthClientCreateQueryString:"authClientCreateQueryString",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",DeserializeResponse:"deserializeResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromiseMeasurement",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues"},Ts={NotStarted:0,InProgress:1,Completed:2};/*! @azure/msal-common v14.6.1 2024-01-23 */const Re=(a,e,t,n,o)=>(...r)=>{t.trace(`Executing function ${e}`);const i=n==null?void 0:n.startMeasurement(e,o);try{const s=a(...r);return i==null||i.end({success:!0}),t.trace(`Returning result from ${e}`),s}catch(s){t.trace(`Error occurred in ${e}`);try{t.trace(JSON.stringify(s))}catch{t.trace("Unable to print error message.")}throw i==null||i.end({success:!1}),s}},p=(a,e,t,n,o)=>(...r)=>{t.trace(`Executing function ${e}`);const i=n==null?void 0:n.startMeasurement(e,o);return n==null||n.setPreQueueTime(e,o),a(...r).then(s=>(t.trace(`Returning result from ${e}`),i==null||i.end({success:!0}),s)).catch(s=>{t.trace(`Error occurred in ${e}`);try{t.trace(JSON.stringify(s))}catch{t.trace("Unable to print error message.")}throw i==null||i.end({success:!1}),s})};/*! @azure/msal-common v14.6.1 2024-01-23 */class _t{constructor(e,t,n,o){this.networkInterface=e,this.logger=t,this.performanceClient=n,this.correlationId=o}async detectRegion(e,t){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(h.RegionDiscoveryDetectRegion,this.correlationId);let n=e;if(n)t.region_source=ke.ENVIRONMENT_VARIABLE;else{const r=_t.IMDS_OPTIONS;try{const i=await p(this.getRegionFromIMDS.bind(this),h.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(d.IMDS_VERSION,r);if(i.status===rt.httpSuccess&&(n=i.body,t.region_source=ke.IMDS),i.status===rt.httpBadRequest){const s=await p(this.getCurrentVersion.bind(this),h.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(r);if(!s)return t.region_source=ke.FAILED_AUTO_DETECTION,null;const c=await p(this.getRegionFromIMDS.bind(this),h.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(s,r);c.status===rt.httpSuccess&&(n=c.body,t.region_source=ke.IMDS)}}catch{return t.region_source=ke.FAILED_AUTO_DETECTION,null}}return n||(t.region_source=ke.FAILED_AUTO_DETECTION),n||null}async getRegionFromIMDS(e,t){var n;return(n=this.performanceClient)==null||n.addQueueMeasurement(h.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${d.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,d.IMDS_TIMEOUT)}async getCurrentVersion(e){var t;(t=this.performanceClient)==null||t.addQueueMeasurement(h.RegionDiscoveryGetCurrentVersion,this.correlationId);try{const n=await this.networkInterface.sendGetRequestAsync(`${d.IMDS_ENDPOINT}?format=json`,e);return n.status===rt.httpBadRequest&&n.body&&n.body["newest-versions"]&&n.body["newest-versions"].length>0?n.body["newest-versions"][0]:null}catch{return null}}}_t.IMDS_OPTIONS={headers:{Metadata:"true"}};/*! @azure/msal-common v14.6.1 2024-01-23 */class G{constructor(e,t,n,o,r,i,s){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=n,this.authorityOptions=o,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=r,this.performanceClient=s,this.correlationId=i,this.regionDiscovery=new _t(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(d.CIAM_AUTH_URL))return J.Ciam;const t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case d.ADFS:return J.Adfs;case d.DSTS:return J.Dsts}return J.Default}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new w(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw g(le)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw g(le)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw g(le)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw g(Go);return this.replacePath(this.metadata.end_session_endpoint)}else throw g(le)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw g(le)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw g(le)}canReplaceTenant(e){return e.PathSegments.length===1&&!G.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===J.Default&&this.protocolMode===ue.AAD}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const o=new w(this.metadata.canonical_authority).getUrlComponents(),r=o.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach((s,c)=>{let l=r[c];if(c===0&&this.canReplaceTenant(o)){const u=new w(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];l!==u&&(this.logger.verbose(`Replacing tenant domain name ${l} with id ${u}`),l=u)}s!==l&&(t=t.replace(`/${l}/`,`/${s}/`))}),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===J.Adfs||this.protocolMode!==ue.AAD&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){var o,r;(o=this.performanceClient)==null||o.addQueueMeasurement(h.AuthorityResolveEndpointsAsync,this.correlationId);const e=this.getCurrentMetadataEntity(),t=await p(this.updateCloudDiscoveryMetadata.bind(this),h.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const n=await p(this.updateEndpointMetadata.bind(this),h.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:n}),(r=this.performanceClient)==null||r.addFields({cloudDiscoverySource:t,authorityEndpointSource:n},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:Qn(),jwks_uri:""}),e}updateCachedMetadata(e,t,n){t!==Y.CACHE&&(n==null?void 0:n.source)!==Y.CACHE&&(e.expiresAt=Qn(),e.canonical_authority=this.canonicalAuthority);const o=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(o,e),this.metadata=e}async updateEndpointMetadata(e){var o,r,i;(o=this.performanceClient)==null||o.addQueueMeasurement(h.AuthorityUpdateEndpointMetadata,this.correlationId);const t=this.updateEndpointMetadataFromLocalSources(e);if(t){if(t.source===Y.HARDCODED_VALUES&&(r=this.authorityOptions.azureRegionConfiguration)!=null&&r.azureRegion&&t.metadata){const s=await p(this.updateMetadataWithRegionalInformation.bind(this),h.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata);it(e,s,!1),e.canonical_authority=this.canonicalAuthority}return t.source}let n=await p(this.getEndpointMetadataFromNetwork.bind(this),h.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return(i=this.authorityOptions.azureRegionConfiguration)!=null&&i.azureRegion&&(n=await p(this.updateMetadataWithRegionalInformation.bind(this),h.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(n)),it(e,n,!0),Y.NETWORK;throw g(bo,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),it(e,t,!1),{source:Y.CONFIG};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const o=this.getEndpointMetadataFromHardcodedValues();if(o)return it(e,o,!1),{source:Y.HARDCODED_VALUES,metadata:o};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const n=Jn(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!n?(this.logger.verbose("Found endpoint metadata in the cache."),{source:Y.CACHE}):(n&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new w(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch{throw b(er)}return null}async getEndpointMetadataFromNetwork(){var n;(n=this.performanceClient)==null||n.addQueueMeasurement(h.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const o=await this.networkInterface.sendGetRequestAsync(t,e);return fs(o.body)?o.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(o){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${o}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in Xn?Xn[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){var n,o,r;(n=this.performanceClient)==null||n.addQueueMeasurement(h.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);const t=(o=this.authorityOptions.azureRegionConfiguration)==null?void 0:o.azureRegion;if(t){if(t!==d.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=Pt.CONFIGURED_NO_AUTO_DETECTION,this.regionDiscoveryMetadata.region_used=t,G.replaceWithRegionalInformation(e,t);const i=await p(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),h.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)((r=this.authorityOptions.azureRegionConfiguration)==null?void 0:r.environmentRegion,this.regionDiscoveryMetadata);if(i)return this.regionDiscoveryMetadata.region_outcome=Pt.AUTO_DETECTION_REQUESTED_SUCCESSFUL,this.regionDiscoveryMetadata.region_used=i,G.replaceWithRegionalInformation(e,i);this.regionDiscoveryMetadata.region_outcome=Pt.AUTO_DETECTION_REQUESTED_FAILED}return e}async updateCloudDiscoveryMetadata(e){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(h.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);const t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;const n=await p(this.getCloudDiscoveryMetadataFromNetwork.bind(this),h.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return Mt(e,n,!0),Y.NETWORK;throw b(tr)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||d.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||d.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||d.NOT_APPLICABLE}`);const t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),Mt(e,t,!1),Y.CONFIG;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const o=Ia(this.hostnameAndPort);if(o)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),Mt(e,o,!1),Y.HARDCODED_VALUES;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}const n=Jn(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!n?(this.logger.verbose("Found cloud discovery metadata in the cache."),Y.CACHE):(n&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===J.Ciam)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),G.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=JSON.parse(this.authorityOptions.cloudDiscoveryMetadata),t=mt(e.metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),t)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),t;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch{throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),b(pn)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),G.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(h.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);const e=`${d.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t={};let n=null;try{const r=await this.networkInterface.sendGetRequestAsync(e,t);let i,s;if(Cs(r.body))i=r.body,s=i.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${i.tenant_discovery_endpoint}`);else if(ys(r.body)){if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${r.status}`),i=r.body,i.error===d.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${i.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${i.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),s=[]}else return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),n=mt(s,this.hostnameAndPort)}catch(r){if(r instanceof N)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.
Error: ${r.errorCode}
Error Description: ${r.errorMessage}`);else{const i=r;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.
Error: ${i.name}
Error Description: ${i.message}`)}return null}return n||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),n=G.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),n}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter(t=>t&&w.getDomainFromUrl(t).toLowerCase()===this.hostnameAndPort).length>0}static generateAuthority(e,t){let n;if(t&&t.azureCloudInstance!==dn.None){const o=t.tenant?t.tenant:d.DEFAULT_COMMON_TENANT;n=`${t.azureCloudInstance}/${o}/`}return n||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.discoveryComplete())return this.metadata.preferred_cache;throw g(le)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return lr.has(e)}static isPublicCloudAuthority(e){return d.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,n){const o=new w(e);o.validateAsUri();const r=o.getUrlComponents();let i=`${t}.${r.HostNameAndPort}`;this.isPublicCloudAuthority(r.HostNameAndPort)&&(i=`${t}.${d.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const s=w.constructAuthorityUriFromObject({...o.getUrlComponents(),HostNameAndPort:i}).urlString;return n?`${s}?${n}`:s}static replaceWithRegionalInformation(e,t){const n={...e};return n.authorization_endpoint=G.buildRegionalAuthorityString(n.authorization_endpoint,t),n.token_endpoint=G.buildRegionalAuthorityString(n.token_endpoint,t),n.end_session_endpoint&&(n.end_session_endpoint=G.buildRegionalAuthorityString(n.end_session_endpoint,t)),n}static transformCIAMAuthority(e){let t=e;const o=new w(e).getUrlComponents();if(o.PathSegments.length===0&&o.HostNameAndPort.endsWith(d.CIAM_AUTH_URL)){const r=o.HostNameAndPort.split(".")[0];t=`${t}${r}${d.AAD_TENANT_DOMAIN_SUFFIX}`}return t}}G.reservedTenantDomains=new Set(["{tenant}","{tenantid}",Ce.COMMON,Ce.CONSUMERS,Ce.ORGANIZATIONS]);function As(a){const n=new w(a).getUrlComponents().PathSegments.slice(-1)[0].toLowerCase();switch(n){case Ce.COMMON:case Ce.ORGANIZATIONS:case Ce.CONSUMERS:return;default:return n}}function dr(a){return a.endsWith(d.FORWARD_SLASH)?a:`${a}${d.FORWARD_SLASH}`}function Is(a){const e=a.cloudDiscoveryMetadata;let t;if(e)try{t=JSON.parse(e)}catch{throw b(pn)}return{canonicalAuthority:a.authority?dr(a.authority):void 0,knownAuthorities:a.knownAuthorities,cloudDiscoveryMetadata:t}}/*! @azure/msal-common v14.6.1 2024-01-23 */async function Rt(a,e,t,n,o,r,i){i==null||i.addQueueMeasurement(h.AuthorityFactoryCreateDiscoveredInstance,r);const s=G.transformCIAMAuthority(dr(a)),c=new G(s,e,t,n,o,r,i);try{return await p(c.resolveEndpointsAsync.bind(c),h.AuthorityResolveEndpointsAsync,o,i,r)(),c}catch{throw g(le)}}const Es=Object.freeze(Object.defineProperty({__proto__:null,createDiscoveredInstance:Rt},Symbol.toStringTag,{value:"Module"}));/*! @azure/msal-common v14.6.1 2024-01-23 */class An{constructor(e,t){this.config=Na(e),this.logger=new ye(this.config.loggerOptions,qo,hn),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.networkManager=new Ma(this.networkClient,this.cacheManager),this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const t={};if(t[re.CONTENT_TYPE]=d.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case j.HOME_ACCOUNT_ID:try{const n=Pe(e.credential);t[re.CCS_HEADER]=`Oid:${n.uid}@${n.utid}`}catch(n){this.logger.verbose("Could not parse home account ID for CCS Header: "+n)}break;case j.UPN:t[re.CCS_HEADER]=`UPN: ${e.credential}`;break}return t}async executePostToTokenEndpoint(e,t,n,o,r,i){var c,l,u,m;i&&((c=this.performanceClient)==null||c.addQueueMeasurement(i,r));const s=await this.networkManager.sendPostRequest(o,e,{body:t,headers:n});return(m=this.performanceClient)==null||m.addFields({refreshTokenSize:((l=s.body.refresh_token)==null?void 0:l.length)||0,httpVerToken:((u=s.headers)==null?void 0:u[re.X_MS_HTTP_VERSION])||""},r),this.config.serverTelemetryManager&&s.status<500&&s.status!==429&&this.config.serverTelemetryManager.clearTelemetryCache(),s}async updateAuthority(e,t){var r;(r=this.performanceClient)==null||r.addQueueMeasurement(h.UpdateTokenEndpointAuthority,t);const n=`https://${e}/${this.authority.tenant}/`,o=await Rt(n,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=o}createTokenQueryParameters(e){const t=new je;return e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.createQueryString()}}/*! @azure/msal-common v14.6.1 2024-01-23 */const pt="no_tokens_found",ur="native_account_unavailable",In="refresh_token_expired",vs="interaction_required",Ss="consent_required",ws="login_required",kt="bad_token";/*! @azure/msal-common v14.6.1 2024-01-23 */const ro=[vs,Ss,ws,kt],_s=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],Rs={[pt]:"No refresh token found in the cache. Please sign-in.",[ur]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[In]:"Refresh token has expired.",[kt]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve."};class te extends N{constructor(e,t,n,o,r,i,s){super(e,t,n),Object.setPrototypeOf(this,te.prototype),this.timestamp=o||d.EMPTY_STRING,this.traceId=r||d.EMPTY_STRING,this.correlationId=i||d.EMPTY_STRING,this.claims=s||d.EMPTY_STRING,this.name="InteractionRequiredAuthError"}}function io(a,e,t){const n=!!a&&ro.indexOf(a)>-1,o=!!t&&_s.indexOf(t)>-1,r=!!e&&ro.some(i=>e.indexOf(i)>-1);return n||r||o}function zt(a){return new te(a,Rs[a])}/*! @azure/msal-common v14.6.1 2024-01-23 */class Me{constructor(e,t,n,o,r){this.account=e||null,this.idToken=t||null,this.accessToken=n||null,this.refreshToken=o||null,this.appMetadata=r||null}}/*! @azure/msal-common v14.6.1 2024-01-23 */class ee{static setRequestState(e,t,n){const o=ee.generateLibraryState(e,n);return t?`${o}${d.RESOURCE_DELIM}${t}`:o}static generateLibraryState(e,t){if(!e)throw g(xt);const n={id:e.createNewGuid()};t&&(n.meta=t);const o=JSON.stringify(n);return e.base64Encode(o)}static parseRequestState(e,t){if(!e)throw g(xt);if(!t)throw g(Ue);try{const n=t.split(d.RESOURCE_DELIM),o=n[0],r=n.length>1?n.slice(1).join(d.RESOURCE_DELIM):d.EMPTY_STRING,i=e.base64Decode(o),s=JSON.parse(i);return{userRequestState:r||d.EMPTY_STRING,libraryState:s}}catch{throw g(Ue)}}}/*! @azure/msal-common v14.6.1 2024-01-23 */const ks={SW:"sw",UHW:"uhw"};class Ke{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){var r;(r=this.performanceClient)==null||r.addQueueMeasurement(h.PopTokenGenerateCnf,e.correlationId);const n=await p(this.generateKid.bind(this),h.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),o=this.cryptoUtils.base64Encode(JSON.stringify(n));return{kid:n.kid,reqCnfString:o,reqCnfHash:await this.cryptoUtils.hashString(o)}}async generateKid(e){var n;return(n=this.performanceClient)==null||n.addQueueMeasurement(h.PopTokenGenerateKid,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:ks.SW}}async signPopToken(e,t,n){return this.signPayload(e,t,n)}async signPayload(e,t,n,o){const{resourceRequestMethod:r,resourceRequestUri:i,shrClaims:s,shrNonce:c,shrOptions:l}=n,u=i?new w(i):void 0,m=u==null?void 0:u.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:z.nowSeconds(),m:r==null?void 0:r.toUpperCase(),u:m==null?void 0:m.HostNameAndPort,nonce:c||this.cryptoUtils.createNewGuid(),p:m==null?void 0:m.AbsolutePath,q:m!=null&&m.QueryString?[[],m.QueryString]:void 0,client_claims:s||void 0,...o},t,l,n.correlationId)}}/*! @azure/msal-common v14.6.1 2024-01-23 */class bs{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}/*! @azure/msal-common v14.6.1 2024-01-23 */class ve{constructor(e,t,n,o,r,i,s){this.clientId=e,this.cacheStorage=t,this.cryptoObj=n,this.logger=o,this.serializableCache=r,this.persistencePlugin=i,this.performanceClient=s}validateServerAuthorizationCodeResponse(e,t){if(!e.state||!t)throw e.state?g(ht,"Cached State"):g(ht,"Server State");let n,o;try{n=decodeURIComponent(e.state)}catch{throw g(Ue,e.state)}try{o=decodeURIComponent(t)}catch{throw g(Ue,e.state)}if(n!==o)throw g(No);if(e.error||e.error_description||e.suberror)throw io(e.error,e.error_description,e.suberror)?new te(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||""):new Te(e.error||"",e.error_description,e.suberror)}validateTokenResponse(e,t){if(e.error||e.error_description||e.suberror){const n=`${e.error_codes} - [${e.timestamp}]: ${e.error_description} - Correlation ID: ${e.correlation_id} - Trace ID: ${e.trace_id}`,o=new Te(e.error,n,e.suberror);if(t&&e.status&&e.status>=tt.SERVER_ERROR_RANGE_START&&e.status<=tt.SERVER_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.
${o}`);return}else if(t&&e.status&&e.status>=tt.CLIENT_ERROR_RANGE_START&&e.status<=tt.CLIENT_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.
${o}`);return}throw io(e.error,e.error_description,e.suberror)?new te(e.error,e.error_description,e.suberror,e.timestamp||d.EMPTY_STRING,e.trace_id||d.EMPTY_STRING,e.correlation_id||d.EMPTY_STRING,e.claims||d.EMPTY_STRING):o}}async handleServerTokenResponse(e,t,n,o,r,i,s,c,l){var S;(S=this.performanceClient)==null||S.addQueueMeasurement(h.HandleServerTokenResponse,e.correlation_id);let u;if(e.id_token){if(u=_e(e.id_token||d.EMPTY_STRING,this.cryptoObj.base64Decode),r&&r.nonce&&u.nonce!==r.nonce)throw g(Po);if(o.maxAge||o.maxAge===0){const E=u.auth_time;if(!E)throw g(an);$o(E,o.maxAge)}}this.homeAccountIdentifier=D.generateHomeAccountId(e.client_info||d.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,u);let m;r&&r.state&&(m=ee.parseRequestState(this.cryptoObj,r.state)),e.key_id=e.key_id||o.sshKid||void 0;const y=this.generateCacheRecord(e,t,n,o,u,i,r);let I;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),I=new bs(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(I)),s&&!c&&y.account){const E=y.account.generateAccountKey();if(!this.cacheStorage.getAccount(E,this.logger))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await ve.generateAuthenticationResult(this.cryptoObj,t,y,!1,o,u,m,void 0,l)}await this.cacheStorage.saveCacheRecord(y,o.storeInCache)}finally{this.persistencePlugin&&this.serializableCache&&I&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(I))}return ve.generateAuthenticationResult(this.cryptoObj,t,y,!1,o,u,m,e,l)}generateCacheRecord(e,t,n,o,r,i,s){const c=t.getPreferredCache();if(!c)throw g(cn);const l=ar(r);let u,m;e.id_token&&r&&(u=vt(this.homeAccountIdentifier,c,e.id_token,this.clientId,l||""),m=En(this.cacheStorage,t,this.homeAccountIdentifier,r,this.cryptoObj.base64Decode,e.client_info,c,l,s,void 0,this.logger));let y=null;if(e.access_token){const E=e.scope?M.fromString(e.scope):new M(o.scopes||[]),P=(typeof e.expires_in=="string"?parseInt(e.expires_in,10):e.expires_in)||0,se=(typeof e.ext_expires_in=="string"?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,V=(typeof e.refresh_in=="string"?parseInt(e.refresh_in,10):e.refresh_in)||void 0,ne=n+P,Ze=ne+se,et=V&&V>0?n+V:void 0;y=St(this.homeAccountIdentifier,c,e.access_token,this.clientId,l||t.tenant,E.printScopes(),ne,Ze,this.cryptoObj.base64Decode,et,e.token_type,i,e.key_id,o.claims,o.requestedClaimsHash)}let I=null;if(e.refresh_token){let E;if(e.refresh_token_expires_in){const P=typeof e.refresh_token_expires_in=="string"?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in;E=n+P}I=zo(this.homeAccountIdentifier,c,e.refresh_token,this.clientId,e.foci,i,E)}let S=null;return e.foci&&(S={clientId:this.clientId,environment:c,familyId:e.foci}),new Me(m,u,y,I,S)}static async generateAuthenticationResult(e,t,n,o,r,i,s,c,l){var ne,Ze,et,Bn;let u=d.EMPTY_STRING,m=[],y=null,I,S,E=d.EMPTY_STRING;if(n.accessToken){if(n.accessToken.tokenType===k.POP){const ri=new Ke(e),{secret:ii,keyId:Fn}=n.accessToken;if(!Fn)throw g(ln);u=await ri.signPopToken(ii,Fn,r)}else u=n.accessToken.secret;m=M.fromString(n.accessToken.target).asArray(),y=new Date(Number(n.accessToken.expiresOn)*1e3),I=new Date(Number(n.accessToken.extendedExpiresOn)*1e3),n.accessToken.refreshOn&&(S=new Date(Number(n.accessToken.refreshOn)*1e3))}n.appMetadata&&(E=n.appMetadata.familyId===Ve?Ve:"");const P=(i==null?void 0:i.oid)||(i==null?void 0:i.sub)||"",se=(i==null?void 0:i.tid)||"";c!=null&&c.spa_accountid&&n.account&&(n.account.nativeAccountId=c==null?void 0:c.spa_accountid);const V=n.account?yn(n.account.getAccountInfo(),void 0,i):null;return{authority:t.canonicalAuthority,uniqueId:P,tenantId:se,scopes:m,account:V,idToken:((ne=n==null?void 0:n.idToken)==null?void 0:ne.secret)||"",idTokenClaims:i||{},accessToken:u,fromCache:o,expiresOn:y,extExpiresOn:I,refreshOn:S,correlationId:r.correlationId,requestId:l||d.EMPTY_STRING,familyId:E,tokenType:((Ze=n.accessToken)==null?void 0:Ze.tokenType)||d.EMPTY_STRING,state:s?s.userRequestState:d.EMPTY_STRING,cloudGraphHostName:((et=n.account)==null?void 0:et.cloudGraphHostName)||d.EMPTY_STRING,msGraphHost:((Bn=n.account)==null?void 0:Bn.msGraphHost)||d.EMPTY_STRING,code:c==null?void 0:c.spa_code,fromNativeBroker:!1}}}function En(a,e,t,n,o,r,i,s,c,l,u){u==null||u.verbose("setCachedAccount called");const y=a.getAccountKeys().find(P=>P.startsWith(t));let I=null;y&&(I=a.getAccount(y,u));const S=I||D.createAccount({homeAccountId:t,idTokenClaims:n,clientInfo:r,environment:i,cloudGraphHostName:c==null?void 0:c.cloud_graph_host_name,msGraphHost:c==null?void 0:c.msgraph_host,nativeAccountId:l},e,o),E=S.tenantProfiles||[];if(s&&!E.find(P=>P.tenantId===s)){const P=Cn(t,n);E.push(P)}return S.tenantProfiles=E,S}/*! @azure/msal-common v14.6.1 2024-01-23 */class gr extends An{constructor(e,t){var n;super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=(n=this.config.authOptions.authority.options.OIDCOptions)==null?void 0:n.defaultScopes}async getAuthCodeUrl(e){var n;(n=this.performanceClient)==null||n.addQueueMeasurement(h.GetAuthCodeUrl,e.correlationId);const t=await p(this.createAuthCodeUrlQueryString.bind(this),h.AuthClientCreateQueryString,this.logger,this.performanceClient,e.correlationId)(e);return w.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){var s,c;if((s=this.performanceClient)==null||s.addQueueMeasurement(h.AuthClientAcquireToken,e.correlationId),!e.code)throw g(Uo);const n=z.nowSeconds(),o=await p(this.executeTokenRequest.bind(this),h.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),r=(c=o.headers)==null?void 0:c[re.X_MS_REQUEST_ID],i=new ve(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return i.validateTokenResponse(o.body),p(i.handleServerTokenResponse.bind(i),h.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(o.body,this.authority,n,e,t,void 0,void 0,void 0,r)}handleFragmentResponse(e,t){if(new ve(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null).validateServerAuthorizationCodeResponse(e,t),!e.code)throw g(Fo);return e}getLogoutUri(e){if(!e)throw b(Xo);const t=this.createLogoutUrlQueryString(e);return w.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){var l,u;(l=this.performanceClient)==null||l.addQueueMeasurement(h.AuthClientExecuteTokenRequest,t.correlationId);const n=this.createTokenQueryParameters(t),o=w.appendQueryString(e.tokenEndpoint,n),r=await p(this.createTokenRequestBody.bind(this),h.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);let i;if(t.clientInfo)try{const m=ut(t.clientInfo,this.cryptoUtils.base64Decode);i={credential:`${m.uid}${q.CLIENT_INFO_SEPARATOR}${m.utid}`,type:j.HOME_ACCOUNT_ID}}catch(m){this.logger.verbose("Could not parse client info for CCS Header: "+m)}const s=this.createTokenRequestHeaders(i||t.ccsCredential),c={clientId:((u=t.tokenBodyParameters)==null?void 0:u.clientId)||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return p(this.executePostToTokenEndpoint.bind(this),h.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(o,r,s,c,t.correlationId,h.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){var r,i;(r=this.performanceClient)==null||r.addQueueMeasurement(h.AuthClientCreateTokenRequestBody,e.correlationId);const t=new je;if(t.addClientId(((i=e.tokenBodyParameters)==null?void 0:i[He])||this.config.authOptions.clientId),this.includeRedirectUri?t.addRedirectUri(e.redirectUri):Ie.validateRedirectUri(e.redirectUri),t.addScopes(e.scopes,!0,this.oidcDefaultScopes),t.addAuthorizationCode(e.code),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&!$t(this.config)&&t.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&t.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const s=this.config.clientCredentials.clientAssertion;t.addClientAssertion(s.assertion),t.addClientAssertionType(s.assertionType)}if(t.addGrantType(So.AUTHORIZATION_CODE_GRANT),t.addClientInfo(),e.authenticationScheme===k.POP){const s=new Ke(this.cryptoUtils,this.performanceClient),c=await p(s.generateCnf.bind(s),h.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger);t.addPopToken(c.reqCnfString)}else if(e.authenticationScheme===k.SSH)if(e.sshJwk)t.addSshJwk(e.sshJwk);else throw b(wt);const n=e.correlationId||this.config.cryptoInterface.createNewGuid();t.addCorrelationId(n),(!Z.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities);let o;if(e.clientInfo)try{const s=ut(e.clientInfo,this.cryptoUtils.base64Decode);o={credential:`${s.uid}${q.CLIENT_INFO_SEPARATOR}${s.utid}`,type:j.HOME_ACCOUNT_ID}}catch(s){this.logger.verbose("Could not parse client info for CCS Header: "+s)}else o=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&o)switch(o.type){case j.HOME_ACCOUNT_ID:try{const s=Pe(o.credential);t.addCcsOid(s)}catch(s){this.logger.verbose("Could not parse home account ID for CCS Header: "+s)}break;case j.UPN:t.addCcsUpn(o.credential);break}return e.tokenBodyParameters&&t.addExtraQueryParameters(e.tokenBodyParameters),e.enableSpaAuthorizationCode&&(!e.tokenBodyParameters||!e.tokenBodyParameters[oo])&&t.addExtraQueryParameters({[oo]:"1"}),t.createQueryString()}async createAuthCodeUrlQueryString(e){var r,i;(r=this.performanceClient)==null||r.addQueueMeasurement(h.AuthClientCreateQueryString,e.correlationId);const t=new je;t.addClientId(((i=e.extraQueryParameters)==null?void 0:i[He])||this.config.authOptions.clientId);const n=[...e.scopes||[],...e.extraScopesToConsent||[]];t.addScopes(n,!0,this.oidcDefaultScopes),t.addRedirectUri(e.redirectUri);const o=e.correlationId||this.config.cryptoInterface.createNewGuid();if(t.addCorrelationId(o),t.addResponseMode(e.responseMode),t.addResponseTypeCode(),t.addLibraryInfo(this.config.libraryInfo),$t(this.config)||t.addApplicationTelemetry(this.config.telemetry.application),t.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&t.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&t.addPrompt(e.prompt),e.domainHint&&t.addDomainHint(e.domainHint),e.prompt!==$.SELECT_ACCOUNT)if(e.sid&&e.prompt===$.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),t.addSid(e.sid);else if(e.account){const s=this.extractAccountSid(e.account),c=this.extractLoginHint(e.account);if(c){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),t.addLoginHint(c);try{const l=Pe(e.account.homeAccountId);t.addCcsOid(l)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(s&&e.prompt===$.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),t.addSid(s);try{const l=Pe(e.account.homeAccountId);t.addCcsOid(l)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),t.addLoginHint(e.account.username);try{const l=Pe(e.account.homeAccountId);t.addCcsOid(l)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint));else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&t.addNonce(e.nonce),e.state&&t.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),e.nativeBroker&&(t.addNativeBroker(),e.authenticationScheme===k.POP)){const s=new Ke(this.cryptoUtils),c=await p(s.generateCnf.bind(s),h.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger);t.addPopToken(c.reqCnfHash)}return t.createQueryString()}createLogoutUrlQueryString(e){const t=new je;return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),t.createQueryString()}extractAccountSid(e){var t;return((t=e.idTokenClaims)==null?void 0:t.sid)||null}extractLoginHint(e){var t;return((t=e.idTokenClaims)==null?void 0:t.login_hint)||null}}/*! @azure/msal-common v14.6.1 2024-01-23 */const Os=300;class Vt extends An{constructor(e,t){super(e,t)}async acquireToken(e){var i,s;(i=this.performanceClient)==null||i.addQueueMeasurement(h.RefreshTokenClientAcquireToken,e.correlationId);const t=z.nowSeconds(),n=await p(this.executeTokenRequest.bind(this),h.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),o=(s=n.headers)==null?void 0:s[re.X_MS_REQUEST_ID],r=new ve(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return r.validateTokenResponse(n.body),p(r.handleServerTokenResponse.bind(r),h.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,o)}async acquireTokenByRefreshToken(e){var n;if(!e)throw b(Jo);if((n=this.performanceClient)==null||n.addQueueMeasurement(h.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw g(sn);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await p(this.acquireTokenWithCachedRefreshToken.bind(this),h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(o){const r=o instanceof te&&o.errorCode===pt,i=o instanceof Te&&o.errorCode===qn.INVALID_GRANT_ERROR&&o.subError===qn.CLIENT_MISMATCH_ERROR;if(r||i)return p(this.acquireTokenWithCachedRefreshToken.bind(this),h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1);throw o}return p(this.acquireTokenWithCachedRefreshToken.bind(this),h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){var r;(r=this.performanceClient)==null||r.addQueueMeasurement(h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);const n=Re(this.cacheManager.getRefreshToken.bind(this.cacheManager),h.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t,void 0,this.performanceClient,e.correlationId);if(!n)throw zt(pt);if(n.expiresOn&&z.isTokenExpired(n.expiresOn,e.refreshTokenExpirationOffsetSeconds||Os))throw zt(In);const o={...e,refreshToken:n.secret,authenticationScheme:e.authenticationScheme||k.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:j.HOME_ACCOUNT_ID}};try{return await p(this.acquireToken.bind(this),h.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(o)}catch(i){if(i instanceof te&&i.subError===kt){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");const s=Ne(n);this.cacheManager.removeRefreshToken(s)}throw i}}async executeTokenRequest(e,t){var c,l;(c=this.performanceClient)==null||c.addQueueMeasurement(h.RefreshTokenClientExecuteTokenRequest,e.correlationId);const n=this.createTokenQueryParameters(e),o=w.appendQueryString(t.tokenEndpoint,n),r=await p(this.createTokenRequestBody.bind(this),h.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),i=this.createTokenRequestHeaders(e.ccsCredential),s={clientId:((l=e.tokenBodyParameters)==null?void 0:l.clientId)||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return p(this.executePostToTokenEndpoint.bind(this),h.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(o,r,i,s,e.correlationId,h.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){var o,r,i;(o=this.performanceClient)==null||o.addQueueMeasurement(h.RefreshTokenClientCreateTokenRequestBody,e.correlationId);const t=e.correlationId,n=new je;if(n.addClientId(((r=e.tokenBodyParameters)==null?void 0:r[He])||this.config.authOptions.clientId),e.redirectUri&&n.addRedirectUri(e.redirectUri),n.addScopes(e.scopes,!0,(i=this.config.authOptions.authority.options.OIDCOptions)==null?void 0:i.defaultScopes),n.addGrantType(So.REFRESH_TOKEN_GRANT),n.addClientInfo(),n.addLibraryInfo(this.config.libraryInfo),n.addApplicationTelemetry(this.config.telemetry.application),n.addThrottling(),this.serverTelemetryManager&&!$t(this.config)&&n.addServerTelemetry(this.serverTelemetryManager),n.addCorrelationId(t),n.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&n.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const s=this.config.clientCredentials.clientAssertion;n.addClientAssertion(s.assertion),n.addClientAssertionType(s.assertionType)}if(e.authenticationScheme===k.POP){const s=new Ke(this.cryptoUtils,this.performanceClient),c=await p(s.generateCnf.bind(s),h.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger);n.addPopToken(c.reqCnfString)}else if(e.authenticationScheme===k.SSH)if(e.sshJwk)n.addSshJwk(e.sshJwk);else throw b(wt);if((!Z.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&n.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case j.HOME_ACCOUNT_ID:try{const s=Pe(e.ccsCredential.credential);n.addCcsOid(s)}catch(s){this.logger.verbose("Could not parse home account ID for CCS Header: "+s)}break;case j.UPN:n.addCcsUpn(e.ccsCredential.credential);break}return e.tokenBodyParameters&&n.addExtraQueryParameters(e.tokenBodyParameters),n.createQueryString()}}/*! @azure/msal-common v14.6.1 2024-01-23 */class Ns extends An{constructor(e,t){super(e,t)}async acquireToken(e){try{const[t,n]=await this.acquireCachedToken(e);return n===pe.PROACTIVELY_REFRESHED&&(this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed."),new Vt(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch(()=>{})),t}catch(t){if(t instanceof Et&&t.errorCode===fe)return new Vt(this.config,this.performanceClient).acquireTokenByRefreshToken(e);throw t}}async acquireCachedToken(e){var c;(c=this.performanceClient)==null||c.addQueueMeasurement(h.SilentFlowClientAcquireCachedToken,e.correlationId);let t=pe.NOT_APPLICABLE;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!Z.isEmptyObj(e.claims))throw this.setCacheOutcome(pe.FORCE_REFRESH_OR_CLAIMS,e.correlationId),g(fe);if(!e.account)throw g(sn);const n=e.account.tenantId||As(e.authority),o=this.cacheManager.getTokenKeys(),r=this.cacheManager.getAccessToken(e.account,e,o,n,this.performanceClient,e.correlationId);if(r){if(z.wasClockTurnedBack(r.cachedAt)||z.isTokenExpired(r.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(pe.CACHED_ACCESS_TOKEN_EXPIRED,e.correlationId),g(fe);r.refreshOn&&z.isTokenExpired(r.refreshOn,0)&&(t=pe.PROACTIVELY_REFRESHED)}else throw this.setCacheOutcome(pe.NO_CACHED_ACCESS_TOKEN,e.correlationId),g(fe);const i=e.authority||this.authority.getPreferredCache(),s={account:this.cacheManager.readAccountFromCache(e.account),accessToken:r,idToken:this.cacheManager.getIdToken(e.account,o,n,this.performanceClient,e.correlationId),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(i)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await p(this.generateResultFromCacheRecord.bind(this),h.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(s,e),t]}setCacheOutcome(e,t){var n,o;(n=this.serverTelemetryManager)==null||n.setCacheOutcome(e),(o=this.performanceClient)==null||o.addFields({cacheOutcome:e},t),e!==pe.NOT_APPLICABLE&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(h.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId);let n;if(e.idToken&&(n=_e(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||t.maxAge===0){const r=n==null?void 0:n.auth_time;if(!r)throw g(an);$o(r,t.maxAge)}return ve.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,n)}}/*! @azure/msal-common v14.6.1 2024-01-23 */const Ps={sendGetRequestAsync:()=>Promise.reject(g(v)),sendPostRequestAsync:()=>Promise.reject(g(v))};/*! @azure/msal-common v14.6.1 2024-01-23 */const mr="missing_kid_error",pr="missing_alg_error";/*! @azure/msal-common v14.6.1 2024-01-23 */const Ms={[mr]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[pr]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class vn extends N{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,vn.prototype)}}function ao(a){return new vn(a,Ms[a])}/*! @azure/msal-common v14.6.1 2024-01-23 */class Sn{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw ao(mr);if(!e.alg)throw ao(pr);const t=new Sn({typ:e.typ||zi.Pop,kid:e.kid,alg:e.alg});return JSON.stringify(t)}}/*! @azure/msal-common v14.6.1 2024-01-23 */class ft{constructor(e,t){this.cacheOutcome=pe.NOT_APPLICABLE,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||d.EMPTY_STRING,this.wrapperVer=e.wrapperVer||d.EMPTY_STRING,this.telemetryCacheKey=x.CACHE_KEY+q.CACHE_KEY_SEPARATOR+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${x.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer].join(x.VALUE_SEPARATOR),n=this.getRegionDiscoveryFields(),o=[e,n].join(x.VALUE_SEPARATOR);return[x.SCHEMA_VERSION,o,t].join(x.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=ft.maxErrorsToSend(e),n=e.failedRequests.slice(0,2*t).join(x.VALUE_SEPARATOR),o=e.errors.slice(0,t).join(x.VALUE_SEPARATOR),r=e.errors.length,i=t<r?x.OVERFLOW_TRUE:x.OVERFLOW_FALSE,s=[r,i].join(x.VALUE_SEPARATOR);return[x.SCHEMA_VERSION,e.cacheHits,n,o,s].join(x.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=x.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof N?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(x.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){const e={failedRequests:[],errors:[],cacheHits:0};return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||e}clearTelemetryCache(){const e=this.getLastRequests(),t=ft.maxErrorsToSend(e),n=e.errors.length;if(t===n)this.cacheManager.removeItem(this.telemetryCacheKey);else{const o={failedRequests:e.failedRequests.slice(t*2),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,o)}}static maxErrorsToSend(e){let t,n=0,o=0;const r=e.errors.length;for(t=0;t<r;t++){const i=e.failedRequests[2*t]||d.EMPTY_STRING,s=e.failedRequests[2*t+1]||d.EMPTY_STRING,c=e.errors[t]||d.EMPTY_STRING;if(o+=i.toString().length+s.toString().length+c.length+3,o<x.MAX_LAST_HEADER_BYTES)n+=1;else break}return n}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||d.EMPTY_STRING),e.push(this.regionSource||d.EMPTY_STRING),e.push(this.regionOutcome||d.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}}/*! @azure/msal-common v14.6.1 2024-01-23 */class so{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class Ls{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:Ts.InProgress,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new so}}startPerformanceMeasurement(){return new so}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}/*! @azure/msal-browser v3.7.1 2024-01-23 */const wn="pkce_not_created",fr="crypto_nonexistent",bt="empty_navigate_uri",Cr="hash_empty_error",_n="no_state_in_hash",yr="hash_does_not_contain_known_properties",Tr="unable_to_parse_state",Ar="state_interaction_type_mismatch",Ir="interaction_in_progress",Er="popup_window_error",vr="empty_window_error",Se="user_cancelled",Us="monitor_popup_timeout",Sr="monitor_window_timeout",wr="redirect_in_iframe",_r="block_iframe_reload",Rr="block_nested_popups",Ds="iframe_closed_prematurely",Ot="silent_logout_unsupported",kr="no_account_error",br="silent_prompt_value_error",Or="no_token_request_cache_error",Nr="unable_to_parse_token_request_cache_error",Rn="no_cached_authority_error",Hs="auth_request_not_set_error",Ks="invalid_cache_type",Pr="non_browser_environment",be="database_not_open",Ct="no_network_connectivity",Mr="post_request_failed",Lr="get_request_failed",Yt="failed_to_parse_response",Q="unable_to_load_token",kn="crypto_key_not_found",Ur="auth_code_required",Dr="auth_code_or_nativeAccountId_required",Hr="spa_code_and_nativeAccountId_present",bn="database_unavailable",Kr="unable_to_acquire_token_from_native_platform",Br="native_handshake_timeout",Fr="native_extension_not_installed",Je="native_connection_not_established",xr="uninitialized_public_client_application",Gr="native_prompt_not_supported",qr="invalid_base64_string";/*! @azure/msal-browser v3.7.1 2024-01-23 */const ce="For more visit: aka.ms/msaljs/browser-errors",Bs={[wn]:"The PKCE code challenge and verifier could not be generated.",[fr]:"The crypto object or function is not available.",[bt]:"Navigation URI is empty. Please check stack trace for more info.",[Cr]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${ce}`,[_n]:"Hash does not contain state. Please verify that the request originated from msal.",[yr]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${ce}`,[Tr]:"Unable to parse state. Please verify that the request originated from msal.",[Ar]:"Hash contains state but the interaction type does not match the caller.",[Ir]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${ce}`,[Er]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[vr]:"window.open returned null or undefined window object.",[Se]:"User cancelled the flow.",[Us]:`Token acquisition in popup failed due to timeout.  ${ce}`,[Sr]:`Token acquisition in iframe failed due to timeout.  ${ce}`,[wr]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[_r]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${ce}`,[Rr]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[Ds]:"The iframe being monitored was closed prematurely.",[Ot]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[kr]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[br]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[Or]:"No token request found in cache.",[Nr]:"The cached token request could not be parsed.",[Rn]:"No cached authority found.",[Hs]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[Ks]:"Invalid cache type",[Pr]:"Login and token requests are not supported in non-browser environments.",[be]:"Database is not open!",[Ct]:"No network connectivity. Check your internet connection.",[Mr]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[Lr]:"Network request failed. Please check the network trace to determine root cause.",[Yt]:"Failed to parse network response. Check network trace.",[Q]:"Error loading token to cache.",[kn]:"Cryptographic Key or Keypair not found in browser storage.",[Ur]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[Dr]:"An authorization code or nativeAccountId must be provided to this flow.",[Hr]:"Request cannot contain both spa code and native account id.",[bn]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[Kr]:`Unable to acquire token from native platform.  ${ce}`,[Br]:"Timed out while attempting to establish connection to browser extension",[Fr]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[Je]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${ce}`,[xr]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${ce}`,[Gr]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[qr]:"Invalid base64 encoded string."};class Xe extends N{constructor(e){super(e,Bs[e]),Object.setPrototypeOf(this,Xe.prototype),this.name="BrowserAuthError"}}function f(a){return new Xe(a)}/*! @azure/msal-browser v3.7.1 2024-01-23 */const X={INTERACTION_IN_PROGRESS_VALUE:"interaction_in_progress",INVALID_GRANT_ERROR:"invalid_grant",POPUP_WIDTH:483,POPUP_HEIGHT:600,POPUP_NAME_PREFIX:"msal",DEFAULT_POLL_INTERVAL_MS:30,MSAL_SKU:"msal.js.browser"},qe={CHANNEL_ID:"53ee284d-920a-4b59-9d30-a60315b26836",PREFERRED_EXTENSION_ID:"ppnbnpeolgkicgegkbkbjmhlideopiji",MATS_TELEMETRY:"MATS"},Ee={HandshakeRequest:"Handshake",HandshakeResponse:"HandshakeResponse",GetToken:"GetToken",Response:"Response"},U={LocalStorage:"localStorage",SessionStorage:"sessionStorage",MemoryStorage:"memoryStorage"},co={GET:"GET",POST:"POST"},_={AUTHORITY:"authority",ACQUIRE_TOKEN_ACCOUNT:"acquireToken.account",SESSION_STATE:"session.state",REQUEST_STATE:"request.state",NONCE_IDTOKEN:"nonce.id_token",ORIGIN_URI:"request.origin",RENEW_STATUS:"token.renew.status",URL_HASH:"urlHash",REQUEST_PARAMS:"request.params",SCOPES:"scopes",INTERACTION_STATUS_KEY:"interaction.status",CCS_CREDENTIAL:"ccs.credential",CORRELATION_ID:"request.correlationId",NATIVE_REQUEST:"request.native",REDIRECT_CONTEXT:"request.redirect.context"},me={ACCOUNT_KEYS:"msal.account.keys",TOKEN_KEYS:"msal.token.keys"},at={WRAPPER_SKU:"wrapper.sku",WRAPPER_VER:"wrapper.version"},O={acquireTokenRedirect:861,acquireTokenPopup:862,ssoSilent:863,acquireTokenSilent_authCode:864,handleRedirectPromise:865,acquireTokenByCode:866,acquireTokenSilent_silentFlow:61,logout:961,logoutPopup:962};var C;(function(a){a.Redirect="redirect",a.Popup="popup",a.Silent="silent",a.None="none"})(C||(C={}));const K={Startup:"startup",Login:"login",Logout:"logout",AcquireToken:"acquireToken",SsoSilent:"ssoSilent",HandleRedirect:"handleRedirect",None:"none"},lo={scopes:We},$r="jwk",Fs={React:"@azure/msal-react",Angular:"@azure/msal-angular"},jt="msal.db",xs=1,Gs=`${jt}.keys`,W={Default:0,AccessToken:1,AccessTokenAndRefreshToken:2,RefreshToken:3,RefreshTokenAndNetwork:4,Skip:5},qs=[W.Default,W.Skip,W.RefreshTokenAndNetwork],$s="msal.browser.log.level",zs="msal.browser.log.pii";/*! @azure/msal-browser v3.7.1 2024-01-23 */function Vs(a){a.location.hash="",typeof a.history.replaceState=="function"&&a.history.replaceState(null,"",`${a.location.origin}${a.location.pathname}${a.location.search}`)}function Ys(a){const e=a.split("#");e.shift(),window.location.hash=e.length>0?e.join("#"):""}function On(){return window.parent!==window}function js(){return typeof window<"u"&&!!window.opener&&window.opener!==window&&typeof window.name=="string"&&window.name.indexOf(`${X.POPUP_NAME_PREFIX}.`)===0}function de(){return window.location.href.split("?")[0].split("#")[0]}function Ws(){const e=new w(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}function Lt(){if(w.hashContainsKnownProperties(window.location.hash)&&On())throw f(_r)}function Qs(a,e){const t=On();if(a===C.Redirect&&t&&!e)throw f(wr)}function Js(){if(js())throw f(Rr)}function Xs(a){if(!a)throw f(Pr)}function ho(a){if(!a)throw f(xr)}function zr(a){const e=document.createElement("link");e.rel="preconnect",e.href=new URL(a).origin,e.crossOrigin="anonymous",document.head.appendChild(e),window.setTimeout(()=>{try{document.head.removeChild(e)}catch{}},1e4)}/*! @azure/msal-browser v3.7.1 2024-01-23 */class yt{navigateInternal(e,t){return yt.defaultNavigateWindow(e,t)}navigateExternal(e,t){return yt.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise(n=>{setTimeout(()=>{n(!0)},t.timeout)})}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class Zs{async sendGetRequestAsync(e,t){let n;try{n=await fetch(e,{method:co.GET,headers:this.getFetchHeaders(t)})}catch{throw window.navigator.onLine?f(Lr):f(Ct)}try{return{headers:this.getHeaderDict(n.headers),body:await n.json(),status:n.status}}catch{throw f(Yt)}}async sendPostRequestAsync(e,t){const n=t&&t.body||d.EMPTY_STRING;let o;try{o=await fetch(e,{method:co.POST,headers:this.getFetchHeaders(t),body:n})}catch{throw window.navigator.onLine?f(Mr):f(Ct)}try{return{headers:this.getHeaderDict(o.headers),body:await o.json(),status:o.status}}catch{throw f(Yt)}}getFetchHeaders(e){const t=new Headers;if(!(e&&e.headers))return t;const n=e.headers;return Object.keys(n).forEach(o=>{t.append(o,n[o])}),t}getHeaderDict(e){const t={};return e.forEach((n,o)=>{t[o]=n}),t}}/*! @azure/msal-browser v3.7.1 2024-01-23 */const ec=6e4,Wt=1e4,tc=3e4,nc=2e3;function oc({auth:a,cache:e,system:t,telemetry:n},o){const r={clientId:d.EMPTY_STRING,authority:`${d.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:d.EMPTY_STRING,authorityMetadata:d.EMPTY_STRING,redirectUri:d.EMPTY_STRING,postLogoutRedirectUri:d.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:ue.AAD,OIDCOptions:{serverResponseType:Qe.FRAGMENT,defaultScopes:[d.OPENID_SCOPE,d.PROFILE_SCOPE,d.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:dn.None,tenant:d.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1},i={cacheLocation:U.SessionStorage,temporaryCacheLocation:U.SessionStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!!(e&&e.cacheLocation===U.LocalStorage),claimsBasedCachingEnabled:!1},s={loggerCallback:()=>{},logLevel:R.Info,piiLoggingEnabled:!1},l={...{...hr,loggerOptions:s,networkClient:o?new Zs:Ps,navigationClient:new yt,loadFrameTimeout:0,windowHashTimeout:(t==null?void 0:t.loadFrameTimeout)||ec,iframeHashTimeout:(t==null?void 0:t.loadFrameTimeout)||Wt,navigateFrameWait:0,redirectNavigationTimeout:tc,asyncPopups:!1,allowRedirectInIframe:!1,allowNativeBroker:!1,nativeBrokerHandshakeTimeout:(t==null?void 0:t.nativeBrokerHandshakeTimeout)||nc,pollIntervalMilliseconds:X.DEFAULT_POLL_INTERVAL_MS},...t,loggerOptions:(t==null?void 0:t.loggerOptions)||s},u={application:{appName:d.EMPTY_STRING,appVersion:d.EMPTY_STRING},client:new Ls};if((a==null?void 0:a.protocolMode)!==ue.OIDC&&(a!=null&&a.OIDCOptions)&&new ye(l.loggerOptions).warning(JSON.stringify(b(or))),a!=null&&a.protocolMode&&a.protocolMode!==ue.AAD&&(l!=null&&l.allowNativeBroker))throw b(rr);return{auth:{...r,...a,OIDCOptions:{...r.OIDCOptions,...a==null?void 0:a.OIDCOptions}},cache:{...i,...e},system:l,telemetry:{...u,...n}}}/*! @azure/msal-browser v3.7.1 2024-01-23 */const rc="@azure/msal-browser",Nn="3.7.1";/*! @azure/msal-browser v3.7.1 2024-01-23 */class Pn{static loggerCallback(e,t){switch(e){case R.Error:console.error(t);return;case R.Info:console.info(t);return;case R.Verbose:console.debug(t);return;case R.Warning:console.warn(t);return;default:console.log(t);return}}constructor(e){var c;this.browserEnvironment=typeof window<"u",this.config=oc(e,this.browserEnvironment);let t;try{t=window[U.SessionStorage]}catch{}const n=t==null?void 0:t.getItem($s),o=(c=t==null?void 0:t.getItem(zs))==null?void 0:c.toLowerCase(),r=o==="true"?!0:o==="false"?!1:void 0,i={...this.config.system.loggerOptions},s=n&&Object.keys(R).includes(n)?R[n]:void 0;s&&(i.loggerCallback=Pn.loggerCallback,i.logLevel=s),r!==void 0&&(i.piiLoggingEnabled=r),this.logger=new ye(i,rc,Nn),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class we extends Pn{getModuleName(){return we.MODULE_NAME}getId(){return we.ID}async initialize(){return this.available=typeof window<"u",this.available}}we.MODULE_NAME="";we.ID="StandardOperatingContext";async function ic(a){const e=new we(a);return await e.initialize(),(await li(()=>Promise.resolve().then(()=>Yc),void 0,import.meta.url)).StandardController.createController(e)}/*! @azure/msal-browser v3.7.1 2024-01-23 */function Ut(a){return encodeURIComponent(Mn(a).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function Tt(a){return Vr(a).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function Mn(a){return Vr(new TextEncoder().encode(a))}function Vr(a){const e=Array.from(a,t=>String.fromCodePoint(t)).join("");return btoa(e)}/*! @azure/msal-browser v3.7.1 2024-01-23 */function ae(a){return new TextDecoder().decode(ac(a))}function ac(a){let e=a.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw f(qr)}const t=atob(e);return Uint8Array.from(t,n=>n.codePointAt(0)||0)}/*! @azure/msal-browser v3.7.1 2024-01-23 */const sc="RSASSA-PKCS1-v1_5",Yr="SHA-256",cc=2048,lc=new Uint8Array([1,0,1]),Ln={name:sc,hash:Yr,modulusLength:cc,publicExponent:lc};function hc(a){if("crypto"in window)a.verbose("BrowserCrypto: modern crypto interface available");else throw a.error("BrowserCrypto: crypto interface is unavailable"),f(fr)}async function jr(a,e,t){e==null||e.addQueueMeasurement(h.Sha256Digest,t);const o=new TextEncoder().encode(a);return window.crypto.subtle.digest(Yr,o)}function dc(a){return window.crypto.getRandomValues(a)}function ge(){return window.crypto.randomUUID()}async function uc(a,e){return window.crypto.subtle.generateKey(Ln,a,e)}async function Dt(a){return window.crypto.subtle.exportKey($r,a)}async function gc(a,e,t){return window.crypto.subtle.importKey($r,a,Ln,e,t)}async function mc(a,e){return window.crypto.subtle.sign(Ln,a,e)}/*! @azure/msal-browser v3.7.1 2024-01-23 */class pc{constructor(){this.dbName=jt,this.version=xs,this.tableName=Gs,this.dbOpen=!1}async open(){return new Promise((e,t)=>{const n=window.indexedDB.open(this.dbName,this.version);n.addEventListener("upgradeneeded",o=>{o.target.result.createObjectStore(this.tableName)}),n.addEventListener("success",o=>{const r=o;this.db=r.target.result,this.dbOpen=!0,e()}),n.addEventListener("error",()=>t(f(bn)))})}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(f(be));const i=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);i.addEventListener("success",s=>{const c=s;this.closeConnection(),t(c.target.result)}),i.addEventListener("error",s=>{this.closeConnection(),n(s)})})}async setItem(e,t){return await this.validateDbIsOpen(),new Promise((n,o)=>{if(!this.db)return o(f(be));const s=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);s.addEventListener("success",()=>{this.closeConnection(),n()}),s.addEventListener("error",c=>{this.closeConnection(),o(c)})})}async removeItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(f(be));const i=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);i.addEventListener("success",()=>{this.closeConnection(),t()}),i.addEventListener("error",s=>{this.closeConnection(),n(s)})})}async getKeys(){return await this.validateDbIsOpen(),new Promise((e,t)=>{if(!this.db)return t(f(be));const r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();r.addEventListener("success",i=>{const s=i;this.closeConnection(),e(s.target.result)}),r.addEventListener("error",i=>{this.closeConnection(),t(i)})})}async containsKey(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(f(be));const i=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);i.addEventListener("success",s=>{const c=s;this.closeConnection(),t(c.target.result===1)}),i.addEventListener("error",s=>{this.closeConnection(),n(s)})})}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise((e,t)=>{const n=window.indexedDB.deleteDatabase(jt);n.addEventListener("success",()=>e(!0)),n.addEventListener("blocked",()=>e(!0)),n.addEventListener("error",()=>t(!1))})}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class Qt{constructor(){this.cache=new Map}getItem(e){return this.cache.get(e)||null}setItem(e,t){this.cache.set(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach((t,n)=>{e.push(n)}),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class uo{constructor(e,t){this.inMemoryCache=new Qt,this.indexedDBCache=new pc,this.logger=e,this.storeName=t}handleDatabaseAccessError(e){if(e instanceof Xe&&e.errorCode===bn)this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.");else throw e}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(n){this.handleDatabaseAccessError(n)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(n){this.handleDatabaseAccessError(n)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(t){this.handleDatabaseAccessError(t)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(e.length===0)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(t){this.handleDatabaseAccessError(t)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(n){this.handleDatabaseAccessError(n)}return t}clearInMemory(){this.logger.verbose(`Deleting in-memory keystore ${this.storeName}`),this.inMemoryCache.clear(),this.logger.verbose(`In-memory keystore ${this.storeName} deleted`)}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}/*! @azure/msal-browser v3.7.1 2024-01-23 */const go={asymmetricKeys:"asymmetricKeys",symmetricKeys:"symmetricKeys"};class fc{constructor(e){this.logger=e,this.asymmetricKeys=new uo(this.logger,go.asymmetricKeys),this.symmetricKeys=new uo(this.logger,go.symmetricKeys)}async clear(){this.asymmetricKeys.clearInMemory(),this.symmetricKeys.clearInMemory();try{return await this.asymmetricKeys.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class Be{constructor(e,t){this.logger=e,hc(e),this.cache=new fc(this.logger),this.performanceClient=t}createNewGuid(){return ge()}base64Encode(e){return Mn(e)}base64Decode(e){return ae(e)}async getPublicKeyThumbprint(e){var u;const t=(u=this.performanceClient)==null?void 0:u.startMeasurement(h.CryptoOptsGetPublicKeyThumbprint,e.correlationId),n=await uc(Be.EXTRACTABLE,Be.POP_KEY_USAGES),o=await Dt(n.publicKey),r={e:o.e,kty:o.kty,n:o.n},i=mo(r),s=await this.hashString(i),c=await Dt(n.privateKey),l=await gc(c,!1,["sign"]);return await this.cache.asymmetricKeys.setItem(s,{privateKey:l,publicKey:n.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),s}async removeTokenBindingKey(e){return await this.cache.asymmetricKeys.removeItem(e),!await this.cache.asymmetricKeys.containsKey(e)}async clearKeystore(){return this.cache.clear()}async signJwt(e,t,n,o){var ne;const r=(ne=this.performanceClient)==null?void 0:ne.startMeasurement(h.CryptoOptsSignJwt,o),i=await this.cache.asymmetricKeys.getItem(t);if(!i)throw f(kn);const s=await Dt(i.publicKey),c=mo(s),l=Ut(JSON.stringify({kid:t})),u=Sn.getShrHeaderString({...n==null?void 0:n.header,alg:s.alg,kid:l}),m=Ut(u);e.cnf={jwk:JSON.parse(c)};const y=Ut(JSON.stringify(e)),I=`${m}.${y}`,E=new TextEncoder().encode(I),P=await mc(i.privateKey,E),se=Tt(new Uint8Array(P)),V=`${I}.${se}`;return r&&r.end({success:!0}),V}async hashString(e){const t=await jr(e),n=new Uint8Array(t);return Tt(n)}}Be.POP_KEY_USAGES=["sign","verify"];Be.EXTRACTABLE=!0;function mo(a){return JSON.stringify(a,Object.keys(a).sort())}/*! @azure/msal-browser v3.7.1 2024-01-23 */const Wr="storage_not_supported",H="stubbed_public_client_application_called",Qr="in_mem_redirect_unavailable";/*! @azure/msal-browser v3.7.1 2024-01-23 */const Cc={[Wr]:"Given storage configuration option was not supported.",[H]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[Qr]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."};class Un extends N{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,Un.prototype)}}function L(a){return new Un(a,Cc[a])}/*! @azure/msal-browser v3.7.1 2024-01-23 */class po{constructor(e){this.validateWindowStorage(e),this.windowStorage=window[e]}validateWindowStorage(e){if(e!==U.LocalStorage&&e!==U.SessionStorage||!window[e])throw L(Wr)}getItem(e){return this.windowStorage.getItem(e)}setItem(e,t){this.windowStorage.setItem(e,t)}removeItem(e){this.windowStorage.removeItem(e)}getKeys(){return Object.keys(this.windowStorage)}containsKey(e){return this.windowStorage.hasOwnProperty(e)}}/*! @azure/msal-browser v3.7.1 2024-01-23 */function Jr(a,e){if(!e)return null;try{return ee.parseRequestState(a,e).libraryState.meta}catch{throw g(Ue)}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class Jt extends De{constructor(e,t,n,o,r){super(e,n,o,r),this.COOKIE_LIFE_MULTIPLIER=24*60*60*1e3,this.cacheConfig=t,this.logger=o,this.internalStorage=new Qt,this.browserStorage=this.setupBrowserStorage(this.cacheConfig.cacheLocation),this.temporaryCacheStorage=this.setupTemporaryCacheStorage(this.cacheConfig.temporaryCacheLocation,this.cacheConfig.cacheLocation),t.cacheMigrationEnabled&&(this.migrateCacheEntries(),this.createKeyMaps())}setupBrowserStorage(e){switch(e){case U.LocalStorage:case U.SessionStorage:try{return new po(e)}catch(t){this.logger.verbose(t);break}}return this.cacheConfig.cacheLocation=U.MemoryStorage,new Qt}setupTemporaryCacheStorage(e,t){switch(t){case U.LocalStorage:case U.SessionStorage:try{return new po(e||U.SessionStorage)}catch(n){return this.logger.verbose(n),this.internalStorage}case U.MemoryStorage:default:return this.internalStorage}}migrateCacheEntries(){const e=`${d.CACHE_PREFIX}.${F.ID_TOKEN}`,t=`${d.CACHE_PREFIX}.${F.CLIENT_INFO}`,n=`${d.CACHE_PREFIX}.${F.ERROR}`,o=`${d.CACHE_PREFIX}.${F.ERROR_DESC}`,r=this.browserStorage.getItem(e),i=this.browserStorage.getItem(t),s=this.browserStorage.getItem(n),c=this.browserStorage.getItem(o),l=[r,i,s,c];[F.ID_TOKEN,F.CLIENT_INFO,F.ERROR,F.ERROR_DESC].forEach((m,y)=>this.migrateCacheEntry(m,l[y]))}migrateCacheEntry(e,t){t&&this.setTemporaryCache(e,t,!0)}createKeyMaps(){this.logger.trace("BrowserCacheManager - createKeyMaps called.");const e=this.getItem(me.ACCOUNT_KEYS),t=this.getItem(`${me.TOKEN_KEYS}.${this.clientId}`);if(e&&t){this.logger.verbose("BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.");return}this.browserStorage.getKeys().forEach(o=>{if(this.isCredentialKey(o)){const r=this.getItem(o);if(r){const i=this.validateAndParseJson(r);if(i&&i.hasOwnProperty("credentialType"))switch(i.credentialType){case A.ID_TOKEN:if(jn(i)){this.logger.trace("BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${o} found, saving key to token key map`);const s=i,c=this.updateCredentialCacheKey(o,s);this.addTokenKey(c,A.ID_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${o}`);break;case A.ACCESS_TOKEN:case A.ACCESS_TOKEN_WITH_AUTH_SCHEME:if(Yn(i)){this.logger.trace("BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${o} found, saving key to token key map`);const s=i,c=this.updateCredentialCacheKey(o,s);this.addTokenKey(c,A.ACCESS_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${o}`);break;case A.REFRESH_TOKEN:if(Wn(i)){this.logger.trace("BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${o} found, saving key to token key map`);const s=i,c=this.updateCredentialCacheKey(o,s);this.addTokenKey(c,A.REFRESH_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${o}`);break}}}if(this.isAccountKey(o)){const r=this.getItem(o);if(r){const i=this.validateAndParseJson(r);i&&D.isAccountEntity(i)&&(this.logger.trace("BrowserCacheManager:createKeyMaps - account found, saving key to account key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${o} found, saving key to account key map`),this.addAccountKeyToMap(o))}}})}validateAndParseJson(e){try{const t=JSON.parse(e);return t&&typeof t=="object"?t:null}catch{return null}}getItem(e){return this.browserStorage.getItem(e)}setItem(e,t){this.browserStorage.setItem(e,t)}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");const n=this.getCachedAccountEntity(e);return this.updateOutdatedCachedAccount(e,n,t)}getCachedAccountEntity(e){const t=this.getItem(e);if(!t)return this.removeAccountKeyFromMap(e),null;const n=this.validateAndParseJson(t);return!n||!D.isAccountEntity(n)?(this.removeAccountKeyFromMap(e),null):De.toObject(new D,n)}setAccount(e){this.logger.trace("BrowserCacheManager.setAccount called");const t=e.generateAccountKey();this.setItem(t,JSON.stringify(e)),this.addAccountKeyToMap(t)}getAccountKeys(){this.logger.trace("BrowserCacheManager.getAccountKeys called");const e=this.getItem(me.ACCOUNT_KEYS);return e?JSON.parse(e):(this.logger.verbose("BrowserCacheManager.getAccountKeys - No account keys found"),[])}addAccountKeyToMap(e){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const t=this.getAccountKeys();t.indexOf(e)===-1?(t.push(e),this.setItem(me.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added")):this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map")}removeAccountKeyFromMap(e){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const t=this.getAccountKeys(),n=t.indexOf(e);n>-1?(t.splice(n,1),this.setItem(me.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")):this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}async removeAccount(e){super.removeAccount(e),this.removeAccountKeyFromMap(e)}removeOutdatedAccount(e){this.removeItem(e),this.removeAccountKeyFromMap(e)}removeIdToken(e){super.removeIdToken(e),this.removeTokenKey(e,A.ID_TOKEN)}async removeAccessToken(e){super.removeAccessToken(e),this.removeTokenKey(e,A.ACCESS_TOKEN)}removeRefreshToken(e){super.removeRefreshToken(e),this.removeTokenKey(e,A.REFRESH_TOKEN)}getTokenKeys(){this.logger.trace("BrowserCacheManager.getTokenKeys called");const e=this.getItem(`${me.TOKEN_KEYS}.${this.clientId}`);if(e){const t=this.validateAndParseJson(e);if(t&&t.hasOwnProperty("idToken")&&t.hasOwnProperty("accessToken")&&t.hasOwnProperty("refreshToken"))return t;this.logger.error("BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.")}else this.logger.verbose("BrowserCacheManager.getTokenKeys - No token keys found");return{idToken:[],accessToken:[],refreshToken:[]}}addTokenKey(e,t){this.logger.trace("BrowserCacheManager addTokenKey called");const n=this.getTokenKeys();switch(t){case A.ID_TOKEN:n.idToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),n.idToken.push(e));break;case A.ACCESS_TOKEN:n.accessToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - accessToken added to map"),n.accessToken.push(e));break;case A.REFRESH_TOKEN:n.refreshToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),n.refreshToken.push(e));break;default:throw this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${t}`),g(Gt)}this.setItem(`${me.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(n))}removeTokenKey(e,t){this.logger.trace("BrowserCacheManager removeTokenKey called");const n=this.getTokenKeys();switch(t){case A.ID_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`);const o=n.idToken.indexOf(e);o>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - idToken removed from map"),n.idToken.splice(o,1)):this.logger.info("BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.");break;case A.ACCESS_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`);const r=n.accessToken.indexOf(e);r>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - accessToken removed from map"),n.accessToken.splice(r,1)):this.logger.info("BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.");break;case A.REFRESH_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`);const i=n.refreshToken.indexOf(e);i>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken removed from map"),n.refreshToken.splice(i,1)):this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.");break;default:throw this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${t}`),g(Gt)}this.setItem(`${me.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(n))}getIdTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.ID_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!jn(n)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.ID_TOKEN),null):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),n)}setIdTokenCredential(e){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const t=Ne(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,A.ID_TOKEN)}getAccessTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.ACCESS_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!Yn(n)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.ACCESS_TOKEN),null):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),n)}setAccessTokenCredential(e){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const t=Ne(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,A.ACCESS_TOKEN)}getRefreshTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.REFRESH_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!Wn(n)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,A.REFRESH_TOKEN),null):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),n)}setRefreshTokenCredential(e){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const t=Ne(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,A.REFRESH_TOKEN)}getAppMetadata(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!ma(e,n)?(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),n)}setAppMetadata(e){this.logger.trace("BrowserCacheManager.setAppMetadata called");const t=ga(e);this.setItem(t,JSON.stringify(e))}getServerTelemetry(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!da(e,n)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),n)}setServerTelemetry(e,t){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t))}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return n&&pa(e,n)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),n):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter(t=>this.isAuthorityMetadata(t))}setWrapperMetadata(e,t){this.internalStorage.setItem(at.WRAPPER_SKU,e),this.internalStorage.setItem(at.WRAPPER_VER,t)}getWrapperMetadata(){const e=this.internalStorage.getItem(at.WRAPPER_SKU)||d.EMPTY_STRING,t=this.internalStorage.getItem(at.WRAPPER_VER)||d.EMPTY_STRING;return[e,t]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(){const e=this.generateCacheKey(F.ACTIVE_ACCOUNT_FILTERS),t=this.getItem(e);if(!t){this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema");const o=this.generateCacheKey(F.ACTIVE_ACCOUNT),r=this.getItem(o);if(!r)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null;const i=this.getAccountInfoFilteredBy({localAccountId:r});return i?(this.logger.trace("BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"),this.logger.trace("BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"),this.setActiveAccount(i),i):null}const n=this.validateAndParseJson(t);return n?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:n.homeAccountId,localAccountId:n.localAccountId,tenantId:n.tenantId})):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e){const t=this.generateCacheKey(F.ACTIVE_ACCOUNT_FILTERS),n=this.generateCacheKey(F.ACTIVE_ACCOUNT);if(e){this.logger.verbose("setActiveAccount: Active account set");const o={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId};this.browserStorage.setItem(t,JSON.stringify(o)),this.browserStorage.setItem(n,e.localAccountId)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(t),this.browserStorage.removeItem(n)}getThrottlingCache(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!ua(e,n)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),n)}setThrottlingCache(e,t){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t))}getTemporaryCache(e,t){const n=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const r=this.getItemCookie(n);if(r)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),r}const o=this.temporaryCacheStorage.getItem(n);if(!o){if(this.cacheConfig.cacheLocation===U.LocalStorage){const r=this.browserStorage.getItem(n);if(r)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),r}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),o}setTemporaryCache(e,t,n){const o=n?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(o,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.setItemCookie(o,t))}removeItem(e){this.browserStorage.removeItem(e),this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.clearItemCookie(e))}containsKey(e){return this.browserStorage.containsKey(e)||this.temporaryCacheStorage.containsKey(e)}getKeys(){return[...this.browserStorage.getKeys(),...this.temporaryCacheStorage.getKeys()]}async clear(){await this.removeAllAccounts(),this.removeAppMetadata(),this.getKeys().forEach(e=>{(this.browserStorage.containsKey(e)||this.temporaryCacheStorage.containsKey(e))&&(e.indexOf(d.CACHE_PREFIX)!==-1||e.indexOf(this.clientId)!==-1)&&this.removeItem(e)}),this.internalStorage.clear()}async clearTokensAndKeysWithClaims(e){e.addQueueMeasurement(h.ClearTokensAndKeysWithClaims);const t=this.getTokenKeys(),n=[];t.accessToken.forEach(o=>{const r=this.getAccessTokenCredential(o);r!=null&&r.requestedClaimsHash&&o.includes(r.requestedClaimsHash.toLowerCase())&&n.push(this.removeAccessToken(o))}),await Promise.all(n),n.length>0&&this.logger.warning(`${n.length} access tokens with claims in the cache keys have been removed from the cache.`)}setItemCookie(e,t,n){let o=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=Lax;`;if(n){const r=this.getCookieExpirationTime(n);o+=`expires=${r};`}this.cacheConfig.secureCookies&&(o+="Secure;"),document.cookie=o}getItemCookie(e){const t=`${encodeURIComponent(e)}=`,n=document.cookie.split(";");for(let o=0;o<n.length;o++){let r=n[o];for(;r.charAt(0)===" ";)r=r.substring(1);if(r.indexOf(t)===0)return decodeURIComponent(r.substring(t.length,r.length))}return d.EMPTY_STRING}clearMsalCookies(){const e=`${d.CACHE_PREFIX}.${this.clientId}`;document.cookie.split(";").forEach(n=>{for(;n.charAt(0)===" ";)n=n.substring(1);if(n.indexOf(e)===0){const o=n.split("=")[0];this.clearItemCookie(o)}})}clearItemCookie(e){this.setItemCookie(e,d.EMPTY_STRING,-1)}getCookieExpirationTime(e){const t=new Date;return new Date(t.getTime()+e*this.COOKIE_LIFE_MULTIPLIER).toUTCString()}getCache(){return this.browserStorage}setCache(){}generateCacheKey(e){return this.validateAndParseJson(e)?JSON.stringify(e):Z.startsWith(e,d.CACHE_PREFIX)||Z.startsWith(e,F.ADAL_ID_TOKEN)?e:`${d.CACHE_PREFIX}.${this.clientId}.${e}`}generateAuthorityKey(e){const{libraryState:{id:t}}=ee.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${_.AUTHORITY}.${t}`)}generateNonceKey(e){const{libraryState:{id:t}}=ee.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${_.NONCE_IDTOKEN}.${t}`)}generateStateKey(e){const{libraryState:{id:t}}=ee.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${_.REQUEST_STATE}.${t}`)}getCachedAuthority(e){const t=this.generateStateKey(e),n=this.getTemporaryCache(t);if(!n)return null;const o=this.generateAuthorityKey(n);return this.getTemporaryCache(o)}updateCacheEntries(e,t,n,o,r){this.logger.trace("BrowserCacheManager.updateCacheEntries called");const i=this.generateStateKey(e);this.setTemporaryCache(i,e,!1);const s=this.generateNonceKey(e);this.setTemporaryCache(s,t,!1);const c=this.generateAuthorityKey(e);if(this.setTemporaryCache(c,n,!1),r){const l={credential:r.homeAccountId,type:j.HOME_ACCOUNT_ID};this.setTemporaryCache(_.CCS_CREDENTIAL,JSON.stringify(l),!0)}else if(o){const l={credential:o,type:j.UPN};this.setTemporaryCache(_.CCS_CREDENTIAL,JSON.stringify(l),!0)}}resetRequestCache(e){this.logger.trace("BrowserCacheManager.resetRequestCache called"),e&&(this.getKeys().forEach(t=>{t.indexOf(e)!==-1&&this.removeItem(t)}),this.removeItem(this.generateStateKey(e)),this.removeItem(this.generateNonceKey(e)),this.removeItem(this.generateAuthorityKey(e))),this.removeItem(this.generateCacheKey(_.REQUEST_PARAMS)),this.removeItem(this.generateCacheKey(_.ORIGIN_URI)),this.removeItem(this.generateCacheKey(_.URL_HASH)),this.removeItem(this.generateCacheKey(_.CORRELATION_ID)),this.removeItem(this.generateCacheKey(_.CCS_CREDENTIAL)),this.removeItem(this.generateCacheKey(_.NATIVE_REQUEST)),this.setInteractionInProgress(!1)}cleanRequestByState(e){if(this.logger.trace("BrowserCacheManager.cleanRequestByState called"),e){const t=this.generateStateKey(e),n=this.temporaryCacheStorage.getItem(t);this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n||d.EMPTY_STRING)}this.clearMsalCookies()}cleanRequestByInteractionType(e){this.logger.trace("BrowserCacheManager.cleanRequestByInteractionType called"),this.getKeys().forEach(t=>{if(t.indexOf(_.REQUEST_STATE)===-1)return;const n=this.temporaryCacheStorage.getItem(t);if(!n)return;const o=Jr(this.cryptoImpl,n);o&&o.interactionType===e&&(this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n))}),this.clearMsalCookies(),this.setInteractionInProgress(!1)}cacheCodeRequest(e){this.logger.trace("BrowserCacheManager.cacheCodeRequest called");const t=Mn(JSON.stringify(e));this.setTemporaryCache(_.REQUEST_PARAMS,t,!0)}getCachedRequest(e){this.logger.trace("BrowserCacheManager.getCachedRequest called");const t=this.getTemporaryCache(_.REQUEST_PARAMS,!0);if(!t)throw f(Or);let n;try{n=JSON.parse(ae(t))}catch(o){throw this.logger.errorPii(`Attempted to parse: ${t}`),this.logger.error(`Parsing cached token request threw with error: ${o}`),f(Nr)}if(this.removeItem(this.generateCacheKey(_.REQUEST_PARAMS)),!n.authority){const o=this.generateAuthorityKey(e),r=this.getTemporaryCache(o);if(!r)throw f(Rn);n.authority=r}return n}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(_.NATIVE_REQUEST,!0);if(!e)return this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null;const t=this.validateAndParseJson(e);return t||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null)}isInteractionInProgress(e){const t=this.getInteractionInProgress();return e?t===this.clientId:!!t}getInteractionInProgress(){const e=`${d.CACHE_PREFIX}.${_.INTERACTION_STATUS_KEY}`;return this.getTemporaryCache(e,!1)}setInteractionInProgress(e){const t=`${d.CACHE_PREFIX}.${_.INTERACTION_STATUS_KEY}`;if(e){if(this.getInteractionInProgress())throw f(Ir);this.setTemporaryCache(t,this.clientId,!1)}else!e&&this.getInteractionInProgress()===this.clientId&&this.removeItem(t)}getLegacyLoginHint(){const e=this.getTemporaryCache(F.ADAL_ID_TOKEN);e&&(this.browserStorage.removeItem(F.ADAL_ID_TOKEN),this.logger.verbose("Cached ADAL id token retrieved."));const t=this.getTemporaryCache(F.ID_TOKEN,!0);t&&(this.removeItem(this.generateCacheKey(F.ID_TOKEN)),this.logger.verbose("Cached MSAL.js v1 id token retrieved"));const n=t||e;if(n){const o=_e(n,ae);if(o.preferred_username)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"),o.preferred_username;if(o.upn)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"),o.upn;this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.")}return null}updateCredentialCacheKey(e,t){const n=Ne(t);if(e!==n){const o=this.getItem(e);if(o)return this.removeItem(e),this.setItem(n,o),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),n;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}getRedirectRequestContext(){return this.getTemporaryCache(_.REDIRECT_CONTEXT,!0)}setRedirectRequestContext(e){this.setTemporaryCache(_.REDIRECT_CONTEXT,e,!0)}async hydrateCache(e,t){var s,c,l,u,m;const n=vt((s=e.account)==null?void 0:s.homeAccountId,(c=e.account)==null?void 0:c.environment,e.idToken,this.clientId,e.tenantId);let o;t.claims&&(o=await this.cryptoImpl.hashString(t.claims));const r=St((l=e.account)==null?void 0:l.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),((u=e.expiresOn)==null?void 0:u.getTime())||0,((m=e.extExpiresOn)==null?void 0:m.getTime())||0,ae,void 0,e.tokenType,void 0,t.sshKid,t.claims,o),i=new Me(void 0,n,r);return this.saveCacheRecord(i)}}const yc=(a,e)=>{const t={cacheLocation:U.MemoryStorage,temporaryCacheLocation:U.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};return new Jt(a,t,dt,e)};/*! @azure/msal-browser v3.7.1 2024-01-23 */const T={INITIALIZE_START:"msal:initializeStart",INITIALIZE_END:"msal:initializeEnd",ACCOUNT_ADDED:"msal:accountAdded",ACCOUNT_REMOVED:"msal:accountRemoved",LOGIN_START:"msal:loginStart",LOGIN_SUCCESS:"msal:loginSuccess",LOGIN_FAILURE:"msal:loginFailure",ACQUIRE_TOKEN_START:"msal:acquireTokenStart",ACQUIRE_TOKEN_SUCCESS:"msal:acquireTokenSuccess",ACQUIRE_TOKEN_FAILURE:"msal:acquireTokenFailure",ACQUIRE_TOKEN_NETWORK_START:"msal:acquireTokenFromNetworkStart",SSO_SILENT_START:"msal:ssoSilentStart",SSO_SILENT_SUCCESS:"msal:ssoSilentSuccess",SSO_SILENT_FAILURE:"msal:ssoSilentFailure",ACQUIRE_TOKEN_BY_CODE_START:"msal:acquireTokenByCodeStart",ACQUIRE_TOKEN_BY_CODE_SUCCESS:"msal:acquireTokenByCodeSuccess",ACQUIRE_TOKEN_BY_CODE_FAILURE:"msal:acquireTokenByCodeFailure",HANDLE_REDIRECT_START:"msal:handleRedirectStart",HANDLE_REDIRECT_END:"msal:handleRedirectEnd",POPUP_OPENED:"msal:popupOpened",LOGOUT_START:"msal:logoutStart",LOGOUT_SUCCESS:"msal:logoutSuccess",LOGOUT_FAILURE:"msal:logoutFailure",LOGOUT_END:"msal:logoutEnd",RESTORE_FROM_BFCACHE:"msal:restoreFromBFCache"};/*! @azure/msal-browser v3.7.1 2024-01-23 */class Tc{constructor(e,t){this.eventCallbacks=new Map,this.logger=e,this.browserCrypto=t,this.listeningToStorageEvents=!1,this.handleAccountCacheChange=this.handleAccountCacheChange.bind(this)}addEventCallback(e){if(typeof window<"u"){const t=ge();return this.eventCallbacks.set(t,e),this.logger.verbose(`Event callback registered with id: ${t}`),t}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}enableAccountStorageEvents(){typeof window>"u"||(this.listeningToStorageEvents?this.logger.verbose("Account storage listener already registered."):(this.logger.verbose("Adding account storage listener."),this.listeningToStorageEvents=!0,window.addEventListener("storage",this.handleAccountCacheChange)))}disableAccountStorageEvents(){typeof window>"u"||(this.listeningToStorageEvents?(this.logger.verbose("Removing account storage listener."),window.removeEventListener("storage",this.handleAccountCacheChange),this.listeningToStorageEvents=!1):this.logger.verbose("No account storage listener registered."))}emitEvent(e,t,n,o){if(typeof window<"u"){const r={eventType:e,interactionType:t||null,payload:n||null,error:o||null,timestamp:Date.now()};this.logger.info(`Emitting event: ${e}`),this.eventCallbacks.forEach((i,s)=>{this.logger.verbose(`Emitting event to callback ${s}: ${e}`),i.apply(null,[r])})}}handleAccountCacheChange(e){try{const t=e.newValue||e.oldValue;if(!t)return;const n=JSON.parse(t);if(typeof n!="object"||!D.isAccountEntity(n))return;const r=De.toObject(new D,n).getAccountInfo();!e.oldValue&&e.newValue?(this.logger.info("Account was added to cache in a different window"),this.emitEvent(T.ACCOUNT_ADDED,void 0,r)):!e.newValue&&e.oldValue&&(this.logger.info("Account was removed from cache in a different window"),this.emitEvent(T.ACCOUNT_REMOVED,void 0,r))}catch{return}}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class Xr{constructor(e,t,n,o,r,i,s,c,l){this.config=e,this.browserStorage=t,this.browserCrypto=n,this.networkClient=this.config.system.networkClient,this.eventHandler=r,this.navigationClient=i,this.nativeMessageHandler=c,this.correlationId=l||ge(),this.logger=o.clone(X.MSAL_SKU,Nn,this.correlationId),this.performanceClient=s}async clearCacheOnLogout(e){if(e){D.accountInfoIsEqual(e,this.browserStorage.getActiveAccount(),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null));try{await this.browserStorage.removeAccount(D.generateAccountCacheKey(e)),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch{this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),await this.browserStorage.clear(),await this.browserCrypto.clearKeystore()}catch{this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}async initializeBaseRequest(e,t){this.performanceClient.addQueueMeasurement(h.InitializeBaseRequest,this.correlationId);const n=e.authority||this.config.auth.authority;t&&await this.validateRequestAuthority(n,t);const o=[...e&&e.scopes||[]],r={...e,correlationId:this.correlationId,authority:n,scopes:o};if(!r.authenticationScheme)r.authenticationScheme=k.BEARER,this.logger.verbose(`Authentication Scheme wasn't explicitly set in request, defaulting to "Bearer" request`);else{if(r.authenticationScheme===k.SSH){if(!e.sshJwk)throw b(wt);if(!e.sshKid)throw b(nr)}this.logger.verbose(`Authentication Scheme set to "${r.authenticationScheme}" as configured in Auth request`)}return this.config.cache.claimsBasedCachingEnabled&&e.claims&&!Z.isEmptyObj(e.claims)&&(r.requestedClaimsHash=await this.browserCrypto.hashString(e.claims)),r}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri||de();return w.getAbsoluteUrl(t,de())}async validateRequestAuthority(e,t){if(!(await this.getDiscoveredAuthority(e)).isAlias(t.environment))throw b(ir)}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const n={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new ft(n,this.browserStorage)}async getDiscoveredAuthority(e){this.logger.verbose("getDiscoveredAuthority called");const t={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata},n=e||this.config.auth.authority;return this.logger.verbose(`Creating discovered authority with ${n}`),Rt(n,this.config.system.networkClient,this.browserStorage,t,this.logger,this.correlationId,this.performanceClient)}}/*! @azure/msal-browser v3.7.1 2024-01-23 */const Ac=32;async function Ic(a,e,t){a.addQueueMeasurement(h.GeneratePkceCodes,t);const n=Re(Ec,h.GenerateCodeVerifier,e,a,t)(a,e,t),o=await p(vc,h.GenerateCodeChallengeFromVerifier,e,a,t)(n,a,e,t);return{verifier:n,challenge:o}}function Ec(a,e,t){try{const n=new Uint8Array(Ac);return Re(dc,h.GetRandomValues,e,a,t)(n),Tt(n)}catch{throw f(wn)}}async function vc(a,e,t,n){e.addQueueMeasurement(h.GenerateCodeChallengeFromVerifier,n);try{const o=await p(jr,h.Sha256Digest,t,e,n)(a,e,n);return Tt(new Uint8Array(o))}catch{throw f(wn)}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class Fe extends Xr{async initializeAuthorizationCodeRequest(e){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientInitializeAuthorizationCodeRequest,this.correlationId);const t=await p(Ic,h.GeneratePkceCodes,this.logger,this.performanceClient,this.correlationId)(this.performanceClient,this.logger,this.correlationId),n={...e,redirectUri:e.redirectUri,code:d.EMPTY_STRING,codeVerifier:t.verifier};return e.codeChallenge=t.challenge,e.codeChallengeMethod=d.S256_CODE_CHALLENGE_METHOD,n}initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e==null?void 0:e.correlationId);const t={correlationId:this.correlationId||ge(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const n=this.getLogoutHintFromIdTokenClaims(e.account);n&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=n)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return!e||e.postLogoutRedirectUri!==null?e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=w.getAbsoluteUrl(e.postLogoutRedirectUri,de())):this.config.auth.postLogoutRedirectUri===null?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=w.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,de())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=w.getAbsoluteUrl(de(),de())):this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e,t,n){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientCreateAuthCodeClient,this.correlationId);const o=await p(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e,t,n);return new gr(o,this.performanceClient)}async getClientConfiguration(e,t,n){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientGetClientConfiguration,this.correlationId);const o=await p(this.getDiscoveredAuthority.bind(this),h.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)(t,n),r=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:o,clientCapabilities:this.config.auth.clientCapabilities},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:r.loggerCallback,piiLoggingEnabled:r.piiLoggingEnabled,logLevel:r.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:e,libraryInfo:{sku:X.MSAL_SKU,version:Nn,cpu:d.EMPTY_STRING,os:d.EMPTY_STRING},telemetry:this.config.telemetry}}async getDiscoveredAuthority(e,t){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);const n={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},o=e||this.config.auth.authority,r=G.generateAuthority(o,t||this.config.auth.azureCloudOptions);return p(Rt.bind(Es),h.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(r,this.config.system.networkClient,this.browserStorage,n,this.logger,this.correlationId,this.performanceClient)}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);const n=this.getRedirectUri(e.redirectUri),o={interactionType:t},r=ee.setRequestState(this.browserCrypto,e&&e.state||d.EMPTY_STRING,o),s={...await p(this.initializeBaseRequest.bind(this),h.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)(e),redirectUri:n,state:r,nonce:e.nonce||ge(),responseMode:this.config.auth.OIDCOptions.serverResponseType},c=e.account||this.browserStorage.getActiveAccount();if(c&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${c.homeAccountId}`,this.correlationId),s.account=c),!s.loginHint&&!c){const l=this.browserStorage.getLegacyLoginHint();l&&(s.loginHint=l)}return s}}/*! @azure/msal-browser v3.7.1 2024-01-23 */const Sc="ContentError",Zr="user_switch";/*! @azure/msal-browser v3.7.1 2024-01-23 */const wc="USER_INTERACTION_REQUIRED",_c="USER_CANCEL",Rc="NO_NETWORK",kc="PERSISTENT_ERROR",bc="DISABLED",Oc="ACCOUNT_UNAVAILABLE";/*! @azure/msal-browser v3.7.1 2024-01-23 */const Nc=-2147186943,Pc={[Zr]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class he extends N{constructor(e,t,n){super(e,t),Object.setPrototypeOf(this,he.prototype),this.name="NativeAuthError",this.ext=n}}function Oe(a){if(a.ext&&a.ext.status&&(a.ext.status===kc||a.ext.status===bc)||a.ext&&a.ext.error&&a.ext.error===Nc)return!0;switch(a.errorCode){case Sc:return!0;default:return!1}}function Xt(a,e,t){if(t&&t.status)switch(t.status){case Oc:return zt(ur);case wc:return new te(a,e);case _c:return f(Se);case Rc:return f(Ct)}return new he(a,Pc[a]||e,t)}/*! @azure/msal-browser v3.7.1 2024-01-23 */class ei extends Fe{async acquireToken(e){this.performanceClient.addQueueMeasurement(h.SilentCacheClientAcquireToken,e.correlationId);const t=this.initializeServerTelemetryManager(O.acquireTokenSilent_silentFlow),n=await this.createSilentFlowClient(t,e.authority,e.azureCloudOptions);this.logger.verbose("Silent auth client created");try{const r=(await p(n.acquireCachedToken.bind(n),h.SilentFlowClientAcquireCachedToken,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),r}catch(o){throw o instanceof Xe&&o.errorCode===kn&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),o}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t==null?void 0:t.account)}async createSilentFlowClient(e,t,n){const o=await p(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e,t,n);return new Ns(o,this.performanceClient)}async initializeSilentRequest(e,t){this.performanceClient.addQueueMeasurement(h.InitializeSilentRequest,this.correlationId);const n=await p(this.initializeBaseRequest.bind(this),h.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)(e,t);return{...e,...n,account:t,forceRefresh:e.forceRefresh||!1}}}/*! @azure/msal-browser v3.7.1 2024-01-23 */const Ht={BROKER_CLIENT_ID:"brk_client_id",BROKER_REDIRECT_URI:"brk_redirect_uri"};class Le extends Xr{constructor(e,t,n,o,r,i,s,c,l,u,m,y){super(e,t,n,o,r,i,c,l,y),this.apiId=s,this.accountId=u,this.nativeMessageHandler=l,this.nativeStorageManager=m,this.silentCacheClient=new ei(e,this.nativeStorageManager,n,o,r,i,c,l,y)}async acquireToken(e){this.performanceClient.addQueueMeasurement(h.NativeInteractionClientAcquireToken,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const t=this.performanceClient.startMeasurement(h.NativeInteractionClientAcquireToken,e.correlationId),n=z.nowSeconds(),o=await this.initializeNativeRequest(e);try{const c=await this.acquireTokensFromCache(this.accountId,o);return t.end({success:!0,isNativeBroker:!1,fromCache:!0}),c}catch{this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const r={method:Ee.GetToken,request:o},i=await this.nativeMessageHandler.sendMessage(r),s=this.validateNativeResponse(i);return this.handleNativeResponse(s,o,n).then(c=>(t.end({success:!0,isNativeBroker:!0,requestId:c.requestId}),c)).catch(c=>{throw t.end({success:!1,errorCode:c.errorCode,subErrorCode:c.subError,isNativeBroker:!0}),c})}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:M.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),g(Ft);const n=this.browserStorage.getBaseAccountInfo({nativeAccountId:e});if(!n)throw g(Ft);try{const o=this.createSilentCacheRequest(t,n),r=await this.silentCacheClient.acquireToken(o),i={...n,idTokenClaims:r==null?void 0:r.idTokenClaims};return{...r,account:i}}catch(o){throw o}}async acquireTokenRedirect(e){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const t=await this.initializeNativeRequest(e),n={method:Ee.GetToken,request:t};try{const i=await this.nativeMessageHandler.sendMessage(n);this.validateNativeResponse(i)}catch(i){if(i instanceof he&&Oe(i))throw i}this.browserStorage.setTemporaryCache(_.NATIVE_REQUEST,JSON.stringify(t),!0);const o={apiId:O.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},r=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);await this.navigationClient.navigateExternal(r,o)}async handleRedirectPromise(){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const e=this.browserStorage.getCachedNativeRequest();if(!e)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),null;const{prompt:t,...n}=e;t&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(_.NATIVE_REQUEST));const o={method:Ee.GetToken,request:n},r=z.nowSeconds();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const i=await this.nativeMessageHandler.sendMessage(o);this.validateNativeResponse(i);const s=this.handleNativeResponse(i,n,r);return this.browserStorage.setInteractionInProgress(!1),await s}catch(i){throw this.browserStorage.setInteractionInProgress(!1),i}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,n){if(this.logger.trace("NativeInteractionClient - handleNativeResponse called."),e.account.id!==t.accountId)throw Xt(Zr);const o=await this.getDiscoveredAuthority(t.authority),r=_e(e.id_token,ae),i=this.createHomeAccountIdentifier(e,r),s=En(this.browserStorage,o,i,r,ae,e.client_info,void 0,r.tid,void 0,e.account.id,this.logger),c=await this.generateAuthenticationResult(e,t,r,s,o.canonicalAuthority,n);return this.cacheAccount(s),this.cacheNativeTokens(e,t,i,r,c.accessToken,c.tenantId,n),c}createHomeAccountIdentifier(e,t){return D.generateHomeAccountId(e.client_info||d.EMPTY_STRING,J.Default,this.logger,this.browserCrypto,t)}generateScopes(e,t){return e.scope?M.fromString(e.scope):M.fromString(t.scope)}async generatePopAccessToken(e,t){if(t.tokenType===k.POP){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const n=new Ke(this.browserCrypto),o={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw g(ln);return n.signPopToken(e.access_token,t.keyId,o)}else return e.access_token}async generateAuthenticationResult(e,t,n,o,r,i){const s=this.addTelemetryFromNativeResponse(e),c=e.scope?M.fromString(e.scope):M.fromString(t.scope),l=e.account.properties||{},u=l.UID||n.oid||n.sub||d.EMPTY_STRING,m=l.TenantId||n.tid||d.EMPTY_STRING,y=yn(o.getAccountInfo(),void 0,n),I=await this.generatePopAccessToken(e,t),S=t.tokenType===k.POP?k.POP:k.BEARER;return{authority:r,uniqueId:u,tenantId:m,scopes:c.asArray(),account:y,idToken:e.id_token,idTokenClaims:n,accessToken:I,fromCache:s?this.isResponseFromCache(s):!1,expiresOn:new Date(Number(i+e.expires_in)*1e3),tokenType:S,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}cacheAccount(e){this.browserStorage.setAccount(e),this.browserStorage.removeAccountContext(e).catch(t=>{this.logger.error(`Error occurred while removing account context from browser storage. ${t}`)})}cacheNativeTokens(e,t,n,o,r,i,s){const c=vt(n,t.authority,e.id_token||"",t.clientId,o.tid||""),l=t.tokenType===k.POP?d.SHR_NONCE_VALIDITY:(typeof e.expires_in=="string"?parseInt(e.expires_in,10):e.expires_in)||0,u=s+l,m=this.generateScopes(e,t),y=St(n,t.authority,r,t.clientId,o.tid||i,m.printScopes(),u,0,ae),I=new Me(void 0,c,y);this.nativeStorageManager.saveCacheRecord(I,t.storeInCache)}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.nativeMessageHandler.getExtensionId(),extensionVersion:this.nativeMessageHandler.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}validateNativeResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw wo(nn,"Response missing expected properties.")}getMATSFromResponse(e){if(e.properties.MATS)try{return JSON.parse(e.properties.MATS)}catch{this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return typeof e.is_cached>"u"?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const t=e.authority||this.config.auth.authority;e.account&&await this.validateRequestAuthority(t,e.account);const n=new w(t);n.validateAsUri();const{scopes:o,...r}=e,i=new M(o||[]);i.appendScopes(We);const s=()=>{switch(this.apiId){case O.ssoSilent:case O.acquireTokenSilent_silentFlow:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),$.NONE}if(!e.prompt){this.logger.trace("initializeNativeRequest: prompt was not provided");return}switch(e.prompt){case $.NONE:case $.CONSENT:case $.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e.prompt;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`),f(Gr)}},c={...r,accountId:this.accountId,clientId:this.config.auth.clientId,authority:n.urlString,scope:i.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:s(),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1};if(this.handleExtraBrokerParams(c),c.extraParameters=c.extraParameters||{},c.extraParameters.telemetry=qe.MATS_TELEMETRY,e.authenticationScheme===k.POP){const l={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},u=new Ke(this.browserCrypto),m=await p(u.generateCnf.bind(u),h.PopTokenGenerateCnf,this.logger,this.performanceClient,this.correlationId)(l,this.logger);c.reqCnf=m.reqCnfHash,c.keyId=m.kid}return c}handleExtraBrokerParams(e){if(e.extraParameters&&e.extraParameters.hasOwnProperty(Ht.BROKER_CLIENT_ID)&&e.extraParameters.hasOwnProperty(Ht.BROKER_REDIRECT_URI)&&e.extraParameters.hasOwnProperty(He)){const t=e.extraParameters[He],n=e.redirectUri,o=e.extraParameters[Ht.BROKER_REDIRECT_URI];e.extraParameters={child_client_id:t,child_redirect_uri:n},e.redirectUri=o}}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class ie{constructor(e,t,n,o){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=o,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=n,this.handshakeEvent=n.startMeasurement(h.NativeMessageHandlerHandshake)}async sendMessage(e){this.logger.trace("NativeMessageHandler - sendMessage called.");const t={channel:qe.CHANNEL_ID,extensionId:this.extensionId,responseId:ge(),body:e};return this.logger.trace("NativeMessageHandler - Sending request to browser extension"),this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(t)}`),this.messageChannel.port1.postMessage(t),new Promise((n,o)=>{this.resolvers.set(t.responseId,{resolve:n,reject:o})})}static async createProvider(e,t,n){e.trace("NativeMessageHandler - createProvider called.");try{const o=new ie(e,t,n,qe.PREFERRED_EXTENSION_ID);return await o.sendHandshakeRequest(),o}catch{const r=new ie(e,t,n);return await r.sendHandshakeRequest(),r}}async sendHandshakeRequest(){this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:qe.CHANNEL_ID,extensionId:this.extensionId,responseId:ge(),body:{method:Ee.HandshakeRequest}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=t=>{this.onChannelMessage(t)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise((t,n)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:n}),this.timeoutId=window.setTimeout(()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),n(f(Br)),this.handshakeResolvers.delete(e.responseId)},this.handshakeTimeoutMs)})}onWindowMessage(e){if(this.logger.trace("NativeMessageHandler - onWindowMessage called"),e.source!==window)return;const t=e.data;if(!(!t.channel||t.channel!==qe.CHANNEL_ID)&&!(t.extensionId&&t.extensionId!==this.extensionId)&&t.body.method===Ee.HandshakeRequest){const n=this.handshakeResolvers.get(t.responseId);if(!n){this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${t.responseId}`);return}this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),n.reject(f(Fr))}}onChannelMessage(e){this.logger.trace("NativeMessageHandler - onChannelMessage called.");const t=e.data,n=this.resolvers.get(t.responseId),o=this.handshakeResolvers.get(t.responseId);try{const r=t.body.method;if(r===Ee.Response){if(!n)return;const i=t.body.response;if(this.logger.trace("NativeMessageHandler - Received response from browser extension"),this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(i)}`),i.status!=="Success")n.reject(Xt(i.code,i.description,i.ext));else if(i.result)i.result.code&&i.result.description?n.reject(Xt(i.result.code,i.result.description,i.result.ext)):n.resolve(i.result);else throw wo(nn,"Event does not contain result.");this.resolvers.delete(t.responseId)}else if(r===Ee.HandshakeResponse){if(!o){this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${t.responseId}`);return}clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),o.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(r){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${r}`),this.logger.errorPii(`Unable to parse ${e}`),n?n.reject(r):o&&o.reject(r)}}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}static isNativeAvailable(e,t,n,o){if(t.trace("isNativeAvailable called"),!e.system.allowNativeBroker)return t.trace("isNativeAvailable: allowNativeBroker is not enabled, returning false"),!1;if(!n)return t.trace("isNativeAvailable: WAM extension provider is not initialized, returning false"),!1;if(o)switch(o){case k.BEARER:case k.POP:return t.trace("isNativeAvailable: authenticationScheme is supported, returning true"),!0;default:return t.trace("isNativeAvailable: authenticationScheme is not supported, returning false"),!1}return!0}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class Dn{constructor(e,t,n,o,r){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=o,this.performanceClient=r}async handleCodeResponse(e,t){this.performanceClient.addQueueMeasurement(h.HandleCodeResponse,t.correlationId);let n;try{n=this.authModule.handleFragmentResponse(e,t.state)}catch(o){throw o instanceof Te&&o.subError===Se?f(Se):o}return p(this.handleCodeResponseFromServer.bind(this),h.HandleCodeResponseFromServer,this.logger,this.performanceClient,t.correlationId)(n,t)}async handleCodeResponseFromServer(e,t,n=!0){if(this.performanceClient.addQueueMeasurement(h.HandleCodeResponseFromServer,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await p(this.authModule.updateAuthority.bind(this.authModule),h.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),n&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const r=this.createCcsCredentials(t);r&&(this.authCodeRequest.ccsCredential=r)}return await p(this.authModule.acquireToken.bind(this.authModule),h.AuthClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:j.HOME_ACCOUNT_ID}:e.loginHint?{credential:e.loginHint,type:j.UPN}:null}}/*! @azure/msal-browser v3.7.1 2024-01-23 */function ti(a,e,t){const n=gt(a);if(!n)throw sr(a)?(t.error(`A ${e} is present in the iframe but it does not contain known properties. It's likely that the ${e} has been replaced by code running on the redirectUri page.`),t.errorPii(`The ${e} detected is: ${a}`),f(yr)):(t.error(`The request has returned to the redirectUri but a ${e} is not present. It's likely that the ${e} has been removed or the page has been redirected by code running on the redirectUri page.`),f(Cr));return n}function Mc(a,e,t){if(!a.state)throw f(_n);const n=Jr(e,a.state);if(!n)throw f(Tr);if(n.interactionType!==t)throw f(Ar)}/*! @azure/msal-browser v3.7.1 2024-01-23 */class Lc extends Fe{constructor(e,t,n,o,r,i,s,c,l,u){super(e,t,n,o,r,i,s,l,u),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=c}acquireToken(e){try{const t=this.generatePopupName(e.scopes||We,e.authority||this.config.auth.authority),n=e.popupWindowAttributes||{};if(this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,t,n);{this.logger.verbose("asyncPopup set to false, opening popup before acquiring token");const o=this.openSizedPopup("about:blank",t,n);return this.acquireTokenPopupAsync(e,t,n,o)}}catch(t){return Promise.reject(t)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),n=this.generateLogoutPopupName(t),o=e&&e.authority,r=e&&e.mainWindowRedirectUri,i=(e==null?void 0:e.popupWindowAttributes)||{};if(this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,n,i,o,void 0,r);{this.logger.verbose("asyncPopup set to false, opening popup");const s=this.openSizedPopup("about:blank",n,i);return this.logoutPopupAsync(t,n,i,o,s,r)}}catch(t){return Promise.reject(t)}}async acquireTokenPopupAsync(e,t,n,o){this.logger.verbose("acquireTokenPopupAsync called");const r=this.initializeServerTelemetryManager(O.acquireTokenPopup),i=await p(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,C.Popup);zr(i.authority);try{const s=await p(this.initializeAuthorizationCodeRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(i),c=await p(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(r,i.authority,i.azureCloudOptions),l=ie.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme);let u;l&&(u=this.performanceClient.startMeasurement(h.FetchAccountIdWithNativeBroker,e.correlationId));const m=await c.getAuthCodeUrl({...i,nativeBroker:l}),y=new Dn(c,this.browserStorage,s,this.logger,this.performanceClient),I={popup:o,popupName:t,popupWindowAttributes:n},S=this.initiateAuthRequest(m,I);this.eventHandler.emitEvent(T.POPUP_OPENED,C.Popup,{popupWindow:S},null);const E=await this.monitorPopupForHash(S),P=Re(ti,h.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(E,this.config.auth.OIDCOptions.serverResponseType,this.logger);if(oe.removeThrottle(this.browserStorage,this.config.auth.clientId,s),P.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),u&&u.end({success:!0,isNativeBroker:!0}),!this.nativeMessageHandler)throw f(Je);const V=new Le(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,O.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,P.accountId,this.nativeStorage,i.correlationId),{userRequestState:ne}=ee.parseRequestState(this.browserCrypto,i.state);return await V.acquireToken({...i,state:ne,prompt:void 0})}return await y.handleCodeResponse(P,i)}catch(s){throw o&&o.close(),s instanceof N&&(s.setCorrelationId(this.correlationId),r.cacheFailedRequest(s)),s}}async logoutPopupAsync(e,t,n,o,r,i){var c,l;this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(T.LOGOUT_START,C.Popup,e);const s=this.initializeServerTelemetryManager(O.logoutPopup);try{await this.clearCacheOnLogout(e.account);const u=await p(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(s,o);try{u.authority.endSessionEndpoint}catch{if((c=e.account)!=null&&c.homeAccountId&&e.postLogoutRedirectUri&&u.authority.protocolMode===ue.OIDC){if(this.browserStorage.removeAccount((l=e.account)==null?void 0:l.homeAccountId),this.eventHandler.emitEvent(T.LOGOUT_SUCCESS,C.Popup,e),i){const I={apiId:O.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},S=w.getAbsoluteUrl(i,de());await this.navigationClient.navigateInternal(S,I)}r&&r.close();return}}const m=u.getLogoutUri(e);this.eventHandler.emitEvent(T.LOGOUT_SUCCESS,C.Popup,e);const y=this.openPopup(m,{popupName:t,popupWindowAttributes:n,popup:r});if(this.eventHandler.emitEvent(T.POPUP_OPENED,C.Popup,{popupWindow:y},null),await this.monitorPopupForHash(y).catch(()=>{}),i){const I={apiId:O.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},S=w.getAbsoluteUrl(i,de());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${S}`),await this.navigationClient.navigateInternal(S,I)}else this.logger.verbose("No main window navigation requested")}catch(u){throw r&&r.close(),u instanceof N&&(u.setCorrelationId(this.correlationId),s.cacheFailedRequest(u)),this.browserStorage.setInteractionInProgress(!1),this.eventHandler.emitEvent(T.LOGOUT_FAILURE,C.Popup,null,u),this.eventHandler.emitEvent(T.LOGOUT_END,C.Popup),u}this.eventHandler.emitEvent(T.LOGOUT_END,C.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),f(bt)}monitorPopupForHash(e){return new Promise((t,n)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const o=setInterval(()=>{if(e.closed){this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(o),n(f(Se));return}let r="";try{r=e.location.href}catch{}if(!r||r==="about:blank")return;clearInterval(o);let i="";const s=this.config.auth.OIDCOptions.serverResponseType;e&&(s===Qe.QUERY?i=e.location.search:i=e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),t(i)},this.config.system.pollIntervalMilliseconds)}).finally(()=>{this.cleanPopup(e)})}openPopup(e,t){try{let n;if(t.popup?(n=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),n.location.assign(e)):typeof t.popup>"u"&&(this.logger.verbosePii(`Opening popup window to: ${e}`),n=this.openSizedPopup(e,t.popupName,t.popupWindowAttributes)),!n)throw f(vr);return n.focus&&n.focus(),this.currentWindow=n,window.addEventListener("beforeunload",this.unloadWindow),n}catch(n){throw this.logger.error("error opening popup "+n.message),this.browserStorage.setInteractionInProgress(!1),f(Er)}}openSizedPopup(e,t,n){var y,I,S,E;const o=window.screenLeft?window.screenLeft:window.screenX,r=window.screenTop?window.screenTop:window.screenY,i=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,s=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let c=(y=n.popupSize)==null?void 0:y.width,l=(I=n.popupSize)==null?void 0:I.height,u=(S=n.popupPosition)==null?void 0:S.top,m=(E=n.popupPosition)==null?void 0:E.left;return(!c||c<0||c>i)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),c=X.POPUP_WIDTH),(!l||l<0||l>s)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),l=X.POPUP_HEIGHT),(!u||u<0||u>s)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),u=Math.max(0,s/2-X.POPUP_HEIGHT/2+r)),(!m||m<0||m>i)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),m=Math.max(0,i/2-X.POPUP_WIDTH/2+o)),window.open(e,t,`width=${c}, height=${l}, top=${u}, left=${m}, scrollbars=yes`)}unloadWindow(e){this.browserStorage.cleanRequestByInteractionType(C.Popup),this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e){e&&e.close(),window.removeEventListener("beforeunload",this.unloadWindow),this.browserStorage.setInteractionInProgress(!1)}generatePopupName(e,t){return`${X.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`${X.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class fo{constructor(e,t,n,o,r){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=o,this.performanceClient=r}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){t.redirectStartPage&&(this.logger.verbose("RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"),this.browserStorage.setTemporaryCache(_.ORIGIN_URI,t.redirectStartPage,!0)),this.browserStorage.setTemporaryCache(_.CORRELATION_ID,this.authCodeRequest.correlationId,!0),this.browserStorage.cacheCodeRequest(this.authCodeRequest),this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const n={apiId:O.acquireTokenRedirect,timeout:t.redirectTimeout,noHistory:!1};if(typeof t.onRedirectNavigate=="function")if(this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"),t.onRedirectNavigate(e)!==!1){this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),await t.navigationClient.navigateExternal(e,n);return}else{this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation");return}else{this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),await t.navigationClient.navigateExternal(e,n);return}}else throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),f(bt)}async handleCodeResponse(e,t){this.logger.verbose("RedirectHandler.handleCodeResponse called"),this.browserStorage.setInteractionInProgress(!1);const n=this.browserStorage.generateStateKey(t),o=this.browserStorage.getTemporaryCache(n);if(!o)throw g(ht,"Cached State");let r;try{r=this.authModule.handleFragmentResponse(e,o)}catch(l){throw l instanceof Te&&l.subError===Se?f(Se):l}const i=this.browserStorage.generateNonceKey(o),s=this.browserStorage.getTemporaryCache(i);if(this.authCodeRequest.code=r.code,r.cloud_instance_host_name&&await p(this.authModule.updateAuthority.bind(this.authModule),h.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(r.cloud_instance_host_name,this.authCodeRequest.correlationId),r.nonce=s||void 0,r.state=o,r.client_info)this.authCodeRequest.clientInfo=r.client_info;else{const l=this.checkCcsCredentials();l&&(this.authCodeRequest.ccsCredential=l)}const c=await this.authModule.acquireToken(this.authCodeRequest,r);return this.browserStorage.cleanRequestByState(t),c}checkCcsCredentials(){const e=this.browserStorage.getTemporaryCache(_.CCS_CREDENTIAL,!0);if(e)try{return JSON.parse(e)}catch{this.authModule.logger.error("Cache credential could not be parsed"),this.authModule.logger.errorPii(`Cache credential could not be parsed: ${e}`)}return null}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class Uc extends Fe{constructor(e,t,n,o,r,i,s,c,l,u){super(e,t,n,o,r,i,s,l,u),this.nativeStorage=c}async acquireToken(e){const t=await p(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,C.Redirect);this.browserStorage.updateCacheEntries(t.state,t.nonce,t.authority,t.loginHint||"",t.account||null);const n=this.initializeServerTelemetryManager(O.acquireTokenRedirect),o=r=>{r.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.cleanRequestByState(t.state),this.eventHandler.emitEvent(T.RESTORE_FROM_BFCACHE,C.Redirect))};try{const r=await p(this.initializeAuthorizationCodeRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(t),i=await p(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(n,t.authority,t.azureCloudOptions),s=new fo(i,this.browserStorage,r,this.logger,this.performanceClient),c=await i.getAuthCodeUrl({...t,nativeBroker:ie.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme)}),l=this.getRedirectStartPage(e.redirectStartPage);return this.logger.verbosePii(`Redirect start page: ${l}`),window.addEventListener("pageshow",o),await s.initiateAuthRequest(c,{navigationClient:this.navigationClient,redirectTimeout:this.config.system.redirectNavigationTimeout,redirectStartPage:l,onRedirectNavigate:e.onRedirectNavigate})}catch(r){throw r instanceof N&&(r.setCorrelationId(this.correlationId),n.cacheFailedRequest(r)),window.removeEventListener("pageshow",o),this.browserStorage.cleanRequestByState(t.state),r}}async handleRedirectPromise(e){const t=this.initializeServerTelemetryManager(O.handleRedirectPromise);try{if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const[n,o]=this.getRedirectResponse(e||"");if(!n)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.cleanRequestByInteractionType(C.Redirect),null;const r=this.browserStorage.getTemporaryCache(_.ORIGIN_URI,!0)||d.EMPTY_STRING,i=w.removeHashFromUrl(r),s=w.removeHashFromUrl(window.location.href);if(i===s&&this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("Current page is loginRequestUrl, handling response"),r.indexOf("#")>-1&&Ys(r),await this.handleResponse(n,t);if(this.config.auth.navigateToLoginRequestUrl){if(!On()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(_.URL_HASH,o,!0);const c={apiId:O.handleRedirectPromise,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let l=!0;if(!r||r==="null"){const u=Ws();this.browserStorage.setTemporaryCache(_.ORIGIN_URI,u,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),l=await this.navigationClient.navigateInternal(u,c)}else this.logger.verbose(`Navigating to loginRequestUrl: ${r}`),l=await this.navigationClient.navigateInternal(r,c);if(!l)return await this.handleResponse(n,t)}}else return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(n,t);return null}catch(n){throw n instanceof N&&(n.setCorrelationId(this.correlationId),t.cacheFailedRequest(n)),this.browserStorage.cleanRequestByInteractionType(C.Redirect),n}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let t=e;t||(this.config.auth.OIDCOptions.serverResponseType===Qe.QUERY?t=window.location.search:t=window.location.hash);let n=gt(t);if(n){try{Mc(n,this.browserCrypto,C.Redirect)}catch(r){return r instanceof N&&this.logger.error(`Interaction type validation failed due to ${r.errorCode}: ${r.errorMessage}`),[null,""]}return Vs(window),this.logger.verbose("Hash contains known properties, returning response hash"),[n,t]}const o=this.browserStorage.getTemporaryCache(_.URL_HASH,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(_.URL_HASH)),o&&(n=gt(o),n)?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[n,o]):[null,""]}async handleResponse(e,t){const n=e.state;if(!n)throw f(_n);const o=this.browserStorage.getCachedRequest(n);if(this.logger.verbose("handleResponse called, retrieved cached request"),e.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw f(Je);const c=new Le(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,O.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,e.accountId,this.nativeStorage,o.correlationId),{userRequestState:l}=ee.parseRequestState(this.browserCrypto,n);return c.acquireToken({...o,state:l,prompt:void 0}).finally(()=>{this.browserStorage.cleanRequestByState(n)})}const r=this.browserStorage.getCachedAuthority(n);if(!r)throw f(Rn);const i=await p(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(t,r);return oe.removeThrottle(this.browserStorage,this.config.auth.clientId,o),new fo(i,this.browserStorage,o,this.logger,this.performanceClient).handleCodeResponse(e,n)}async logout(e){var o,r;this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e),n=this.initializeServerTelemetryManager(O.logout);try{this.eventHandler.emitEvent(T.LOGOUT_START,C.Redirect,e),await this.clearCacheOnLogout(t.account);const i={apiId:O.logout,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},s=await p(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(n,e&&e.authority);if(s.authority.protocolMode===ue.OIDC)try{s.authority.endSessionEndpoint}catch{if((o=t.account)!=null&&o.homeAccountId){this.browserStorage.removeAccount((r=t.account)==null?void 0:r.homeAccountId),this.eventHandler.emitEvent(T.LOGOUT_SUCCESS,C.Redirect,t);return}}const c=s.getLogoutUri(t);if(this.eventHandler.emitEvent(T.LOGOUT_SUCCESS,C.Redirect,t),e&&typeof e.onRedirectNavigate=="function")if(e.onRedirectNavigate(c)!==!1){this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(c,i);return}else this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation");else{this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(c,i);return}}catch(i){throw i instanceof N&&(i.setCorrelationId(this.correlationId),n.cacheFailedRequest(i)),this.eventHandler.emitEvent(T.LOGOUT_FAILURE,C.Redirect,null,i),this.eventHandler.emitEvent(T.LOGOUT_END,C.Redirect),i}this.eventHandler.emitEvent(T.LOGOUT_END,C.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return w.getAbsoluteUrl(t,de())}}/*! @azure/msal-browser v3.7.1 2024-01-23 */async function Dc(a,e,t,n,o){if(e.addQueueMeasurement(h.SilentHandlerInitiateAuthRequest,n),!a)throw t.info("Navigate url is empty"),f(bt);return o?p(Kc,h.SilentHandlerLoadFrame,t,e,n)(a,o,e,n):Re(Bc,h.SilentHandlerLoadFrameSync,t,e,n)(a)}async function Hc(a,e,t,n,o,r,i){return n.addQueueMeasurement(h.SilentHandlerMonitorIframeForHash,r),new Promise((s,c)=>{e<Wt&&o.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${e}ms) than the default (${Wt}ms). This may result in timeouts.`);const l=window.setTimeout(()=>{window.clearInterval(u),c(f(Sr))},e),u=window.setInterval(()=>{let m="";const y=a.contentWindow;try{m=y?y.location.href:""}catch{}if(!m||m==="about:blank")return;let I="";y&&(i===Qe.QUERY?I=y.location.search:I=y.location.hash),window.clearTimeout(l),window.clearInterval(u),s(I)},t)}).finally(()=>{Re(Fc,h.RemoveHiddenIframe,o,n,r)(a)})}function Kc(a,e,t,n){return t.addQueueMeasurement(h.SilentHandlerLoadFrame,n),new Promise((o,r)=>{const i=ni();window.setTimeout(()=>{if(!i){r("Unable to load iframe");return}i.src=a,o(i)},e)})}function Bc(a){const e=ni();return e.src=a,e}function ni(){const a=document.createElement("iframe");return a.style.visibility="hidden",a.style.position="absolute",a.style.width=a.style.height="0",a.style.border="0",a.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(a),a}function Fc(a){document.body===a.parentNode&&document.body.removeChild(a)}/*! @azure/msal-browser v3.7.1 2024-01-23 */class xc extends Fe{constructor(e,t,n,o,r,i,s,c,l,u,m){super(e,t,n,o,r,i,c,u,m),this.apiId=s,this.nativeStorage=l}async acquireToken(e){if(this.performanceClient.addQueueMeasurement(h.SilentIframeClientAcquireToken,e.correlationId),!e.loginHint&&!e.sid&&(!e.account||!e.account.username)&&this.logger.warning("No user hint provided. The authorization server may need more information to complete this request."),e.prompt&&e.prompt!==$.NONE&&e.prompt!==$.NO_SESSION)throw f(br);const t=await p(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)({...e,prompt:e.prompt||$.NONE},C.Silent);zr(t.authority);const n=this.initializeServerTelemetryManager(this.apiId);try{const o=await p(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,e.correlationId)(n,t.authority,t.azureCloudOptions);return await p(this.silentTokenHelper.bind(this),h.SilentIframeClientTokenHelper,this.logger,this.performanceClient,e.correlationId)(o,t)}catch(o){throw o instanceof N&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),o}}logout(){return Promise.reject(f(Ot))}async silentTokenHelper(e,t){const n=t.correlationId;this.performanceClient.addQueueMeasurement(h.SilentIframeClientTokenHelper,n);const o=await p(this.initializeAuthorizationCodeRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,n)(t),r=await p(e.getAuthCodeUrl.bind(e),h.GetAuthCodeUrl,this.logger,this.performanceClient,n)({...t,nativeBroker:ie.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,t.authenticationScheme)}),i=new Dn(e,this.browserStorage,o,this.logger,this.performanceClient),s=await p(Dc,h.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,n)(r,this.performanceClient,this.logger,n,this.config.system.navigateFrameWait),c=this.config.auth.OIDCOptions.serverResponseType,l=await p(Hc,h.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,n)(s,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,n,c),u=Re(ti,h.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(l,c,this.logger);if(u.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw f(Je);const m=new Le(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.apiId,this.performanceClient,this.nativeMessageHandler,u.accountId,this.browserStorage,n),{userRequestState:y}=ee.parseRequestState(this.browserCrypto,t.state);return p(m.acquireToken.bind(m),h.NativeInteractionClientAcquireToken,this.logger,this.performanceClient,n)({...t,state:y,prompt:t.prompt||$.NONE})}return p(i.handleCodeResponse.bind(i),h.HandleCodeResponse,this.logger,this.performanceClient,n)(u,t)}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class Gc extends Fe{async acquireToken(e){this.performanceClient.addQueueMeasurement(h.SilentRefreshClientAcquireToken,e.correlationId);const t=await p(this.initializeBaseRequest.bind(this),h.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e,e.account),n={...e,...t};e.redirectUri&&(n.redirectUri=this.getRedirectUri(e.redirectUri));const o=this.initializeServerTelemetryManager(O.acquireTokenSilent_silentFlow),r=await this.createRefreshTokenClient(o,n.authority,n.azureCloudOptions);return p(r.acquireTokenByRefreshToken.bind(r),h.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(n).catch(i=>{throw i.setCorrelationId(this.correlationId),o.cacheFailedRequest(i),i})}logout(){return Promise.reject(f(Ot))}async createRefreshTokenClient(e,t,n){const o=await p(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e,t,n);return new Vt(o,this.performanceClient)}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class qc{constructor(e,t,n,o){this.isBrowserEnvironment=typeof window<"u",this.config=e,this.storage=t,this.logger=n,this.cryptoObj=o}loadExternalTokens(e,t,n){if(this.logger.info("TokenCache - loadExternalTokens called"),!t.id_token)throw f(Q);const o=_e(t.id_token,ae);let r,i,s;if(e.account)s=D.createFromAccountInfo(e.account),r=new Me(s,this.loadIdToken(t.id_token,s.homeAccountId,e.account.environment,e.account.tenantId),this.loadAccessToken(e,t,s.homeAccountId,e.account.environment,e.account.tenantId,n),this.loadRefreshToken(e,t,s.homeAccountId,e.account.environment));else if(e.authority){const c=G.generateAuthority(e.authority,e.azureCloudOptions),l={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache};if(i=new G(c,this.config.system.networkClient,this.storage,l,this.logger,e.correlationId||ge()),n.clientInfo)this.logger.trace("TokenCache - homeAccountId from options"),s=this.loadAccount(o,i,n.clientInfo),r=new Me(s,this.loadIdToken(t.id_token,s.homeAccountId,i.hostnameAndPort,i.tenant),this.loadAccessToken(e,t,s.homeAccountId,i.hostnameAndPort,i.tenant,n),this.loadRefreshToken(e,t,s.homeAccountId,i.hostnameAndPort));else if(t.client_info)this.logger.trace("TokenCache - homeAccountId from response"),s=this.loadAccount(o,i,t.client_info),r=new Me(s,this.loadIdToken(t.id_token,s.homeAccountId,i.hostnameAndPort,i.tenant),this.loadAccessToken(e,t,s.homeAccountId,i.hostnameAndPort,i.tenant,n),this.loadRefreshToken(e,t,s.homeAccountId,i.hostnameAndPort));else throw f(Q)}else throw f(Q);return this.generateAuthenticationResult(e,o,r,s,i)}loadAccount(e,t,n,o){if(this.isBrowserEnvironment){this.logger.verbose("TokenCache - loading account");let r;if(o?r=o:t.authorityType!==void 0&&n&&(r=D.generateHomeAccountId(n,t.authorityType,this.logger,this.cryptoObj,e)),!r)throw f(Q);const i=e.tid,s=En(this.storage,t,r,e,ae,n,t.hostnameAndPort,i,void 0,void 0,this.logger);return this.storage.setAccount(s),s}else throw f(Q)}loadIdToken(e,t,n,o){const r=vt(t,n,e,this.config.auth.clientId,o);if(this.isBrowserEnvironment)return this.logger.verbose("TokenCache - loading id token"),this.storage.setIdTokenCredential(r),r;throw f(Q)}loadAccessToken(e,t,n,o,r,i){if(!t.access_token)return this.logger.verbose("TokenCache - No access token provided for caching"),null;if(!t.expires_in||!i.extendedExpiresOn)throw f(Q);const s=new M(e.scopes).printScopes(),c=i.expiresOn||t.expires_in+new Date().getTime()/1e3,l=i.extendedExpiresOn,u=St(n,o,t.access_token,this.config.auth.clientId,r,s,c,l,ae);if(this.isBrowserEnvironment)return this.logger.verbose("TokenCache - loading access token"),this.storage.setAccessTokenCredential(u),u;throw f(Q)}loadRefreshToken(e,t,n,o){if(!t.refresh_token)return this.logger.verbose("TokenCache - No refresh token provided for caching"),null;const r=zo(n,o,t.refresh_token,this.config.auth.clientId);if(this.isBrowserEnvironment)return this.logger.verbose("TokenCache - loading refresh token"),this.storage.setRefreshTokenCredential(r),r;throw f(Q)}generateAuthenticationResult(e,t,n,o,r){var y,I;let i=d.EMPTY_STRING,s=[],c=null,l;n!=null&&n.accessToken&&(i=n.accessToken.secret,s=M.fromString(n.accessToken.target).asArray(),c=new Date(Number(n.accessToken.expiresOn)*1e3),l=new Date(Number(n.accessToken.extendedExpiresOn)*1e3));const u=t.oid||t.sub||d.EMPTY_STRING,m=t.tid||d.EMPTY_STRING;return{authority:r?r.canonicalAuthority:d.EMPTY_STRING,uniqueId:u,tenantId:m,scopes:s,account:o.getAccountInfo(),idToken:((y=n.idToken)==null?void 0:y.secret)||"",idTokenClaims:t||{},accessToken:i,fromCache:!0,expiresOn:c,correlationId:e.correlationId||d.EMPTY_STRING,requestId:d.EMPTY_STRING,extExpiresOn:l,familyId:d.EMPTY_STRING,tokenType:((I=n==null?void 0:n.accessToken)==null?void 0:I.tokenType)||d.EMPTY_STRING,state:d.EMPTY_STRING,cloudGraphHostName:o.cloudGraphHostName||d.EMPTY_STRING,msGraphHost:o.msGraphHost||d.EMPTY_STRING,code:void 0,fromNativeBroker:!1}}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class $c extends gr{constructor(e){super(e),this.includeRedirectUri=!1}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class zc extends Fe{constructor(e,t,n,o,r,i,s,c,l,u){super(e,t,n,o,r,i,c,l,u),this.apiId=s}async acquireToken(e){if(!e.code)throw f(Ur);const t=await p(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(e,C.Silent),n=this.initializeServerTelemetryManager(this.apiId);try{const o={...t,code:e.code},r=await p(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,e.correlationId)(n,t.authority),i=new $c(r);this.logger.verbose("Auth code client created");const s=new Dn(i,this.browserStorage,o,this.logger,this.performanceClient);return await p(s.handleCodeResponseFromServer.bind(s),h.HandleCodeResponseFromServer,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(o){throw o instanceof N&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),o}}logout(){return Promise.reject(f(Ot))}}/*! @azure/msal-browser v3.7.1 2024-01-23 */class Nt{constructor(e){this.atsAsyncMeasurement=void 0,this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new Be(this.logger,this.performanceClient):dt,this.eventHandler=new Tc(this.logger,this.browserCrypto),this.browserStorage=this.isBrowserEnvironment?new Jt(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,Is(this.config.auth)):yc(this.config.auth.clientId,this.logger);const t={cacheLocation:U.MemoryStorage,temporaryCacheLocation:U.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new Jt(this.config.auth.clientId,t,this.browserCrypto,this.logger),this.tokenCache=new qc(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this)}static async createController(e){const t=new Nt(e);return await t.initialize(),t}trackPageVisibility(){this.atsAsyncMeasurement&&(this.logger.info("Perf: Visibility change detected"),this.atsAsyncMeasurement.increment({visibilityChangeCount:1}))}async initialize(){if(this.logger.trace("initialize called"),this.initialized){this.logger.info("initialize has already been called, exiting early.");return}const e=this.config.system.allowNativeBroker,t=this.performanceClient.startMeasurement(h.InitializeClientApplication);if(this.eventHandler.emitEvent(T.INITIALIZE_START),e)try{this.nativeExtensionProvider=await ie.createProvider(this.logger,this.config.system.nativeBrokerHandshakeTimeout,this.performanceClient)}catch(n){this.logger.verbose(n)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),await p(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),h.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient)(this.performanceClient)),this.initialized=!0,this.eventHandler.emitEvent(T.INITIALIZE_END),t.end({allowNativeBroker:e,success:!0})}async handleRedirectPromise(e){this.logger.verbose("handleRedirectPromise called"),ho(this.initialized);const t=this.getAllAccounts();if(this.isBrowserEnvironment){const n=e||"";let o=this.redirectResponse.get(n);if(typeof o>"u"){this.eventHandler.emitEvent(T.HANDLE_REDIRECT_START,C.Redirect),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise");const r=this.browserStorage.getCachedNativeRequest();let i;if(r&&ie.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider)&&this.nativeExtensionProvider&&!e)this.logger.trace("handleRedirectPromise - acquiring token from native platform"),i=new Le(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,O.handleRedirectPromise,this.performanceClient,this.nativeExtensionProvider,r.accountId,this.nativeInternalStorage,r.correlationId).handleRedirectPromise();else{this.logger.trace("handleRedirectPromise - acquiring token from web flow");const s=this.browserStorage.getTemporaryCache(_.CORRELATION_ID,!0)||d.EMPTY_STRING;i=this.createRedirectClient(s).handleRedirectPromise(e)}o=i.then(s=>(s&&(t.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(T.LOGIN_SUCCESS,C.Redirect,s),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_SUCCESS,C.Redirect,s),this.logger.verbose("handleRedirectResponse returned result, acquire token success"))),this.eventHandler.emitEvent(T.HANDLE_REDIRECT_END,C.Redirect),s)).catch(s=>{throw t.length>0?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_FAILURE,C.Redirect,null,s):this.eventHandler.emitEvent(T.LOGIN_FAILURE,C.Redirect,null,s),this.eventHandler.emitEvent(T.HANDLE_REDIRECT_END,C.Redirect),s}),this.redirectResponse.set(n,o)}else this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call");return o}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async acquireTokenRedirect(e){const t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t),this.preflightBrowserEnvironmentCheck(C.Redirect);const n=this.getAllAccounts().length>0;n?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_START,C.Redirect,e):this.eventHandler.emitEvent(T.LOGIN_START,C.Redirect,e);let o;return this.nativeExtensionProvider&&this.canUseNative(e)?o=new Le(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,O.acquireTokenRedirect,this.performanceClient,this.nativeExtensionProvider,this.getNativeAccountId(e),this.nativeInternalStorage,t).acquireTokenRedirect(e).catch(i=>{if(i instanceof he&&Oe(i))return this.nativeExtensionProvider=void 0,this.createRedirectClient(t).acquireToken(e);if(i instanceof te)return this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createRedirectClient(t).acquireToken(e);throw this.getBrowserStorage().setInteractionInProgress(!1),i}):o=this.createRedirectClient(t).acquireToken(e),o.catch(r=>{throw n?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_FAILURE,C.Redirect,null,r):this.eventHandler.emitEvent(T.LOGIN_FAILURE,C.Redirect,null,r),r})}acquireTokenPopup(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(h.AcquireTokenPopup,t);try{this.logger.verbose("acquireTokenPopup called",t),this.preflightBrowserEnvironmentCheck(C.Popup)}catch(i){return Promise.reject(i)}const o=this.getAllAccounts();o.length>0?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_START,C.Popup,e):this.eventHandler.emitEvent(T.LOGIN_START,C.Popup,e);let r;return this.canUseNative(e)?r=this.acquireTokenNative({...e,correlationId:t},O.acquireTokenPopup).then(i=>(this.getBrowserStorage().setInteractionInProgress(!1),n.end({success:!0,isNativeBroker:!0,requestId:i.requestId}),i)).catch(i=>{if(i instanceof he&&Oe(i))return this.nativeExtensionProvider=void 0,this.createPopupClient(t).acquireToken(e);if(i instanceof te)return this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createPopupClient(t).acquireToken(e);throw this.getBrowserStorage().setInteractionInProgress(!1),i}):r=this.createPopupClient(t).acquireToken(e),r.then(i=>(o.length<this.getAllAccounts().length?this.eventHandler.emitEvent(T.LOGIN_SUCCESS,C.Popup,i):this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_SUCCESS,C.Popup,i),n.add({accessTokenSize:i.accessToken.length,idTokenSize:i.idToken.length}),n.end({success:!0,requestId:i.requestId}),i)).catch(i=>(o.length>0?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_FAILURE,C.Popup,null,i):this.eventHandler.emitEvent(T.LOGIN_FAILURE,C.Popup,null,i),n.end({errorCode:i.errorCode,subErrorCode:i.subError,success:!1}),Promise.reject(i)))}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){var r;const t=this.getRequestCorrelationId(e),n={...e,prompt:e.prompt,correlationId:t};this.preflightBrowserEnvironmentCheck(C.Silent),this.ssoSilentMeasurement=this.performanceClient.startMeasurement(h.SsoSilent,t),(r=this.ssoSilentMeasurement)==null||r.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",t),this.eventHandler.emitEvent(T.SSO_SILENT_START,C.Silent,n);let o;return this.canUseNative(n)?o=this.acquireTokenNative(n,O.ssoSilent).catch(i=>{if(i instanceof he&&Oe(i))return this.nativeExtensionProvider=void 0,this.createSilentIframeClient(n.correlationId).acquireToken(n);throw i}):o=this.createSilentIframeClient(n.correlationId).acquireToken(n),o.then(i=>{var s,c;return this.eventHandler.emitEvent(T.SSO_SILENT_SUCCESS,C.Silent,i),(s=this.ssoSilentMeasurement)==null||s.add({accessTokenSize:i.accessToken.length,idTokenSize:i.idToken.length}),(c=this.ssoSilentMeasurement)==null||c.end({success:!0,isNativeBroker:i.fromNativeBroker,requestId:i.requestId}),i}).catch(i=>{var s;throw this.eventHandler.emitEvent(T.SSO_SILENT_FAILURE,C.Silent,null,i),(s=this.ssoSilentMeasurement)==null||s.end({errorCode:i.errorCode,subErrorCode:i.subError,success:!1}),i}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenByCode(e){const t=this.getRequestCorrelationId(e);this.preflightBrowserEnvironmentCheck(C.Silent),this.logger.trace("acquireTokenByCode called",t),this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_BY_CODE_START,C.Silent,e);const n=this.performanceClient.startMeasurement(h.AcquireTokenByCode,t);try{if(e.code&&e.nativeAccountId)throw f(Hr);if(e.code){const o=e.code;let r=this.hybridAuthCodeResponses.get(o);return r?(this.logger.verbose("Existing acquireTokenByCode request found",t),n.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),r=this.acquireTokenByCodeAsync({...e,correlationId:t}).then(i=>(this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_BY_CODE_SUCCESS,C.Silent,i),this.hybridAuthCodeResponses.delete(o),n.add({accessTokenSize:i.accessToken.length,idTokenSize:i.idToken.length}),n.end({success:!0,isNativeBroker:i.fromNativeBroker,requestId:i.requestId}),i)).catch(i=>{throw this.hybridAuthCodeResponses.delete(o),this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_BY_CODE_FAILURE,C.Silent,null,i),n.end({errorCode:i.errorCode,subErrorCode:i.subError,success:!1}),i}),this.hybridAuthCodeResponses.set(o,r)),await r}else if(e.nativeAccountId){if(this.canUseNative(e,e.nativeAccountId))return await this.acquireTokenNative({...e,correlationId:t},O.acquireTokenByCode,e.nativeAccountId).catch(o=>{throw o instanceof he&&Oe(o)&&(this.nativeExtensionProvider=void 0),o});throw f(Kr)}else throw f(Dr)}catch(o){throw this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_BY_CODE_FAILURE,C.Silent,null,o),n.end({errorCode:o instanceof N&&o.errorCode||void 0,subErrorCode:o instanceof N&&o.subError||void 0,success:!1}),o}}async acquireTokenByCodeAsync(e){var o;return this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(h.AcquireTokenByCodeAsync,e.correlationId),(o=this.acquireTokenByCodeAsyncMeasurement)==null||o.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),await this.createSilentAuthCodeClient(e.correlationId).acquireToken(e).then(r=>{var i;return(i=this.acquireTokenByCodeAsyncMeasurement)==null||i.end({success:!0,fromCache:r.fromCache,isNativeBroker:r.fromNativeBroker,requestId:r.requestId}),r}).catch(r=>{var i;throw(i=this.acquireTokenByCodeAsyncMeasurement)==null||i.end({errorCode:r.errorCode,subErrorCode:r.subError,success:!1}),r}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenFromCache(e,t,n){switch(this.performanceClient.addQueueMeasurement(h.AcquireTokenFromCache,t.correlationId),n){case W.Default:case W.AccessToken:case W.AccessTokenAndRefreshToken:return p(e.acquireToken.bind(e),h.SilentCacheClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(t);default:throw g(fe)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(h.AcquireTokenByRefreshToken,e.correlationId),t){case W.Default:case W.AccessTokenAndRefreshToken:case W.RefreshToken:case W.RefreshTokenAndNetwork:const n=this.createSilentRefreshClient(e.correlationId);return p(n.acquireToken.bind(n),h.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw g(fe)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(h.AcquireTokenBySilentIframe,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return p(t.acquireToken.bind(t),h.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){const t=this.getRequestCorrelationId(e);return this.preflightBrowserEnvironmentCheck(C.Redirect),this.createRedirectClient(t).logout(e)}logoutPopup(e){try{const t=this.getRequestCorrelationId(e);return this.preflightBrowserEnvironmentCheck(C.Popup),this.createPopupClient(t).logout(e)}catch(t){return Promise.reject(t)}}async clearCache(e){const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){return this.logger.verbose("getAllAccounts called"),this.isBrowserEnvironment?this.browserStorage.getAllAccounts(e):[]}getAccount(e){if(this.logger.trace("getAccount called"),Object.keys(e).length===0)return this.logger.warning("getAccount: No accountFilter provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy(e);return t?(this.logger.verbose("getAccount: Account matching provided filter found, returning"),t):(this.logger.verbose("getAccount: No matching account found, returning null"),null)}getAccountByUsername(e){if(this.logger.trace("getAccountByUsername called"),!e)return this.logger.warning("getAccountByUsername: No username provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy({username:e});return t?(this.logger.verbose("getAccountByUsername: Account matching username found, returning"),this.logger.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${e}`),t):(this.logger.verbose("getAccountByUsername: No matching account found, returning null"),null)}getAccountByHomeId(e){if(this.logger.trace("getAccountByHomeId called"),!e)return this.logger.warning("getAccountByHomeId: No homeAccountId provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy({homeAccountId:e});return t?(this.logger.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),this.logger.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${e}`),t):(this.logger.verbose("getAccountByHomeId: No matching account found, returning null"),null)}getAccountByLocalId(e){if(this.logger.trace("getAccountByLocalId called"),!e)return this.logger.warning("getAccountByLocalId: No localAccountId provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy({localAccountId:e});return t?(this.logger.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),this.logger.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${e}`),t):(this.logger.verbose("getAccountByLocalId: No matching account found, returning null"),null)}setActiveAccount(e){this.browserStorage.setActiveAccount(e)}getActiveAccount(){return this.browserStorage.getActiveAccount()}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const n=D.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(n),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}preflightBrowserEnvironmentCheck(e,t=!1){if(this.logger.verbose("preflightBrowserEnvironmentCheck started"),Xs(this.isBrowserEnvironment),Qs(e,this.config.system.allowRedirectInIframe),Lt(),Js(),ho(this.initialized),e===C.Redirect&&this.config.cache.cacheLocation===U.MemoryStorage&&!this.config.cache.storeAuthStateInCookie)throw L(Qr);(e===C.Redirect||e===C.Popup)&&this.preflightInteractiveRequest(!t)}preflightInteractiveRequest(e){this.logger.verbose("preflightInteractiveRequest called, validating app environment"),Lt(),e&&this.getBrowserStorage().setInteractionInProgress(!0)}async acquireTokenNative(e,t,n){if(this.logger.trace("acquireTokenNative called"),!this.nativeExtensionProvider)throw f(Je);return new Le(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.nativeExtensionProvider,n||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e)}canUseNative(e,t){if(this.logger.trace("canUseNative called"),!ie.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme))return this.logger.trace("canUseNative: isNativeAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case $.NONE:case $.CONSENT:case $.LOGIN:this.logger.trace("canUseNative: prompt is compatible with native flow");break;default:return this.logger.trace(`canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`),!1}return!t&&!this.getNativeAccountId(e)?(this.logger.trace("canUseNative: nativeAccountId is not available, returning false"),!1):!0}getNativeAccountId(e){const t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new Lc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createRedirectClient(e){return new Uc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentIframeClient(e){return new xc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,O.ssoSilent,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentCacheClient(e){return new ei(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentRefreshClient(e){return new Gc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentAuthCodeClient(e){return new zc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,O.acquireTokenByCode,this.performanceClient,this.nativeExtensionProvider,e)}addEventCallback(e){return this.eventHandler.addEventCallback(e)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){this.eventHandler.enableAccountStorageEvents()}disableAccountStorageEvents(){this.eventHandler.disableAccountStorageEvents()}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}getBrowserStorage(){return this.browserStorage}isBrowserEnv(){return this.isBrowserEnvironment}getEventHandler(){return this.eventHandler}getRequestCorrelationId(e){return e!=null&&e.correlationId?e.correlationId:this.isBrowserEnvironment?ge():d.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||lo})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||lo})}async acquireTokenSilent(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(h.AcquireTokenSilent,t);n.add({cacheLookupPolicy:e.cacheLookupPolicy}),this.preflightBrowserEnvironmentCheck(C.Silent),this.logger.verbose("acquireTokenSilent called",t);const o=e.account||this.getActiveAccount();if(!o)throw f(kr);const r={clientId:this.config.auth.clientId,authority:e.authority||d.EMPTY_STRING,scopes:e.scopes,homeAccountIdentifier:o.homeAccountId,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid,shrOptions:e.shrOptions},i=JSON.stringify(r),s=this.activeSilentTokenRequests.get(i);if(typeof s>"u"){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",t);const c=p(this.acquireTokenSilentAsync.bind(this),h.AcquireTokenSilentAsync,this.logger,this.performanceClient,t)({...e,correlationId:t},o).then(l=>(this.activeSilentTokenRequests.delete(i),n.add({accessTokenSize:l.accessToken.length,idTokenSize:l.idToken.length}),n.end({success:!0,fromCache:l.fromCache,isNativeBroker:l.fromNativeBroker,cacheLookupPolicy:e.cacheLookupPolicy,requestId:l.requestId}),l)).catch(l=>{throw this.activeSilentTokenRequests.delete(i),n.end({errorCode:l.errorCode,subErrorCode:l.subError,success:!1}),l});return this.activeSilentTokenRequests.set(i,c),{...await c,state:e.state}}else return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",t),n.discard(),{...await s,state:e.state}}async acquireTokenSilentAsync(e,t){var o;this.performanceClient.addQueueMeasurement(h.AcquireTokenSilentAsync,e.correlationId),this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_START,C.Silent,e),this.atsAsyncMeasurement=this.performanceClient.startMeasurement(h.AcquireTokenSilentAsync,e.correlationId),(o=this.atsAsyncMeasurement)==null||o.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibility);let n;if(ie.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme)&&t.nativeAccountId){this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform");const r={...e,account:t};n=this.acquireTokenNative(r,O.acquireTokenSilent_silentFlow).catch(async i=>{if(i instanceof he&&Oe(i))return this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.nativeExtensionProvider=void 0,this.createSilentIframeClient(e.correlationId).acquireToken(e);throw i})}else{this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow");const r=this.createSilentCacheClient(e.correlationId),i=await p(r.initializeSilentRequest.bind(r),h.InitializeSilentRequest,this.logger,this.performanceClient,e.correlationId)(e,t),s=e.cacheLookupPolicy||W.Default;n=p(this.acquireTokenFromCache.bind(this),h.AcquireTokenFromCache,this.logger,this.performanceClient,i.correlationId)(r,i,s).catch(c=>{if(e.cacheLookupPolicy===W.AccessToken)throw c;return Lt(),this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_NETWORK_START,C.Silent,i),p(this.acquireTokenByRefreshToken.bind(this),h.AcquireTokenByRefreshToken,this.logger,this.performanceClient,i.correlationId)(i,s).catch(l=>{if(Vc(l,i,s))return this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",i.correlationId),p(this.acquireTokenBySilentIframe.bind(this),h.AcquireTokenBySilentIframe,this.logger,this.performanceClient,i.correlationId)(i);throw l})})}return n.then(r=>{var i;return this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_SUCCESS,C.Silent,r),(i=this.atsAsyncMeasurement)==null||i.end({success:!0,fromCache:r.fromCache,isNativeBroker:r.fromNativeBroker,requestId:r.requestId}),r}).catch(r=>{var i;throw this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_FAILURE,C.Silent,null,r),(i=this.atsAsyncMeasurement)==null||i.end({errorCode:r.errorCode,subErrorCode:r.subError,success:!1}),r}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibility)})}}function Vc(a,e,t){const n=!(a instanceof te&&a.subError!==kt),o=a.errorCode===X.INVALID_GRANT_ERROR||a.errorCode===fe,r=n&&o||a.errorCode===pt||a.errorCode===In,i=qs.includes(t);return r&&i}const Yc=Object.freeze(Object.defineProperty({__proto__:null,StandardController:Nt},Symbol.toStringTag,{value:"Module"}));/*! @azure/msal-browser v3.7.1 2024-01-23 */class Hn{static async createPublicClientApplication(e){const t=await ic(e);return new Hn(e,t)}constructor(e,t){if(t)this.controller=t;else{const n=new we(e);this.controller=new Nt(n)}}async initialize(){return this.controller.initialize()}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e){return this.controller.addEventCallback(e)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}/*! @azure/msal-browser v3.7.1 2024-01-23 */const jc={initialize:()=>Promise.reject(L(H)),acquireTokenPopup:()=>Promise.reject(L(H)),acquireTokenRedirect:()=>Promise.reject(L(H)),acquireTokenSilent:()=>Promise.reject(L(H)),acquireTokenByCode:()=>Promise.reject(L(H)),getAllAccounts:()=>[],getAccountByHomeId:()=>null,getAccountByUsername:()=>null,getAccountByLocalId:()=>null,handleRedirectPromise:()=>Promise.reject(L(H)),loginPopup:()=>Promise.reject(L(H)),loginRedirect:()=>Promise.reject(L(H)),logout:()=>Promise.reject(L(H)),logoutRedirect:()=>Promise.reject(L(H)),logoutPopup:()=>Promise.reject(L(H)),ssoSilent:()=>Promise.reject(L(H)),addEventCallback:()=>null,removeEventCallback:()=>{},addPerformanceCallback:()=>"",removePerformanceCallback:()=>!1,enableAccountStorageEvents:()=>{},disableAccountStorageEvents:()=>{},getTokenCache:()=>{throw L(H)},getLogger:()=>{throw L(H)},setLogger:()=>{},setActiveAccount:()=>{},getActiveAccount:()=>null,initializeWrapperLibrary:()=>{},setNavigationClient:()=>{},getConfiguration:()=>{throw L(H)},hydrateCache:()=>Promise.reject(L(H)),clearCache:()=>Promise.reject(L(H))};/*! @azure/msal-browser v3.7.1 2024-01-23 */class Wc{static getInteractionStatusFromEvent(e,t){switch(e.eventType){case T.LOGIN_START:return K.Login;case T.SSO_SILENT_START:return K.SsoSilent;case T.ACQUIRE_TOKEN_START:if(e.interactionType===C.Redirect||e.interactionType===C.Popup)return K.AcquireToken;break;case T.HANDLE_REDIRECT_START:return K.HandleRedirect;case T.LOGOUT_START:return K.Logout;case T.SSO_SILENT_SUCCESS:case T.SSO_SILENT_FAILURE:if(t&&t!==K.SsoSilent)break;return K.None;case T.LOGOUT_END:if(t&&t!==K.Logout)break;return K.None;case T.HANDLE_REDIRECT_END:if(t&&t!==K.HandleRedirect)break;return K.None;case T.LOGIN_SUCCESS:case T.LOGIN_FAILURE:case T.ACQUIRE_TOKEN_SUCCESS:case T.ACQUIRE_TOKEN_FAILURE:case T.RESTORE_FROM_BFCACHE:if(e.interactionType===C.Redirect||e.interactionType===C.Popup){if(t&&t!==K.Login&&t!==K.AcquireToken)break;return K.None}break}return null}}/*! @azure/msal-react v2.0.10 2024-01-23 */const Qc={instance:jc,inProgress:K.None,accounts:[],logger:new ye({})},oi=xe.createContext(Qc);oi.Consumer;/*! @azure/msal-react v2.0.10 2024-01-23 */function Co(a,e){if(a.length!==e.length)return!1;const t=[...e];return a.every(n=>{const o=t.shift();return!n||!o?!1:n.homeAccountId===o.homeAccountId&&n.localAccountId===o.localAccountId&&n.username===o.username})}/*! @azure/msal-react v2.0.10 2024-01-23 */const Jc="@azure/msal-react",yo="2.0.10";/*! @azure/msal-react v2.0.10 2024-01-23 */const At={UNBLOCK_INPROGRESS:"UNBLOCK_INPROGRESS",EVENT:"EVENT"},Xc=(a,e)=>{const{type:t,payload:n}=e;let o=a.inProgress;switch(t){case At.UNBLOCK_INPROGRESS:a.inProgress===K.Startup&&(o=K.None,n.logger.info("MsalProvider - handleRedirectPromise resolved, setting inProgress to 'none'"));break;case At.EVENT:const i=n.message,s=Wc.getInteractionStatusFromEvent(i,a.inProgress);s&&(n.logger.info(`MsalProvider - ${i.eventType} results in setting inProgress from ${a.inProgress} to ${s}`),o=s);break;default:throw new Error(`Unknown action type: ${t}`)}const r=n.instance.getAllAccounts();return o!==a.inProgress&&!Co(r,a.accounts)?{...a,inProgress:o,accounts:r}:o!==a.inProgress?{...a,inProgress:o}:Co(r,a.accounts)?a:{...a,accounts:r}};function Zc({instance:a,children:e}){xe.useEffect(()=>{a.initializeWrapperLibrary(Fs.React,yo)},[a]);const t=xe.useMemo(()=>a.getLogger().clone(Jc,yo),[a]),[n,o]=xe.useReducer(Xc,void 0,()=>({inProgress:K.Startup,accounts:a.getAllAccounts()}));xe.useEffect(()=>{const i=a.addEventCallback(s=>{o({payload:{instance:a,logger:t,message:s},type:At.EVENT})});return t.verbose(`MsalProvider - Registered event callback with id: ${i}`),a.initialize().then(()=>{a.handleRedirectPromise().catch(()=>{}).finally(()=>{o({payload:{instance:a,logger:t},type:At.UNBLOCK_INPROGRESS})})}).catch(()=>{}),()=>{i&&(t.verbose(`MsalProvider - Removing event callback ${i}`),a.removeEventCallback(i))}},[a,t]);const r={instance:a,inProgress:n.inProgress,accounts:n.accounts,logger:t};return ai.createElement(oi.Provider,{value:r},e)}function Kn({instance:a}){return Kt.jsx(Zc,{instance:a,children:Kt.jsx(ci,{instance:a})})}Kn.__docgenInfo={description:`APP Function
@type {Function}`,methods:[],displayName:"App"};const el={auth:{clientId:"7303f4ee-6576-410d-92e7-70edbbaf4a9b",authority:"https://login.microsoftonline.com/4d4343c6-067a-4794-91f3-5cb10073e5b4",redirectUri:"http://localhost:6006/",postLogoutRedirectUri:"http://localhost:6006/",navigateToLoginRequestUrl:!1},cache:{cacheLocation:"localstorage",storeAuthStateInCookie:!1},system:{loggerOptions:{loggerCallback:(a,e,t)=>{if(!t)switch(a){case R.Error:return;case R.Info:return;case R.Verbose:return;case R.Warning:return}}}}},dl={title:"components/App",component:Kn},tl=new Hn(el),$e=()=>Kt.jsx(Kn,{instance:tl});$e.__docgenInfo={description:"",methods:[],displayName:"Primary"};var To,Ao,Io;$e.parameters={...$e.parameters,docs:{...(To=$e.parameters)==null?void 0:To.docs,source:{originalSource:"() => <App instance={msalInstance}></App>",...(Io=(Ao=$e.parameters)==null?void 0:Ao.docs)==null?void 0:Io.source}}};const ul=["Primary"];export{$e as Primary,ul as __namedExportsOrder,dl as default};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
